ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"UART_TEST.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	UART_TEST_initVar
  19              		.bss
  20              		.type	UART_TEST_initVar, %object
  21              		.size	UART_TEST_initVar, 1
  22              	UART_TEST_initVar:
  23 0000 00       		.space	1
  24              		.comm	UART_TEST_txBuffer,32,4
  25              		.global	UART_TEST_txBufferRead
  26              		.type	UART_TEST_txBufferRead, %object
  27              		.size	UART_TEST_txBufferRead, 1
  28              	UART_TEST_txBufferRead:
  29 0001 00       		.space	1
  30              		.global	UART_TEST_txBufferWrite
  31              		.type	UART_TEST_txBufferWrite, %object
  32              		.size	UART_TEST_txBufferWrite, 1
  33              	UART_TEST_txBufferWrite:
  34 0002 00       		.space	1
  35              		.section	.text.UART_TEST_Start,"ax",%progbits
  36              		.align	2
  37              		.global	UART_TEST_Start
  38              		.thumb
  39              		.thumb_func
  40              		.type	UART_TEST_Start, %function
  41              	UART_TEST_Start:
  42              	.LFB0:
  43              		.file 1 ".\\Generated_Source\\PSoC5\\UART_TEST.c"
   1:.\Generated_Source\PSoC5/UART_TEST.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/UART_TEST.c **** * File Name: UART_TEST.c
   3:.\Generated_Source\PSoC5/UART_TEST.c **** * Version 2.30
   4:.\Generated_Source\PSoC5/UART_TEST.c **** *
   5:.\Generated_Source\PSoC5/UART_TEST.c **** * Description:
   6:.\Generated_Source\PSoC5/UART_TEST.c **** *  This file provides all API functionality of the UART component
   7:.\Generated_Source\PSoC5/UART_TEST.c **** *
   8:.\Generated_Source\PSoC5/UART_TEST.c **** * Note:
   9:.\Generated_Source\PSoC5/UART_TEST.c **** *
  10:.\Generated_Source\PSoC5/UART_TEST.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/UART_TEST.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/UART_TEST.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC5/UART_TEST.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC5/UART_TEST.c **** * the software package with which this file was provided.
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 2


  15:.\Generated_Source\PSoC5/UART_TEST.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/UART_TEST.c **** 
  17:.\Generated_Source\PSoC5/UART_TEST.c **** #include "UART_TEST.h"
  18:.\Generated_Source\PSoC5/UART_TEST.c **** #include "CyLib.h"
  19:.\Generated_Source\PSoC5/UART_TEST.c **** #if(UART_TEST_INTERNAL_CLOCK_USED)
  20:.\Generated_Source\PSoC5/UART_TEST.c ****     #include "UART_TEST_IntClock.h"
  21:.\Generated_Source\PSoC5/UART_TEST.c **** #endif /* End UART_TEST_INTERNAL_CLOCK_USED */
  22:.\Generated_Source\PSoC5/UART_TEST.c **** 
  23:.\Generated_Source\PSoC5/UART_TEST.c **** 
  24:.\Generated_Source\PSoC5/UART_TEST.c **** /***************************************
  25:.\Generated_Source\PSoC5/UART_TEST.c **** * Global data allocation
  26:.\Generated_Source\PSoC5/UART_TEST.c **** ***************************************/
  27:.\Generated_Source\PSoC5/UART_TEST.c **** 
  28:.\Generated_Source\PSoC5/UART_TEST.c **** uint8 UART_TEST_initVar = 0u;
  29:.\Generated_Source\PSoC5/UART_TEST.c **** #if( UART_TEST_TX_ENABLED && (UART_TEST_TXBUFFERSIZE > UART_TEST_FIFO_LENGTH))
  30:.\Generated_Source\PSoC5/UART_TEST.c ****     volatile uint8 UART_TEST_txBuffer[UART_TEST_TXBUFFERSIZE];
  31:.\Generated_Source\PSoC5/UART_TEST.c ****     volatile uint8 UART_TEST_txBufferRead = 0u;
  32:.\Generated_Source\PSoC5/UART_TEST.c ****     uint8 UART_TEST_txBufferWrite = 0u;
  33:.\Generated_Source\PSoC5/UART_TEST.c **** #endif /* End UART_TEST_TX_ENABLED */
  34:.\Generated_Source\PSoC5/UART_TEST.c **** #if( ( UART_TEST_RX_ENABLED || UART_TEST_HD_ENABLED ) && \
  35:.\Generated_Source\PSoC5/UART_TEST.c ****      (UART_TEST_RXBUFFERSIZE > UART_TEST_FIFO_LENGTH) )
  36:.\Generated_Source\PSoC5/UART_TEST.c ****     volatile uint8 UART_TEST_rxBuffer[UART_TEST_RXBUFFERSIZE];
  37:.\Generated_Source\PSoC5/UART_TEST.c ****     volatile uint8 UART_TEST_rxBufferRead = 0u;
  38:.\Generated_Source\PSoC5/UART_TEST.c ****     volatile uint8 UART_TEST_rxBufferWrite = 0u;
  39:.\Generated_Source\PSoC5/UART_TEST.c ****     volatile uint8 UART_TEST_rxBufferLoopDetect = 0u;
  40:.\Generated_Source\PSoC5/UART_TEST.c ****     volatile uint8 UART_TEST_rxBufferOverflow = 0u;
  41:.\Generated_Source\PSoC5/UART_TEST.c ****     #if (UART_TEST_RXHW_ADDRESS_ENABLED)
  42:.\Generated_Source\PSoC5/UART_TEST.c ****         volatile uint8 UART_TEST_rxAddressMode = UART_TEST_RXADDRESSMODE;
  43:.\Generated_Source\PSoC5/UART_TEST.c ****         volatile uint8 UART_TEST_rxAddressDetected = 0u;
  44:.\Generated_Source\PSoC5/UART_TEST.c ****     #endif /* End EnableHWAddress */
  45:.\Generated_Source\PSoC5/UART_TEST.c **** #endif /* End UART_TEST_RX_ENABLED */
  46:.\Generated_Source\PSoC5/UART_TEST.c **** 
  47:.\Generated_Source\PSoC5/UART_TEST.c **** 
  48:.\Generated_Source\PSoC5/UART_TEST.c **** /*******************************************************************************
  49:.\Generated_Source\PSoC5/UART_TEST.c **** * Function Name: UART_TEST_Start
  50:.\Generated_Source\PSoC5/UART_TEST.c **** ********************************************************************************
  51:.\Generated_Source\PSoC5/UART_TEST.c **** *
  52:.\Generated_Source\PSoC5/UART_TEST.c **** * Summary:
  53:.\Generated_Source\PSoC5/UART_TEST.c **** *  Initialize and Enable the UART component.
  54:.\Generated_Source\PSoC5/UART_TEST.c **** *  Enable the clock input to enable operation.
  55:.\Generated_Source\PSoC5/UART_TEST.c **** *
  56:.\Generated_Source\PSoC5/UART_TEST.c **** * Parameters:
  57:.\Generated_Source\PSoC5/UART_TEST.c **** *  None.
  58:.\Generated_Source\PSoC5/UART_TEST.c **** *
  59:.\Generated_Source\PSoC5/UART_TEST.c **** * Return:
  60:.\Generated_Source\PSoC5/UART_TEST.c **** *  None.
  61:.\Generated_Source\PSoC5/UART_TEST.c **** *
  62:.\Generated_Source\PSoC5/UART_TEST.c **** * Global variables:
  63:.\Generated_Source\PSoC5/UART_TEST.c **** *  The UART_TEST_intiVar variable is used to indicate initial
  64:.\Generated_Source\PSoC5/UART_TEST.c **** *  configuration of this component. The variable is initialized to zero (0u)
  65:.\Generated_Source\PSoC5/UART_TEST.c **** *  and set to one (1u) the first time UART_Start() is called. This allows for
  66:.\Generated_Source\PSoC5/UART_TEST.c **** *  component initialization without re-initialization in all subsequent calls
  67:.\Generated_Source\PSoC5/UART_TEST.c **** *  to the UART_TEST_Start() routine.
  68:.\Generated_Source\PSoC5/UART_TEST.c **** *
  69:.\Generated_Source\PSoC5/UART_TEST.c **** * Reentrant:
  70:.\Generated_Source\PSoC5/UART_TEST.c **** *  No.
  71:.\Generated_Source\PSoC5/UART_TEST.c **** *
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 3


  72:.\Generated_Source\PSoC5/UART_TEST.c **** *******************************************************************************/
  73:.\Generated_Source\PSoC5/UART_TEST.c **** void UART_TEST_Start(void) 
  74:.\Generated_Source\PSoC5/UART_TEST.c **** {
  44              		.loc 1 74 0
  45              		.cfi_startproc
  46              		@ args = 0, pretend = 0, frame = 0
  47              		@ frame_needed = 1, uses_anonymous_args = 0
  48 0000 80B5     		push	{r7, lr}
  49              	.LCFI0:
  50              		.cfi_def_cfa_offset 8
  51              		.cfi_offset 7, -8
  52              		.cfi_offset 14, -4
  53 0002 00AF     		add	r7, sp, #0
  54              	.LCFI1:
  55              		.cfi_def_cfa_register 7
  75:.\Generated_Source\PSoC5/UART_TEST.c ****     /* If not Initialized then initialize all required hardware and software */
  76:.\Generated_Source\PSoC5/UART_TEST.c ****     if(UART_TEST_initVar == 0u)
  56              		.loc 1 76 0
  57 0004 40F20003 		movw	r3, #:lower16:UART_TEST_initVar
  58 0008 C0F20003 		movt	r3, #:upper16:UART_TEST_initVar
  59 000c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  60 000e 002B     		cmp	r3, #0
  61 0010 08D1     		bne	.L2
  77:.\Generated_Source\PSoC5/UART_TEST.c ****     {
  78:.\Generated_Source\PSoC5/UART_TEST.c ****         UART_TEST_Init();
  62              		.loc 1 78 0
  63 0012 FFF7FEFF 		bl	UART_TEST_Init
  79:.\Generated_Source\PSoC5/UART_TEST.c ****         UART_TEST_initVar = 1u;
  64              		.loc 1 79 0
  65 0016 40F20003 		movw	r3, #:lower16:UART_TEST_initVar
  66 001a C0F20003 		movt	r3, #:upper16:UART_TEST_initVar
  67 001e 4FF00102 		mov	r2, #1
  68 0022 1A70     		strb	r2, [r3, #0]
  69              	.L2:
  80:.\Generated_Source\PSoC5/UART_TEST.c ****     }
  81:.\Generated_Source\PSoC5/UART_TEST.c ****     UART_TEST_Enable();
  70              		.loc 1 81 0
  71 0024 FFF7FEFF 		bl	UART_TEST_Enable
  82:.\Generated_Source\PSoC5/UART_TEST.c **** }
  72              		.loc 1 82 0
  73 0028 80BD     		pop	{r7, pc}
  74              		.cfi_endproc
  75              	.LFE0:
  76              		.size	UART_TEST_Start, .-UART_TEST_Start
  77 002a 00BF     		.section	.text.UART_TEST_Init,"ax",%progbits
  78              		.align	2
  79              		.global	UART_TEST_Init
  80              		.thumb
  81              		.thumb_func
  82              		.type	UART_TEST_Init, %function
  83              	UART_TEST_Init:
  84              	.LFB1:
  83:.\Generated_Source\PSoC5/UART_TEST.c **** 
  84:.\Generated_Source\PSoC5/UART_TEST.c **** 
  85:.\Generated_Source\PSoC5/UART_TEST.c **** /*******************************************************************************
  86:.\Generated_Source\PSoC5/UART_TEST.c **** * Function Name: UART_TEST_Init
  87:.\Generated_Source\PSoC5/UART_TEST.c **** ********************************************************************************
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 4


  88:.\Generated_Source\PSoC5/UART_TEST.c **** *
  89:.\Generated_Source\PSoC5/UART_TEST.c **** * Summary:
  90:.\Generated_Source\PSoC5/UART_TEST.c **** *  Initialize component's parameters to the parameters set by user in the
  91:.\Generated_Source\PSoC5/UART_TEST.c **** *  customizer of the component placed onto schematic. Usually called in
  92:.\Generated_Source\PSoC5/UART_TEST.c **** *  UART_TEST_Start().
  93:.\Generated_Source\PSoC5/UART_TEST.c **** *
  94:.\Generated_Source\PSoC5/UART_TEST.c **** * Parameters:
  95:.\Generated_Source\PSoC5/UART_TEST.c **** *  None.
  96:.\Generated_Source\PSoC5/UART_TEST.c **** *
  97:.\Generated_Source\PSoC5/UART_TEST.c **** * Return:
  98:.\Generated_Source\PSoC5/UART_TEST.c **** *  None.
  99:.\Generated_Source\PSoC5/UART_TEST.c **** *
 100:.\Generated_Source\PSoC5/UART_TEST.c **** *******************************************************************************/
 101:.\Generated_Source\PSoC5/UART_TEST.c **** void UART_TEST_Init(void) 
 102:.\Generated_Source\PSoC5/UART_TEST.c **** {
  85              		.loc 1 102 0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 1, uses_anonymous_args = 0
  89 0000 80B5     		push	{r7, lr}
  90              	.LCFI2:
  91              		.cfi_def_cfa_offset 8
  92              		.cfi_offset 7, -8
  93              		.cfi_offset 14, -4
  94 0002 00AF     		add	r7, sp, #0
  95              	.LCFI3:
  96              		.cfi_def_cfa_register 7
 103:.\Generated_Source\PSoC5/UART_TEST.c ****     #if(UART_TEST_RX_ENABLED || UART_TEST_HD_ENABLED)
 104:.\Generated_Source\PSoC5/UART_TEST.c **** 
 105:.\Generated_Source\PSoC5/UART_TEST.c ****         #if(UART_TEST_RX_INTERRUPT_ENABLED && (UART_TEST_RXBUFFERSIZE > UART_TEST_FIFO_LENGTH))
 106:.\Generated_Source\PSoC5/UART_TEST.c ****             /* Set the RX Interrupt. */
 107:.\Generated_Source\PSoC5/UART_TEST.c ****             (void)CyIntSetVector(UART_TEST_RX_VECT_NUM, &UART_TEST_RXISR);
 108:.\Generated_Source\PSoC5/UART_TEST.c ****             CyIntSetPriority(UART_TEST_RX_VECT_NUM, UART_TEST_RX_PRIOR_NUM);
 109:.\Generated_Source\PSoC5/UART_TEST.c ****         #endif /* End UART_TEST_RX_INTERRUPT_ENABLED */
 110:.\Generated_Source\PSoC5/UART_TEST.c **** 
 111:.\Generated_Source\PSoC5/UART_TEST.c ****         #if (UART_TEST_RXHW_ADDRESS_ENABLED)
 112:.\Generated_Source\PSoC5/UART_TEST.c ****             UART_TEST_SetRxAddressMode(UART_TEST_RXAddressMode);
 113:.\Generated_Source\PSoC5/UART_TEST.c ****             UART_TEST_SetRxAddress1(UART_TEST_RXHWADDRESS1);
 114:.\Generated_Source\PSoC5/UART_TEST.c ****             UART_TEST_SetRxAddress2(UART_TEST_RXHWADDRESS2);
 115:.\Generated_Source\PSoC5/UART_TEST.c ****         #endif /* End UART_TEST_RXHW_ADDRESS_ENABLED */
 116:.\Generated_Source\PSoC5/UART_TEST.c **** 
 117:.\Generated_Source\PSoC5/UART_TEST.c ****         /* Init Count7 period */
 118:.\Generated_Source\PSoC5/UART_TEST.c ****         UART_TEST_RXBITCTR_PERIOD_REG = UART_TEST_RXBITCTR_INIT;
 119:.\Generated_Source\PSoC5/UART_TEST.c ****         /* Configure the Initial RX interrupt mask */
 120:.\Generated_Source\PSoC5/UART_TEST.c ****         UART_TEST_RXSTATUS_MASK_REG  = UART_TEST_INIT_RX_INTERRUPTS_MASK;
 121:.\Generated_Source\PSoC5/UART_TEST.c ****     #endif /* End UART_TEST_RX_ENABLED || UART_TEST_HD_ENABLED*/
 122:.\Generated_Source\PSoC5/UART_TEST.c **** 
 123:.\Generated_Source\PSoC5/UART_TEST.c ****     #if(UART_TEST_TX_ENABLED)
 124:.\Generated_Source\PSoC5/UART_TEST.c ****         #if(UART_TEST_TX_INTERRUPT_ENABLED && (UART_TEST_TXBUFFERSIZE > UART_TEST_FIFO_LENGTH))
 125:.\Generated_Source\PSoC5/UART_TEST.c ****             /* Set the TX Interrupt. */
 126:.\Generated_Source\PSoC5/UART_TEST.c ****             (void)CyIntSetVector(UART_TEST_TX_VECT_NUM, &UART_TEST_TXISR);
  97              		.loc 1 126 0
  98 0004 4FF00500 		mov	r0, #5
  99 0008 40F20001 		movw	r1, #:lower16:UART_TEST_TXISR
 100 000c C0F20001 		movt	r1, #:upper16:UART_TEST_TXISR
 101 0010 FFF7FEFF 		bl	CyIntSetVector
 127:.\Generated_Source\PSoC5/UART_TEST.c ****             CyIntSetPriority(UART_TEST_TX_VECT_NUM, UART_TEST_TX_PRIOR_NUM);
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 5


 102              		.loc 1 127 0
 103 0014 4FF00500 		mov	r0, #5
 104 0018 4FF00701 		mov	r1, #7
 105 001c FFF7FEFF 		bl	CyIntSetPriority
 128:.\Generated_Source\PSoC5/UART_TEST.c ****         #endif /* End UART_TEST_TX_INTERRUPT_ENABLED */
 129:.\Generated_Source\PSoC5/UART_TEST.c **** 
 130:.\Generated_Source\PSoC5/UART_TEST.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 131:.\Generated_Source\PSoC5/UART_TEST.c ****         #if(UART_TEST_TXCLKGEN_DP)
 132:.\Generated_Source\PSoC5/UART_TEST.c ****             UART_TEST_TXBITCLKGEN_CTR_REG = UART_TEST_BIT_CENTER;
 106              		.loc 1 132 0
 107 0020 46F22743 		movw	r3, #25639
 108 0024 C4F20003 		movt	r3, 16384
 109 0028 4FF00702 		mov	r2, #7
 110 002c 1A70     		strb	r2, [r3, #0]
 133:.\Generated_Source\PSoC5/UART_TEST.c ****             UART_TEST_TXBITCLKTX_COMPLETE_REG = (UART_TEST_NUMBER_OF_DATA_BITS +
 111              		.loc 1 133 0
 112 002e 46F23743 		movw	r3, #25655
 113 0032 C4F20003 		movt	r3, 16384
 114 0036 4FF04802 		mov	r2, #72
 115 003a 1A70     		strb	r2, [r3, #0]
 134:.\Generated_Source\PSoC5/UART_TEST.c ****                         UART_TEST_NUMBER_OF_START_BIT) * UART_TEST_OVER_SAMPLE_COUNT;
 135:.\Generated_Source\PSoC5/UART_TEST.c ****         #else
 136:.\Generated_Source\PSoC5/UART_TEST.c ****             UART_TEST_TXBITCTR_PERIOD_REG = ((UART_TEST_NUMBER_OF_DATA_BITS +
 137:.\Generated_Source\PSoC5/UART_TEST.c ****                         UART_TEST_NUMBER_OF_START_BIT) * UART_TEST_OVER_SAMPLE_8) - 1u;
 138:.\Generated_Source\PSoC5/UART_TEST.c ****         #endif /* End UART_TEST_TXCLKGEN_DP */
 139:.\Generated_Source\PSoC5/UART_TEST.c **** 
 140:.\Generated_Source\PSoC5/UART_TEST.c ****         /* Configure the Initial TX interrupt mask */
 141:.\Generated_Source\PSoC5/UART_TEST.c ****         #if(UART_TEST_TX_INTERRUPT_ENABLED && (UART_TEST_TXBUFFERSIZE > UART_TEST_FIFO_LENGTH))
 142:.\Generated_Source\PSoC5/UART_TEST.c ****             UART_TEST_TXSTATUS_MASK_REG = UART_TEST_TX_STS_FIFO_EMPTY;
 116              		.loc 1 142 0
 117 003c 46F28343 		movw	r3, #25731
 118 0040 C4F20003 		movt	r3, 16384
 119 0044 4FF00202 		mov	r2, #2
 120 0048 1A70     		strb	r2, [r3, #0]
 143:.\Generated_Source\PSoC5/UART_TEST.c ****         #else
 144:.\Generated_Source\PSoC5/UART_TEST.c ****             UART_TEST_TXSTATUS_MASK_REG = UART_TEST_INIT_TX_INTERRUPTS_MASK;
 145:.\Generated_Source\PSoC5/UART_TEST.c ****         #endif /*End UART_TEST_TX_INTERRUPT_ENABLED*/
 146:.\Generated_Source\PSoC5/UART_TEST.c **** 
 147:.\Generated_Source\PSoC5/UART_TEST.c ****     #endif /* End UART_TEST_TX_ENABLED */
 148:.\Generated_Source\PSoC5/UART_TEST.c **** 
 149:.\Generated_Source\PSoC5/UART_TEST.c ****     #if(UART_TEST_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 150:.\Generated_Source\PSoC5/UART_TEST.c ****         UART_TEST_WriteControlRegister( \
 151:.\Generated_Source\PSoC5/UART_TEST.c ****             (UART_TEST_ReadControlRegister() & (uint8)~UART_TEST_CTRL_PARITY_TYPE_MASK) | \
 152:.\Generated_Source\PSoC5/UART_TEST.c ****             (uint8)(UART_TEST_PARITY_TYPE << UART_TEST_CTRL_PARITY_TYPE0_SHIFT) );
 153:.\Generated_Source\PSoC5/UART_TEST.c ****     #endif /* End UART_TEST_PARITY_TYPE_SW */
 154:.\Generated_Source\PSoC5/UART_TEST.c **** }
 121              		.loc 1 154 0
 122 004a 80BD     		pop	{r7, pc}
 123              		.cfi_endproc
 124              	.LFE1:
 125              		.size	UART_TEST_Init, .-UART_TEST_Init
 126              		.section	.text.UART_TEST_Enable,"ax",%progbits
 127              		.align	2
 128              		.global	UART_TEST_Enable
 129              		.thumb
 130              		.thumb_func
 131              		.type	UART_TEST_Enable, %function
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 6


 132              	UART_TEST_Enable:
 133              	.LFB2:
 155:.\Generated_Source\PSoC5/UART_TEST.c **** 
 156:.\Generated_Source\PSoC5/UART_TEST.c **** 
 157:.\Generated_Source\PSoC5/UART_TEST.c **** /*******************************************************************************
 158:.\Generated_Source\PSoC5/UART_TEST.c **** * Function Name: UART_TEST_Enable
 159:.\Generated_Source\PSoC5/UART_TEST.c **** ********************************************************************************
 160:.\Generated_Source\PSoC5/UART_TEST.c **** *
 161:.\Generated_Source\PSoC5/UART_TEST.c **** * Summary:
 162:.\Generated_Source\PSoC5/UART_TEST.c **** *  Enables the UART block operation
 163:.\Generated_Source\PSoC5/UART_TEST.c **** *
 164:.\Generated_Source\PSoC5/UART_TEST.c **** * Parameters:
 165:.\Generated_Source\PSoC5/UART_TEST.c **** *  None.
 166:.\Generated_Source\PSoC5/UART_TEST.c **** *
 167:.\Generated_Source\PSoC5/UART_TEST.c **** * Return:
 168:.\Generated_Source\PSoC5/UART_TEST.c **** *  None.
 169:.\Generated_Source\PSoC5/UART_TEST.c **** *
 170:.\Generated_Source\PSoC5/UART_TEST.c **** * Global Variables:
 171:.\Generated_Source\PSoC5/UART_TEST.c **** *  UART_TEST_rxAddressDetected - set to initial state (0).
 172:.\Generated_Source\PSoC5/UART_TEST.c **** *
 173:.\Generated_Source\PSoC5/UART_TEST.c **** *******************************************************************************/
 174:.\Generated_Source\PSoC5/UART_TEST.c **** void UART_TEST_Enable(void) 
 175:.\Generated_Source\PSoC5/UART_TEST.c **** {
 134              		.loc 1 175 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 8
 137              		@ frame_needed = 1, uses_anonymous_args = 0
 138 0000 80B5     		push	{r7, lr}
 139              	.LCFI4:
 140              		.cfi_def_cfa_offset 8
 141              		.cfi_offset 7, -8
 142              		.cfi_offset 14, -4
 143 0002 82B0     		sub	sp, sp, #8
 144              	.LCFI5:
 145              		.cfi_def_cfa_offset 16
 146 0004 00AF     		add	r7, sp, #0
 147              	.LCFI6:
 148              		.cfi_def_cfa_register 7
 176:.\Generated_Source\PSoC5/UART_TEST.c ****     uint8 enableInterrupts;
 177:.\Generated_Source\PSoC5/UART_TEST.c ****     enableInterrupts = CyEnterCriticalSection();
 149              		.loc 1 177 0
 150 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 151 000a 0346     		mov	r3, r0
 152 000c FB71     		strb	r3, [r7, #7]
 178:.\Generated_Source\PSoC5/UART_TEST.c **** 
 179:.\Generated_Source\PSoC5/UART_TEST.c ****     #if(UART_TEST_RX_ENABLED || UART_TEST_HD_ENABLED)
 180:.\Generated_Source\PSoC5/UART_TEST.c ****         /*RX Counter (Count7) Enable */
 181:.\Generated_Source\PSoC5/UART_TEST.c ****         UART_TEST_RXBITCTR_CONTROL_REG |= UART_TEST_CNTR_ENABLE;
 182:.\Generated_Source\PSoC5/UART_TEST.c ****         /* Enable the RX Interrupt. */
 183:.\Generated_Source\PSoC5/UART_TEST.c ****         UART_TEST_RXSTATUS_ACTL_REG  |= UART_TEST_INT_ENABLE;
 184:.\Generated_Source\PSoC5/UART_TEST.c ****         #if(UART_TEST_RX_INTERRUPT_ENABLED && (UART_TEST_RXBUFFERSIZE > UART_TEST_FIFO_LENGTH))
 185:.\Generated_Source\PSoC5/UART_TEST.c ****             CyIntEnable(UART_TEST_RX_VECT_NUM);
 186:.\Generated_Source\PSoC5/UART_TEST.c ****             #if (UART_TEST_RXHW_ADDRESS_ENABLED)
 187:.\Generated_Source\PSoC5/UART_TEST.c ****                 UART_TEST_rxAddressDetected = 0u;
 188:.\Generated_Source\PSoC5/UART_TEST.c ****             #endif /* End UART_TEST_RXHW_ADDRESS_ENABLED */
 189:.\Generated_Source\PSoC5/UART_TEST.c ****         #endif /* End UART_TEST_RX_INTERRUPT_ENABLED */
 190:.\Generated_Source\PSoC5/UART_TEST.c ****     #endif /* End UART_TEST_RX_ENABLED || UART_TEST_HD_ENABLED*/
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 7


 191:.\Generated_Source\PSoC5/UART_TEST.c **** 
 192:.\Generated_Source\PSoC5/UART_TEST.c ****     #if(UART_TEST_TX_ENABLED)
 193:.\Generated_Source\PSoC5/UART_TEST.c ****         /*TX Counter (DP/Count7) Enable */
 194:.\Generated_Source\PSoC5/UART_TEST.c ****         #if(!UART_TEST_TXCLKGEN_DP)
 195:.\Generated_Source\PSoC5/UART_TEST.c ****             UART_TEST_TXBITCTR_CONTROL_REG |= UART_TEST_CNTR_ENABLE;
 196:.\Generated_Source\PSoC5/UART_TEST.c ****         #endif /* End UART_TEST_TXCLKGEN_DP */
 197:.\Generated_Source\PSoC5/UART_TEST.c ****         /* Enable the TX Interrupt. */
 198:.\Generated_Source\PSoC5/UART_TEST.c ****         UART_TEST_TXSTATUS_ACTL_REG |= UART_TEST_INT_ENABLE;
 153              		.loc 1 198 0
 154 000e 46F29343 		movw	r3, #25747
 155 0012 C4F20003 		movt	r3, 16384
 156 0016 46F29342 		movw	r2, #25747
 157 001a C4F20002 		movt	r2, 16384
 158 001e 1278     		ldrb	r2, [r2, #0]
 159 0020 D2B2     		uxtb	r2, r2
 160 0022 42F01002 		orr	r2, r2, #16
 161 0026 D2B2     		uxtb	r2, r2
 162 0028 1A70     		strb	r2, [r3, #0]
 199:.\Generated_Source\PSoC5/UART_TEST.c ****         #if(UART_TEST_TX_INTERRUPT_ENABLED && (UART_TEST_TXBUFFERSIZE > UART_TEST_FIFO_LENGTH))
 200:.\Generated_Source\PSoC5/UART_TEST.c ****             CyIntEnable(UART_TEST_TX_VECT_NUM);
 163              		.loc 1 200 0
 164 002a 4FF46143 		mov	r3, #57600
 165 002e CEF20003 		movt	r3, 57344
 166 0032 4FF02002 		mov	r2, #32
 167 0036 1A60     		str	r2, [r3, #0]
 201:.\Generated_Source\PSoC5/UART_TEST.c ****         #endif /* End UART_TEST_TX_INTERRUPT_ENABLED*/
 202:.\Generated_Source\PSoC5/UART_TEST.c ****      #endif /* End UART_TEST_TX_ENABLED */
 203:.\Generated_Source\PSoC5/UART_TEST.c **** 
 204:.\Generated_Source\PSoC5/UART_TEST.c ****     #if(UART_TEST_INTERNAL_CLOCK_USED)
 205:.\Generated_Source\PSoC5/UART_TEST.c ****         /* Enable the clock. */
 206:.\Generated_Source\PSoC5/UART_TEST.c ****         UART_TEST_IntClock_Start();
 168              		.loc 1 206 0
 169 0038 FFF7FEFF 		bl	UART_TEST_IntClock_Start
 207:.\Generated_Source\PSoC5/UART_TEST.c ****     #endif /* End UART_TEST_INTERNAL_CLOCK_USED */
 208:.\Generated_Source\PSoC5/UART_TEST.c **** 
 209:.\Generated_Source\PSoC5/UART_TEST.c ****     CyExitCriticalSection(enableInterrupts);
 170              		.loc 1 209 0
 171 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 172 003e 1846     		mov	r0, r3
 173 0040 FFF7FEFF 		bl	CyExitCriticalSection
 210:.\Generated_Source\PSoC5/UART_TEST.c **** }
 174              		.loc 1 210 0
 175 0044 07F10807 		add	r7, r7, #8
 176 0048 BD46     		mov	sp, r7
 177 004a 80BD     		pop	{r7, pc}
 178              		.cfi_endproc
 179              	.LFE2:
 180              		.size	UART_TEST_Enable, .-UART_TEST_Enable
 181              		.section	.text.UART_TEST_Stop,"ax",%progbits
 182              		.align	2
 183              		.global	UART_TEST_Stop
 184              		.thumb
 185              		.thumb_func
 186              		.type	UART_TEST_Stop, %function
 187              	UART_TEST_Stop:
 188              	.LFB3:
 211:.\Generated_Source\PSoC5/UART_TEST.c **** 
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 8


 212:.\Generated_Source\PSoC5/UART_TEST.c **** 
 213:.\Generated_Source\PSoC5/UART_TEST.c **** /*******************************************************************************
 214:.\Generated_Source\PSoC5/UART_TEST.c **** * Function Name: UART_TEST_Stop
 215:.\Generated_Source\PSoC5/UART_TEST.c **** ********************************************************************************
 216:.\Generated_Source\PSoC5/UART_TEST.c **** *
 217:.\Generated_Source\PSoC5/UART_TEST.c **** * Summary:
 218:.\Generated_Source\PSoC5/UART_TEST.c **** *  Disable the UART component
 219:.\Generated_Source\PSoC5/UART_TEST.c **** *
 220:.\Generated_Source\PSoC5/UART_TEST.c **** * Parameters:
 221:.\Generated_Source\PSoC5/UART_TEST.c **** *  None.
 222:.\Generated_Source\PSoC5/UART_TEST.c **** *
 223:.\Generated_Source\PSoC5/UART_TEST.c **** * Return:
 224:.\Generated_Source\PSoC5/UART_TEST.c **** *  None.
 225:.\Generated_Source\PSoC5/UART_TEST.c **** *
 226:.\Generated_Source\PSoC5/UART_TEST.c **** *******************************************************************************/
 227:.\Generated_Source\PSoC5/UART_TEST.c **** void UART_TEST_Stop(void) 
 228:.\Generated_Source\PSoC5/UART_TEST.c **** {
 189              		.loc 1 228 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 8
 192              		@ frame_needed = 1, uses_anonymous_args = 0
 193 0000 80B5     		push	{r7, lr}
 194              	.LCFI7:
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 7, -8
 197              		.cfi_offset 14, -4
 198 0002 82B0     		sub	sp, sp, #8
 199              	.LCFI8:
 200              		.cfi_def_cfa_offset 16
 201 0004 00AF     		add	r7, sp, #0
 202              	.LCFI9:
 203              		.cfi_def_cfa_register 7
 229:.\Generated_Source\PSoC5/UART_TEST.c ****     uint8 enableInterrupts;
 230:.\Generated_Source\PSoC5/UART_TEST.c ****     enableInterrupts = CyEnterCriticalSection();
 204              		.loc 1 230 0
 205 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 206 000a 0346     		mov	r3, r0
 207 000c FB71     		strb	r3, [r7, #7]
 231:.\Generated_Source\PSoC5/UART_TEST.c **** 
 232:.\Generated_Source\PSoC5/UART_TEST.c ****     /* Write Bit Counter Disable */
 233:.\Generated_Source\PSoC5/UART_TEST.c ****     #if(UART_TEST_RX_ENABLED || UART_TEST_HD_ENABLED)
 234:.\Generated_Source\PSoC5/UART_TEST.c ****         UART_TEST_RXBITCTR_CONTROL_REG &= (uint8)~UART_TEST_CNTR_ENABLE;
 235:.\Generated_Source\PSoC5/UART_TEST.c ****     #endif /* End UART_TEST_RX_ENABLED */
 236:.\Generated_Source\PSoC5/UART_TEST.c **** 
 237:.\Generated_Source\PSoC5/UART_TEST.c ****     #if(UART_TEST_TX_ENABLED)
 238:.\Generated_Source\PSoC5/UART_TEST.c ****         #if(!UART_TEST_TXCLKGEN_DP)
 239:.\Generated_Source\PSoC5/UART_TEST.c ****             UART_TEST_TXBITCTR_CONTROL_REG &= (uint8)~UART_TEST_CNTR_ENABLE;
 240:.\Generated_Source\PSoC5/UART_TEST.c ****         #endif /* End UART_TEST_TXCLKGEN_DP */
 241:.\Generated_Source\PSoC5/UART_TEST.c ****     #endif /* UART_TEST_TX_ENABLED */
 242:.\Generated_Source\PSoC5/UART_TEST.c **** 
 243:.\Generated_Source\PSoC5/UART_TEST.c ****     #if(UART_TEST_INTERNAL_CLOCK_USED)
 244:.\Generated_Source\PSoC5/UART_TEST.c ****         /* Disable the clock. */
 245:.\Generated_Source\PSoC5/UART_TEST.c ****         UART_TEST_IntClock_Stop();
 208              		.loc 1 245 0
 209 000e FFF7FEFF 		bl	UART_TEST_IntClock_Stop
 246:.\Generated_Source\PSoC5/UART_TEST.c ****     #endif /* End UART_TEST_INTERNAL_CLOCK_USED */
 247:.\Generated_Source\PSoC5/UART_TEST.c **** 
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 9


 248:.\Generated_Source\PSoC5/UART_TEST.c ****     /* Disable internal interrupt component */
 249:.\Generated_Source\PSoC5/UART_TEST.c ****     #if(UART_TEST_RX_ENABLED || UART_TEST_HD_ENABLED)
 250:.\Generated_Source\PSoC5/UART_TEST.c ****         UART_TEST_RXSTATUS_ACTL_REG  &= (uint8)~UART_TEST_INT_ENABLE;
 251:.\Generated_Source\PSoC5/UART_TEST.c ****         #if(UART_TEST_RX_INTERRUPT_ENABLED && (UART_TEST_RXBUFFERSIZE > UART_TEST_FIFO_LENGTH))
 252:.\Generated_Source\PSoC5/UART_TEST.c ****             UART_TEST_DisableRxInt();
 253:.\Generated_Source\PSoC5/UART_TEST.c ****         #endif /* End UART_TEST_RX_INTERRUPT_ENABLED */
 254:.\Generated_Source\PSoC5/UART_TEST.c ****     #endif /* End UART_TEST_RX_ENABLED */
 255:.\Generated_Source\PSoC5/UART_TEST.c **** 
 256:.\Generated_Source\PSoC5/UART_TEST.c ****     #if(UART_TEST_TX_ENABLED)
 257:.\Generated_Source\PSoC5/UART_TEST.c ****         UART_TEST_TXSTATUS_ACTL_REG &= (uint8)~UART_TEST_INT_ENABLE;
 210              		.loc 1 257 0
 211 0012 46F29343 		movw	r3, #25747
 212 0016 C4F20003 		movt	r3, 16384
 213 001a 46F29342 		movw	r2, #25747
 214 001e C4F20002 		movt	r2, 16384
 215 0022 1278     		ldrb	r2, [r2, #0]
 216 0024 D2B2     		uxtb	r2, r2
 217 0026 22F01002 		bic	r2, r2, #16
 218 002a D2B2     		uxtb	r2, r2
 219 002c 1A70     		strb	r2, [r3, #0]
 258:.\Generated_Source\PSoC5/UART_TEST.c ****         #if(UART_TEST_TX_INTERRUPT_ENABLED && (UART_TEST_TXBUFFERSIZE > UART_TEST_FIFO_LENGTH))
 259:.\Generated_Source\PSoC5/UART_TEST.c ****             UART_TEST_DisableTxInt();
 220              		.loc 1 259 0
 221 002e FFF7FEFF 		bl	UART_TEST_DisableTxInt
 260:.\Generated_Source\PSoC5/UART_TEST.c ****         #endif /* End UART_TEST_TX_INTERRUPT_ENABLED */
 261:.\Generated_Source\PSoC5/UART_TEST.c ****     #endif /* End UART_TEST_TX_ENABLED */
 262:.\Generated_Source\PSoC5/UART_TEST.c **** 
 263:.\Generated_Source\PSoC5/UART_TEST.c ****     CyExitCriticalSection(enableInterrupts);
 222              		.loc 1 263 0
 223 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 224 0034 1846     		mov	r0, r3
 225 0036 FFF7FEFF 		bl	CyExitCriticalSection
 264:.\Generated_Source\PSoC5/UART_TEST.c **** }
 226              		.loc 1 264 0
 227 003a 07F10807 		add	r7, r7, #8
 228 003e BD46     		mov	sp, r7
 229 0040 80BD     		pop	{r7, pc}
 230              		.cfi_endproc
 231              	.LFE3:
 232              		.size	UART_TEST_Stop, .-UART_TEST_Stop
 233 0042 00BF     		.section	.text.UART_TEST_ReadControlRegister,"ax",%progbits
 234              		.align	2
 235              		.global	UART_TEST_ReadControlRegister
 236              		.thumb
 237              		.thumb_func
 238              		.type	UART_TEST_ReadControlRegister, %function
 239              	UART_TEST_ReadControlRegister:
 240              	.LFB4:
 265:.\Generated_Source\PSoC5/UART_TEST.c **** 
 266:.\Generated_Source\PSoC5/UART_TEST.c **** 
 267:.\Generated_Source\PSoC5/UART_TEST.c **** /*******************************************************************************
 268:.\Generated_Source\PSoC5/UART_TEST.c **** * Function Name: UART_TEST_ReadControlRegister
 269:.\Generated_Source\PSoC5/UART_TEST.c **** ********************************************************************************
 270:.\Generated_Source\PSoC5/UART_TEST.c **** *
 271:.\Generated_Source\PSoC5/UART_TEST.c **** * Summary:
 272:.\Generated_Source\PSoC5/UART_TEST.c **** *  Read the current state of the control register
 273:.\Generated_Source\PSoC5/UART_TEST.c **** *
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 10


 274:.\Generated_Source\PSoC5/UART_TEST.c **** * Parameters:
 275:.\Generated_Source\PSoC5/UART_TEST.c **** *  None.
 276:.\Generated_Source\PSoC5/UART_TEST.c **** *
 277:.\Generated_Source\PSoC5/UART_TEST.c **** * Return:
 278:.\Generated_Source\PSoC5/UART_TEST.c **** *  Current state of the control register.
 279:.\Generated_Source\PSoC5/UART_TEST.c **** *
 280:.\Generated_Source\PSoC5/UART_TEST.c **** *******************************************************************************/
 281:.\Generated_Source\PSoC5/UART_TEST.c **** uint8 UART_TEST_ReadControlRegister(void) 
 282:.\Generated_Source\PSoC5/UART_TEST.c **** {
 241              		.loc 1 282 0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 0
 244              		@ frame_needed = 1, uses_anonymous_args = 0
 245              		@ link register save eliminated.
 246 0000 80B4     		push	{r7}
 247              	.LCFI10:
 248              		.cfi_def_cfa_offset 4
 249              		.cfi_offset 7, -4
 250 0002 00AF     		add	r7, sp, #0
 251              	.LCFI11:
 252              		.cfi_def_cfa_register 7
 283:.\Generated_Source\PSoC5/UART_TEST.c ****     #if( UART_TEST_CONTROL_REG_REMOVED )
 284:.\Generated_Source\PSoC5/UART_TEST.c ****         return(0u);
 253              		.loc 1 284 0
 254 0004 4FF00003 		mov	r3, #0
 285:.\Generated_Source\PSoC5/UART_TEST.c ****     #else
 286:.\Generated_Source\PSoC5/UART_TEST.c ****         return(UART_TEST_CONTROL_REG);
 287:.\Generated_Source\PSoC5/UART_TEST.c ****     #endif /* End UART_TEST_CONTROL_REG_REMOVED */
 288:.\Generated_Source\PSoC5/UART_TEST.c **** }
 255              		.loc 1 288 0
 256 0008 1846     		mov	r0, r3
 257 000a BD46     		mov	sp, r7
 258 000c 80BC     		pop	{r7}
 259 000e 7047     		bx	lr
 260              		.cfi_endproc
 261              	.LFE4:
 262              		.size	UART_TEST_ReadControlRegister, .-UART_TEST_ReadControlRegister
 263              		.section	.text.UART_TEST_WriteControlRegister,"ax",%progbits
 264              		.align	2
 265              		.global	UART_TEST_WriteControlRegister
 266              		.thumb
 267              		.thumb_func
 268              		.type	UART_TEST_WriteControlRegister, %function
 269              	UART_TEST_WriteControlRegister:
 270              	.LFB5:
 289:.\Generated_Source\PSoC5/UART_TEST.c **** 
 290:.\Generated_Source\PSoC5/UART_TEST.c **** 
 291:.\Generated_Source\PSoC5/UART_TEST.c **** /*******************************************************************************
 292:.\Generated_Source\PSoC5/UART_TEST.c **** * Function Name: UART_TEST_WriteControlRegister
 293:.\Generated_Source\PSoC5/UART_TEST.c **** ********************************************************************************
 294:.\Generated_Source\PSoC5/UART_TEST.c **** *
 295:.\Generated_Source\PSoC5/UART_TEST.c **** * Summary:
 296:.\Generated_Source\PSoC5/UART_TEST.c **** *  Writes an 8-bit value into the control register
 297:.\Generated_Source\PSoC5/UART_TEST.c **** *
 298:.\Generated_Source\PSoC5/UART_TEST.c **** * Parameters:
 299:.\Generated_Source\PSoC5/UART_TEST.c **** *  control:  control register value
 300:.\Generated_Source\PSoC5/UART_TEST.c **** *
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 11


 301:.\Generated_Source\PSoC5/UART_TEST.c **** * Return:
 302:.\Generated_Source\PSoC5/UART_TEST.c **** *  None.
 303:.\Generated_Source\PSoC5/UART_TEST.c **** *
 304:.\Generated_Source\PSoC5/UART_TEST.c **** *******************************************************************************/
 305:.\Generated_Source\PSoC5/UART_TEST.c **** void  UART_TEST_WriteControlRegister(uint8 control) 
 306:.\Generated_Source\PSoC5/UART_TEST.c **** {
 271              		.loc 1 306 0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 8
 274              		@ frame_needed = 1, uses_anonymous_args = 0
 275              		@ link register save eliminated.
 276 0000 80B4     		push	{r7}
 277              	.LCFI12:
 278              		.cfi_def_cfa_offset 4
 279              		.cfi_offset 7, -4
 280 0002 83B0     		sub	sp, sp, #12
 281              	.LCFI13:
 282              		.cfi_def_cfa_offset 16
 283 0004 00AF     		add	r7, sp, #0
 284              	.LCFI14:
 285              		.cfi_def_cfa_register 7
 286 0006 0346     		mov	r3, r0
 287 0008 FB71     		strb	r3, [r7, #7]
 307:.\Generated_Source\PSoC5/UART_TEST.c ****     #if( UART_TEST_CONTROL_REG_REMOVED )
 308:.\Generated_Source\PSoC5/UART_TEST.c ****         if(control != 0u) { }      /* release compiler warning */
 309:.\Generated_Source\PSoC5/UART_TEST.c ****     #else
 310:.\Generated_Source\PSoC5/UART_TEST.c ****        UART_TEST_CONTROL_REG = control;
 311:.\Generated_Source\PSoC5/UART_TEST.c ****     #endif /* End UART_TEST_CONTROL_REG_REMOVED */
 312:.\Generated_Source\PSoC5/UART_TEST.c **** }
 288              		.loc 1 312 0
 289 000a 07F10C07 		add	r7, r7, #12
 290 000e BD46     		mov	sp, r7
 291 0010 80BC     		pop	{r7}
 292 0012 7047     		bx	lr
 293              		.cfi_endproc
 294              	.LFE5:
 295              		.size	UART_TEST_WriteControlRegister, .-UART_TEST_WriteControlRegister
 296              		.section	.text.UART_TEST_EnableTxInt,"ax",%progbits
 297              		.align	2
 298              		.global	UART_TEST_EnableTxInt
 299              		.thumb
 300              		.thumb_func
 301              		.type	UART_TEST_EnableTxInt, %function
 302              	UART_TEST_EnableTxInt:
 303              	.LFB6:
 313:.\Generated_Source\PSoC5/UART_TEST.c **** 
 314:.\Generated_Source\PSoC5/UART_TEST.c **** 
 315:.\Generated_Source\PSoC5/UART_TEST.c **** #if(UART_TEST_RX_ENABLED || UART_TEST_HD_ENABLED)
 316:.\Generated_Source\PSoC5/UART_TEST.c **** 
 317:.\Generated_Source\PSoC5/UART_TEST.c ****     #if(UART_TEST_RX_INTERRUPT_ENABLED)
 318:.\Generated_Source\PSoC5/UART_TEST.c **** 
 319:.\Generated_Source\PSoC5/UART_TEST.c ****         /*******************************************************************************
 320:.\Generated_Source\PSoC5/UART_TEST.c ****         * Function Name: UART_TEST_EnableRxInt
 321:.\Generated_Source\PSoC5/UART_TEST.c ****         ********************************************************************************
 322:.\Generated_Source\PSoC5/UART_TEST.c ****         *
 323:.\Generated_Source\PSoC5/UART_TEST.c ****         * Summary:
 324:.\Generated_Source\PSoC5/UART_TEST.c ****         *  Enable RX interrupt generation
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 12


 325:.\Generated_Source\PSoC5/UART_TEST.c ****         *
 326:.\Generated_Source\PSoC5/UART_TEST.c ****         * Parameters:
 327:.\Generated_Source\PSoC5/UART_TEST.c ****         *  None.
 328:.\Generated_Source\PSoC5/UART_TEST.c ****         *
 329:.\Generated_Source\PSoC5/UART_TEST.c ****         * Return:
 330:.\Generated_Source\PSoC5/UART_TEST.c ****         *  None.
 331:.\Generated_Source\PSoC5/UART_TEST.c ****         *
 332:.\Generated_Source\PSoC5/UART_TEST.c ****         * Theory:
 333:.\Generated_Source\PSoC5/UART_TEST.c ****         *  Enable the interrupt output -or- the interrupt component itself
 334:.\Generated_Source\PSoC5/UART_TEST.c ****         *
 335:.\Generated_Source\PSoC5/UART_TEST.c ****         *******************************************************************************/
 336:.\Generated_Source\PSoC5/UART_TEST.c ****         void UART_TEST_EnableRxInt(void) 
 337:.\Generated_Source\PSoC5/UART_TEST.c ****         {
 338:.\Generated_Source\PSoC5/UART_TEST.c ****             CyIntEnable(UART_TEST_RX_VECT_NUM);
 339:.\Generated_Source\PSoC5/UART_TEST.c ****         }
 340:.\Generated_Source\PSoC5/UART_TEST.c **** 
 341:.\Generated_Source\PSoC5/UART_TEST.c **** 
 342:.\Generated_Source\PSoC5/UART_TEST.c ****         /*******************************************************************************
 343:.\Generated_Source\PSoC5/UART_TEST.c ****         * Function Name: UART_TEST_DisableRxInt
 344:.\Generated_Source\PSoC5/UART_TEST.c ****         ********************************************************************************
 345:.\Generated_Source\PSoC5/UART_TEST.c ****         *
 346:.\Generated_Source\PSoC5/UART_TEST.c ****         * Summary:
 347:.\Generated_Source\PSoC5/UART_TEST.c ****         *  Disable RX interrupt generation
 348:.\Generated_Source\PSoC5/UART_TEST.c ****         *
 349:.\Generated_Source\PSoC5/UART_TEST.c ****         * Parameters:
 350:.\Generated_Source\PSoC5/UART_TEST.c ****         *  None.
 351:.\Generated_Source\PSoC5/UART_TEST.c ****         *
 352:.\Generated_Source\PSoC5/UART_TEST.c ****         * Return:
 353:.\Generated_Source\PSoC5/UART_TEST.c ****         *  None.
 354:.\Generated_Source\PSoC5/UART_TEST.c ****         *
 355:.\Generated_Source\PSoC5/UART_TEST.c ****         * Theory:
 356:.\Generated_Source\PSoC5/UART_TEST.c ****         *  Disable the interrupt output -or- the interrupt component itself
 357:.\Generated_Source\PSoC5/UART_TEST.c ****         *
 358:.\Generated_Source\PSoC5/UART_TEST.c ****         *******************************************************************************/
 359:.\Generated_Source\PSoC5/UART_TEST.c ****         void UART_TEST_DisableRxInt(void) 
 360:.\Generated_Source\PSoC5/UART_TEST.c ****         {
 361:.\Generated_Source\PSoC5/UART_TEST.c ****             CyIntDisable(UART_TEST_RX_VECT_NUM);
 362:.\Generated_Source\PSoC5/UART_TEST.c ****         }
 363:.\Generated_Source\PSoC5/UART_TEST.c **** 
 364:.\Generated_Source\PSoC5/UART_TEST.c ****     #endif /* UART_TEST_RX_INTERRUPT_ENABLED */
 365:.\Generated_Source\PSoC5/UART_TEST.c **** 
 366:.\Generated_Source\PSoC5/UART_TEST.c **** 
 367:.\Generated_Source\PSoC5/UART_TEST.c ****     /*******************************************************************************
 368:.\Generated_Source\PSoC5/UART_TEST.c ****     * Function Name: UART_TEST_SetRxInterruptMode
 369:.\Generated_Source\PSoC5/UART_TEST.c ****     ********************************************************************************
 370:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 371:.\Generated_Source\PSoC5/UART_TEST.c ****     * Summary:
 372:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Configure which status bits trigger an interrupt event
 373:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 374:.\Generated_Source\PSoC5/UART_TEST.c ****     * Parameters:
 375:.\Generated_Source\PSoC5/UART_TEST.c ****     *  IntSrc:  An or'd combination of the desired status bit masks (defined in
 376:.\Generated_Source\PSoC5/UART_TEST.c ****     *           the header file)
 377:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 378:.\Generated_Source\PSoC5/UART_TEST.c ****     * Return:
 379:.\Generated_Source\PSoC5/UART_TEST.c ****     *  None.
 380:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 381:.\Generated_Source\PSoC5/UART_TEST.c ****     * Theory:
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 13


 382:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Enables the output of specific status bits to the interrupt controller
 383:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 384:.\Generated_Source\PSoC5/UART_TEST.c ****     *******************************************************************************/
 385:.\Generated_Source\PSoC5/UART_TEST.c ****     void UART_TEST_SetRxInterruptMode(uint8 intSrc) 
 386:.\Generated_Source\PSoC5/UART_TEST.c ****     {
 387:.\Generated_Source\PSoC5/UART_TEST.c ****         UART_TEST_RXSTATUS_MASK_REG  = intSrc;
 388:.\Generated_Source\PSoC5/UART_TEST.c ****     }
 389:.\Generated_Source\PSoC5/UART_TEST.c **** 
 390:.\Generated_Source\PSoC5/UART_TEST.c **** 
 391:.\Generated_Source\PSoC5/UART_TEST.c ****     /*******************************************************************************
 392:.\Generated_Source\PSoC5/UART_TEST.c ****     * Function Name: UART_TEST_ReadRxData
 393:.\Generated_Source\PSoC5/UART_TEST.c ****     ********************************************************************************
 394:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 395:.\Generated_Source\PSoC5/UART_TEST.c ****     * Summary:
 396:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Returns data in RX Data register without checking status register to
 397:.\Generated_Source\PSoC5/UART_TEST.c ****     *  determine if data is valid
 398:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 399:.\Generated_Source\PSoC5/UART_TEST.c ****     * Parameters:
 400:.\Generated_Source\PSoC5/UART_TEST.c ****     *  None.
 401:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 402:.\Generated_Source\PSoC5/UART_TEST.c ****     * Return:
 403:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Received data from RX register
 404:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 405:.\Generated_Source\PSoC5/UART_TEST.c ****     * Global Variables:
 406:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST_rxBuffer - RAM buffer pointer for save received data.
 407:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST_rxBufferWrite - cyclic index for write to rxBuffer,
 408:.\Generated_Source\PSoC5/UART_TEST.c ****     *     checked to identify new data.
 409:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST_rxBufferRead - cyclic index for read from rxBuffer,
 410:.\Generated_Source\PSoC5/UART_TEST.c ****     *     incremented after each byte has been read from buffer.
 411:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST_rxBufferLoopDetect - creared if loop condition was detected
 412:.\Generated_Source\PSoC5/UART_TEST.c ****     *     in RX ISR.
 413:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 414:.\Generated_Source\PSoC5/UART_TEST.c ****     * Reentrant:
 415:.\Generated_Source\PSoC5/UART_TEST.c ****     *  No.
 416:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 417:.\Generated_Source\PSoC5/UART_TEST.c ****     *******************************************************************************/
 418:.\Generated_Source\PSoC5/UART_TEST.c ****     uint8 UART_TEST_ReadRxData(void) 
 419:.\Generated_Source\PSoC5/UART_TEST.c ****     {
 420:.\Generated_Source\PSoC5/UART_TEST.c ****         uint8 rxData;
 421:.\Generated_Source\PSoC5/UART_TEST.c **** 
 422:.\Generated_Source\PSoC5/UART_TEST.c ****         #if(UART_TEST_RXBUFFERSIZE > UART_TEST_FIFO_LENGTH)
 423:.\Generated_Source\PSoC5/UART_TEST.c ****             uint8 loc_rxBufferRead;
 424:.\Generated_Source\PSoC5/UART_TEST.c ****             uint8 loc_rxBufferWrite;
 425:.\Generated_Source\PSoC5/UART_TEST.c ****             /* Protect variables that could change on interrupt. */
 426:.\Generated_Source\PSoC5/UART_TEST.c ****             /* Disable Rx interrupt. */
 427:.\Generated_Source\PSoC5/UART_TEST.c ****             #if(UART_TEST_RX_INTERRUPT_ENABLED)
 428:.\Generated_Source\PSoC5/UART_TEST.c ****                 UART_TEST_DisableRxInt();
 429:.\Generated_Source\PSoC5/UART_TEST.c ****             #endif /* UART_TEST_RX_INTERRUPT_ENABLED */
 430:.\Generated_Source\PSoC5/UART_TEST.c ****             loc_rxBufferRead = UART_TEST_rxBufferRead;
 431:.\Generated_Source\PSoC5/UART_TEST.c ****             loc_rxBufferWrite = UART_TEST_rxBufferWrite;
 432:.\Generated_Source\PSoC5/UART_TEST.c **** 
 433:.\Generated_Source\PSoC5/UART_TEST.c ****             if( (UART_TEST_rxBufferLoopDetect != 0u) || (loc_rxBufferRead != loc_rxBufferWrite) )
 434:.\Generated_Source\PSoC5/UART_TEST.c ****             {
 435:.\Generated_Source\PSoC5/UART_TEST.c ****                 rxData = UART_TEST_rxBuffer[loc_rxBufferRead];
 436:.\Generated_Source\PSoC5/UART_TEST.c ****                 loc_rxBufferRead++;
 437:.\Generated_Source\PSoC5/UART_TEST.c **** 
 438:.\Generated_Source\PSoC5/UART_TEST.c ****                 if(loc_rxBufferRead >= UART_TEST_RXBUFFERSIZE)
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 14


 439:.\Generated_Source\PSoC5/UART_TEST.c ****                 {
 440:.\Generated_Source\PSoC5/UART_TEST.c ****                     loc_rxBufferRead = 0u;
 441:.\Generated_Source\PSoC5/UART_TEST.c ****                 }
 442:.\Generated_Source\PSoC5/UART_TEST.c ****                 /* Update the real pointer */
 443:.\Generated_Source\PSoC5/UART_TEST.c ****                 UART_TEST_rxBufferRead = loc_rxBufferRead;
 444:.\Generated_Source\PSoC5/UART_TEST.c **** 
 445:.\Generated_Source\PSoC5/UART_TEST.c ****                 if(UART_TEST_rxBufferLoopDetect != 0u )
 446:.\Generated_Source\PSoC5/UART_TEST.c ****                 {
 447:.\Generated_Source\PSoC5/UART_TEST.c ****                     UART_TEST_rxBufferLoopDetect = 0u;
 448:.\Generated_Source\PSoC5/UART_TEST.c ****                     #if( (UART_TEST_RX_INTERRUPT_ENABLED) && (UART_TEST_FLOW_CONTROL != 0u) && \
 449:.\Generated_Source\PSoC5/UART_TEST.c ****                          (UART_TEST_RXBUFFERSIZE > UART_TEST_FIFO_LENGTH) )
 450:.\Generated_Source\PSoC5/UART_TEST.c ****                         /* When Hardware Flow Control selected - return RX mask */
 451:.\Generated_Source\PSoC5/UART_TEST.c ****                         #if( UART_TEST_HD_ENABLED )
 452:.\Generated_Source\PSoC5/UART_TEST.c ****                             if((UART_TEST_CONTROL_REG & UART_TEST_CTRL_HD_SEND) == 0u)
 453:.\Generated_Source\PSoC5/UART_TEST.c ****                             {   /* In Half duplex mode return RX mask only in RX
 454:.\Generated_Source\PSoC5/UART_TEST.c ****                                 *  configuration set, otherwise
 455:.\Generated_Source\PSoC5/UART_TEST.c ****                                 *  mask will be returned in LoadRxConfig() API.
 456:.\Generated_Source\PSoC5/UART_TEST.c ****                                 */
 457:.\Generated_Source\PSoC5/UART_TEST.c ****                                 UART_TEST_RXSTATUS_MASK_REG  |= UART_TEST_RX_STS_FIFO_NOTEMPTY;
 458:.\Generated_Source\PSoC5/UART_TEST.c ****                             }
 459:.\Generated_Source\PSoC5/UART_TEST.c ****                         #else
 460:.\Generated_Source\PSoC5/UART_TEST.c ****                             UART_TEST_RXSTATUS_MASK_REG  |= UART_TEST_RX_STS_FIFO_NOTEMPTY;
 461:.\Generated_Source\PSoC5/UART_TEST.c ****                         #endif /* end UART_TEST_HD_ENABLED */
 462:.\Generated_Source\PSoC5/UART_TEST.c ****                     #endif /* UART_TEST_RX_INTERRUPT_ENABLED and Hardware flow control*/
 463:.\Generated_Source\PSoC5/UART_TEST.c ****                 }
 464:.\Generated_Source\PSoC5/UART_TEST.c ****             }
 465:.\Generated_Source\PSoC5/UART_TEST.c ****             else
 466:.\Generated_Source\PSoC5/UART_TEST.c ****             {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit*/
 467:.\Generated_Source\PSoC5/UART_TEST.c ****                 rxData = UART_TEST_RXDATA_REG;
 468:.\Generated_Source\PSoC5/UART_TEST.c ****             }
 469:.\Generated_Source\PSoC5/UART_TEST.c **** 
 470:.\Generated_Source\PSoC5/UART_TEST.c ****             /* Enable Rx interrupt. */
 471:.\Generated_Source\PSoC5/UART_TEST.c ****             #if(UART_TEST_RX_INTERRUPT_ENABLED)
 472:.\Generated_Source\PSoC5/UART_TEST.c ****                 UART_TEST_EnableRxInt();
 473:.\Generated_Source\PSoC5/UART_TEST.c ****             #endif /* End UART_TEST_RX_INTERRUPT_ENABLED */
 474:.\Generated_Source\PSoC5/UART_TEST.c **** 
 475:.\Generated_Source\PSoC5/UART_TEST.c ****         #else /* UART_TEST_RXBUFFERSIZE > UART_TEST_FIFO_LENGTH */
 476:.\Generated_Source\PSoC5/UART_TEST.c **** 
 477:.\Generated_Source\PSoC5/UART_TEST.c ****             /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit*/
 478:.\Generated_Source\PSoC5/UART_TEST.c ****             rxData = UART_TEST_RXDATA_REG;
 479:.\Generated_Source\PSoC5/UART_TEST.c **** 
 480:.\Generated_Source\PSoC5/UART_TEST.c ****         #endif /* UART_TEST_RXBUFFERSIZE > UART_TEST_FIFO_LENGTH */
 481:.\Generated_Source\PSoC5/UART_TEST.c **** 
 482:.\Generated_Source\PSoC5/UART_TEST.c ****         return(rxData);
 483:.\Generated_Source\PSoC5/UART_TEST.c ****     }
 484:.\Generated_Source\PSoC5/UART_TEST.c **** 
 485:.\Generated_Source\PSoC5/UART_TEST.c **** 
 486:.\Generated_Source\PSoC5/UART_TEST.c ****     /*******************************************************************************
 487:.\Generated_Source\PSoC5/UART_TEST.c ****     * Function Name: UART_TEST_ReadRxStatus
 488:.\Generated_Source\PSoC5/UART_TEST.c ****     ********************************************************************************
 489:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 490:.\Generated_Source\PSoC5/UART_TEST.c ****     * Summary:
 491:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Read the current state of the status register
 492:.\Generated_Source\PSoC5/UART_TEST.c ****     *  And detect software buffer overflow.
 493:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 494:.\Generated_Source\PSoC5/UART_TEST.c ****     * Parameters:
 495:.\Generated_Source\PSoC5/UART_TEST.c ****     *  None.
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 15


 496:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 497:.\Generated_Source\PSoC5/UART_TEST.c ****     * Return:
 498:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Current state of the status register.
 499:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 500:.\Generated_Source\PSoC5/UART_TEST.c ****     * Global Variables:
 501:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST_rxBufferOverflow - used to indicate overload condition.
 502:.\Generated_Source\PSoC5/UART_TEST.c ****     *   It set to one in RX interrupt when there isn?t free space in
 503:.\Generated_Source\PSoC5/UART_TEST.c ****     *   UART_TEST_rxBufferRead to write new data. This condition returned
 504:.\Generated_Source\PSoC5/UART_TEST.c ****     *   and cleared to zero by this API as an
 505:.\Generated_Source\PSoC5/UART_TEST.c ****     *   UART_TEST_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 506:.\Generated_Source\PSoC5/UART_TEST.c ****     *   bits.
 507:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 508:.\Generated_Source\PSoC5/UART_TEST.c ****     *******************************************************************************/
 509:.\Generated_Source\PSoC5/UART_TEST.c ****     uint8 UART_TEST_ReadRxStatus(void) 
 510:.\Generated_Source\PSoC5/UART_TEST.c ****     {
 511:.\Generated_Source\PSoC5/UART_TEST.c ****         uint8 status;
 512:.\Generated_Source\PSoC5/UART_TEST.c **** 
 513:.\Generated_Source\PSoC5/UART_TEST.c ****         status = UART_TEST_RXSTATUS_REG & UART_TEST_RX_HW_MASK;
 514:.\Generated_Source\PSoC5/UART_TEST.c **** 
 515:.\Generated_Source\PSoC5/UART_TEST.c ****         #if(UART_TEST_RXBUFFERSIZE > UART_TEST_FIFO_LENGTH)
 516:.\Generated_Source\PSoC5/UART_TEST.c ****             if( UART_TEST_rxBufferOverflow != 0u )
 517:.\Generated_Source\PSoC5/UART_TEST.c ****             {
 518:.\Generated_Source\PSoC5/UART_TEST.c ****                 status |= UART_TEST_RX_STS_SOFT_BUFF_OVER;
 519:.\Generated_Source\PSoC5/UART_TEST.c ****                 UART_TEST_rxBufferOverflow = 0u;
 520:.\Generated_Source\PSoC5/UART_TEST.c ****             }
 521:.\Generated_Source\PSoC5/UART_TEST.c ****         #endif /* UART_TEST_RXBUFFERSIZE */
 522:.\Generated_Source\PSoC5/UART_TEST.c **** 
 523:.\Generated_Source\PSoC5/UART_TEST.c ****         return(status);
 524:.\Generated_Source\PSoC5/UART_TEST.c ****     }
 525:.\Generated_Source\PSoC5/UART_TEST.c **** 
 526:.\Generated_Source\PSoC5/UART_TEST.c **** 
 527:.\Generated_Source\PSoC5/UART_TEST.c ****     /*******************************************************************************
 528:.\Generated_Source\PSoC5/UART_TEST.c ****     * Function Name: UART_TEST_GetChar
 529:.\Generated_Source\PSoC5/UART_TEST.c ****     ********************************************************************************
 530:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 531:.\Generated_Source\PSoC5/UART_TEST.c ****     * Summary:
 532:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Reads UART RX buffer immediately, if data is not available or an error
 533:.\Generated_Source\PSoC5/UART_TEST.c ****     *  condition exists, zero is returned; otherwise, character is read and
 534:.\Generated_Source\PSoC5/UART_TEST.c ****     *  returned.
 535:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 536:.\Generated_Source\PSoC5/UART_TEST.c ****     * Parameters:
 537:.\Generated_Source\PSoC5/UART_TEST.c ****     *  None.
 538:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 539:.\Generated_Source\PSoC5/UART_TEST.c ****     * Return:
 540:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 541:.\Generated_Source\PSoC5/UART_TEST.c ****     *  A returned zero signifies an error condition or no data available.
 542:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 543:.\Generated_Source\PSoC5/UART_TEST.c ****     * Global Variables:
 544:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST_rxBuffer - RAM buffer pointer for save received data.
 545:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST_rxBufferWrite - cyclic index for write to rxBuffer,
 546:.\Generated_Source\PSoC5/UART_TEST.c ****     *     checked to identify new data.
 547:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST_rxBufferRead - cyclic index for read from rxBuffer,
 548:.\Generated_Source\PSoC5/UART_TEST.c ****     *     incremented after each byte has been read from buffer.
 549:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST_rxBufferLoopDetect - creared if loop condition was detected
 550:.\Generated_Source\PSoC5/UART_TEST.c ****     *     in RX ISR.
 551:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 552:.\Generated_Source\PSoC5/UART_TEST.c ****     * Reentrant:
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 16


 553:.\Generated_Source\PSoC5/UART_TEST.c ****     *  No.
 554:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 555:.\Generated_Source\PSoC5/UART_TEST.c ****     *******************************************************************************/
 556:.\Generated_Source\PSoC5/UART_TEST.c ****     uint8 UART_TEST_GetChar(void) 
 557:.\Generated_Source\PSoC5/UART_TEST.c ****     {
 558:.\Generated_Source\PSoC5/UART_TEST.c ****         uint8 rxData = 0u;
 559:.\Generated_Source\PSoC5/UART_TEST.c ****         uint8 rxStatus;
 560:.\Generated_Source\PSoC5/UART_TEST.c **** 
 561:.\Generated_Source\PSoC5/UART_TEST.c ****         #if(UART_TEST_RXBUFFERSIZE > UART_TEST_FIFO_LENGTH)
 562:.\Generated_Source\PSoC5/UART_TEST.c ****             uint8 loc_rxBufferRead;
 563:.\Generated_Source\PSoC5/UART_TEST.c ****             uint8 loc_rxBufferWrite;
 564:.\Generated_Source\PSoC5/UART_TEST.c ****             /* Protect variables that could change on interrupt. */
 565:.\Generated_Source\PSoC5/UART_TEST.c ****             /* Disable Rx interrupt. */
 566:.\Generated_Source\PSoC5/UART_TEST.c ****             #if(UART_TEST_RX_INTERRUPT_ENABLED)
 567:.\Generated_Source\PSoC5/UART_TEST.c ****                 UART_TEST_DisableRxInt();
 568:.\Generated_Source\PSoC5/UART_TEST.c ****             #endif /* UART_TEST_RX_INTERRUPT_ENABLED */
 569:.\Generated_Source\PSoC5/UART_TEST.c ****             loc_rxBufferRead = UART_TEST_rxBufferRead;
 570:.\Generated_Source\PSoC5/UART_TEST.c ****             loc_rxBufferWrite = UART_TEST_rxBufferWrite;
 571:.\Generated_Source\PSoC5/UART_TEST.c **** 
 572:.\Generated_Source\PSoC5/UART_TEST.c ****             if( (UART_TEST_rxBufferLoopDetect != 0u) || (loc_rxBufferRead != loc_rxBufferWrite) )
 573:.\Generated_Source\PSoC5/UART_TEST.c ****             {
 574:.\Generated_Source\PSoC5/UART_TEST.c ****                 rxData = UART_TEST_rxBuffer[loc_rxBufferRead];
 575:.\Generated_Source\PSoC5/UART_TEST.c ****                 loc_rxBufferRead++;
 576:.\Generated_Source\PSoC5/UART_TEST.c ****                 if(loc_rxBufferRead >= UART_TEST_RXBUFFERSIZE)
 577:.\Generated_Source\PSoC5/UART_TEST.c ****                 {
 578:.\Generated_Source\PSoC5/UART_TEST.c ****                     loc_rxBufferRead = 0u;
 579:.\Generated_Source\PSoC5/UART_TEST.c ****                 }
 580:.\Generated_Source\PSoC5/UART_TEST.c ****                 /* Update the real pointer */
 581:.\Generated_Source\PSoC5/UART_TEST.c ****                 UART_TEST_rxBufferRead = loc_rxBufferRead;
 582:.\Generated_Source\PSoC5/UART_TEST.c **** 
 583:.\Generated_Source\PSoC5/UART_TEST.c ****                 if(UART_TEST_rxBufferLoopDetect > 0u )
 584:.\Generated_Source\PSoC5/UART_TEST.c ****                 {
 585:.\Generated_Source\PSoC5/UART_TEST.c ****                     UART_TEST_rxBufferLoopDetect = 0u;
 586:.\Generated_Source\PSoC5/UART_TEST.c ****                     #if( (UART_TEST_RX_INTERRUPT_ENABLED) && (UART_TEST_FLOW_CONTROL != 0u) )
 587:.\Generated_Source\PSoC5/UART_TEST.c ****                         /* When Hardware Flow Control selected - return RX mask */
 588:.\Generated_Source\PSoC5/UART_TEST.c ****                         #if( UART_TEST_HD_ENABLED )
 589:.\Generated_Source\PSoC5/UART_TEST.c ****                             if((UART_TEST_CONTROL_REG & UART_TEST_CTRL_HD_SEND) == 0u)
 590:.\Generated_Source\PSoC5/UART_TEST.c ****                             {   /* In Half duplex mode return RX mask only if
 591:.\Generated_Source\PSoC5/UART_TEST.c ****                                 *  RX configuration set, otherwise
 592:.\Generated_Source\PSoC5/UART_TEST.c ****                                 *  mask will be returned in LoadRxConfig() API.
 593:.\Generated_Source\PSoC5/UART_TEST.c ****                                 */
 594:.\Generated_Source\PSoC5/UART_TEST.c ****                                 UART_TEST_RXSTATUS_MASK_REG  |= UART_TEST_RX_STS_FIFO_NOTEMPTY;
 595:.\Generated_Source\PSoC5/UART_TEST.c ****                             }
 596:.\Generated_Source\PSoC5/UART_TEST.c ****                         #else
 597:.\Generated_Source\PSoC5/UART_TEST.c ****                             UART_TEST_RXSTATUS_MASK_REG  |= UART_TEST_RX_STS_FIFO_NOTEMPTY;
 598:.\Generated_Source\PSoC5/UART_TEST.c ****                         #endif /* end UART_TEST_HD_ENABLED */
 599:.\Generated_Source\PSoC5/UART_TEST.c ****                     #endif /* UART_TEST_RX_INTERRUPT_ENABLED and Hardware flow control*/
 600:.\Generated_Source\PSoC5/UART_TEST.c ****                 }
 601:.\Generated_Source\PSoC5/UART_TEST.c **** 
 602:.\Generated_Source\PSoC5/UART_TEST.c ****             }
 603:.\Generated_Source\PSoC5/UART_TEST.c ****             else
 604:.\Generated_Source\PSoC5/UART_TEST.c ****             {   rxStatus = UART_TEST_RXSTATUS_REG;
 605:.\Generated_Source\PSoC5/UART_TEST.c ****                 if((rxStatus & UART_TEST_RX_STS_FIFO_NOTEMPTY) != 0u)
 606:.\Generated_Source\PSoC5/UART_TEST.c ****                 {   /* Read received data from FIFO*/
 607:.\Generated_Source\PSoC5/UART_TEST.c ****                     rxData = UART_TEST_RXDATA_REG;
 608:.\Generated_Source\PSoC5/UART_TEST.c ****                     /*Check status on error*/
 609:.\Generated_Source\PSoC5/UART_TEST.c ****                     if((rxStatus & (UART_TEST_RX_STS_BREAK | UART_TEST_RX_STS_PAR_ERROR |
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 17


 610:.\Generated_Source\PSoC5/UART_TEST.c ****                                    UART_TEST_RX_STS_STOP_ERROR | UART_TEST_RX_STS_OVERRUN)) != 0u)
 611:.\Generated_Source\PSoC5/UART_TEST.c ****                     {
 612:.\Generated_Source\PSoC5/UART_TEST.c ****                         rxData = 0u;
 613:.\Generated_Source\PSoC5/UART_TEST.c ****                     }
 614:.\Generated_Source\PSoC5/UART_TEST.c ****                 }
 615:.\Generated_Source\PSoC5/UART_TEST.c ****             }
 616:.\Generated_Source\PSoC5/UART_TEST.c **** 
 617:.\Generated_Source\PSoC5/UART_TEST.c ****             /* Enable Rx interrupt. */
 618:.\Generated_Source\PSoC5/UART_TEST.c ****             #if(UART_TEST_RX_INTERRUPT_ENABLED)
 619:.\Generated_Source\PSoC5/UART_TEST.c ****                 UART_TEST_EnableRxInt();
 620:.\Generated_Source\PSoC5/UART_TEST.c ****             #endif /* UART_TEST_RX_INTERRUPT_ENABLED */
 621:.\Generated_Source\PSoC5/UART_TEST.c **** 
 622:.\Generated_Source\PSoC5/UART_TEST.c ****         #else /* UART_TEST_RXBUFFERSIZE > UART_TEST_FIFO_LENGTH */
 623:.\Generated_Source\PSoC5/UART_TEST.c **** 
 624:.\Generated_Source\PSoC5/UART_TEST.c ****             rxStatus =UART_TEST_RXSTATUS_REG;
 625:.\Generated_Source\PSoC5/UART_TEST.c ****             if((rxStatus & UART_TEST_RX_STS_FIFO_NOTEMPTY) != 0u)
 626:.\Generated_Source\PSoC5/UART_TEST.c ****             {   /* Read received data from FIFO*/
 627:.\Generated_Source\PSoC5/UART_TEST.c ****                 rxData = UART_TEST_RXDATA_REG;
 628:.\Generated_Source\PSoC5/UART_TEST.c ****                 /*Check status on error*/
 629:.\Generated_Source\PSoC5/UART_TEST.c ****                 if((rxStatus & (UART_TEST_RX_STS_BREAK | UART_TEST_RX_STS_PAR_ERROR |
 630:.\Generated_Source\PSoC5/UART_TEST.c ****                                UART_TEST_RX_STS_STOP_ERROR | UART_TEST_RX_STS_OVERRUN)) != 0u)
 631:.\Generated_Source\PSoC5/UART_TEST.c ****                 {
 632:.\Generated_Source\PSoC5/UART_TEST.c ****                     rxData = 0u;
 633:.\Generated_Source\PSoC5/UART_TEST.c ****                 }
 634:.\Generated_Source\PSoC5/UART_TEST.c ****             }
 635:.\Generated_Source\PSoC5/UART_TEST.c ****         #endif /* UART_TEST_RXBUFFERSIZE > UART_TEST_FIFO_LENGTH */
 636:.\Generated_Source\PSoC5/UART_TEST.c **** 
 637:.\Generated_Source\PSoC5/UART_TEST.c ****         return(rxData);
 638:.\Generated_Source\PSoC5/UART_TEST.c ****     }
 639:.\Generated_Source\PSoC5/UART_TEST.c **** 
 640:.\Generated_Source\PSoC5/UART_TEST.c **** 
 641:.\Generated_Source\PSoC5/UART_TEST.c ****     /*******************************************************************************
 642:.\Generated_Source\PSoC5/UART_TEST.c ****     * Function Name: UART_TEST_GetByte
 643:.\Generated_Source\PSoC5/UART_TEST.c ****     ********************************************************************************
 644:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 645:.\Generated_Source\PSoC5/UART_TEST.c ****     * Summary:
 646:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Grab the next available byte of data from the recieve FIFO
 647:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 648:.\Generated_Source\PSoC5/UART_TEST.c ****     * Parameters:
 649:.\Generated_Source\PSoC5/UART_TEST.c ****     *  None.
 650:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 651:.\Generated_Source\PSoC5/UART_TEST.c ****     * Return:
 652:.\Generated_Source\PSoC5/UART_TEST.c ****     *  MSB contains Status Register and LSB contains UART RX data
 653:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 654:.\Generated_Source\PSoC5/UART_TEST.c ****     * Reentrant:
 655:.\Generated_Source\PSoC5/UART_TEST.c ****     *  No.
 656:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 657:.\Generated_Source\PSoC5/UART_TEST.c ****     *******************************************************************************/
 658:.\Generated_Source\PSoC5/UART_TEST.c ****     uint16 UART_TEST_GetByte(void) 
 659:.\Generated_Source\PSoC5/UART_TEST.c ****     {
 660:.\Generated_Source\PSoC5/UART_TEST.c ****         return ( ((uint16)UART_TEST_ReadRxStatus() << 8u) | UART_TEST_ReadRxData() );
 661:.\Generated_Source\PSoC5/UART_TEST.c ****     }
 662:.\Generated_Source\PSoC5/UART_TEST.c **** 
 663:.\Generated_Source\PSoC5/UART_TEST.c **** 
 664:.\Generated_Source\PSoC5/UART_TEST.c ****     /*******************************************************************************
 665:.\Generated_Source\PSoC5/UART_TEST.c ****     * Function Name: UART_TEST_GetRxBufferSize
 666:.\Generated_Source\PSoC5/UART_TEST.c ****     ********************************************************************************
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 18


 667:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 668:.\Generated_Source\PSoC5/UART_TEST.c ****     * Summary:
 669:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Determine the amount of bytes left in the RX buffer and return the count in
 670:.\Generated_Source\PSoC5/UART_TEST.c ****     *  bytes
 671:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 672:.\Generated_Source\PSoC5/UART_TEST.c ****     * Parameters:
 673:.\Generated_Source\PSoC5/UART_TEST.c ****     *  None.
 674:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 675:.\Generated_Source\PSoC5/UART_TEST.c ****     * Return:
 676:.\Generated_Source\PSoC5/UART_TEST.c ****     *  uint8: Integer count of the number of bytes left
 677:.\Generated_Source\PSoC5/UART_TEST.c ****     *  in the RX buffer
 678:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 679:.\Generated_Source\PSoC5/UART_TEST.c ****     * Global Variables:
 680:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST_rxBufferWrite - used to calculate left bytes.
 681:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST_rxBufferRead - used to calculate left bytes.
 682:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST_rxBufferLoopDetect - checked to decide left bytes amount.
 683:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 684:.\Generated_Source\PSoC5/UART_TEST.c ****     * Reentrant:
 685:.\Generated_Source\PSoC5/UART_TEST.c ****     *  No.
 686:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 687:.\Generated_Source\PSoC5/UART_TEST.c ****     * Theory:
 688:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Allows the user to find out how full the RX Buffer is.
 689:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 690:.\Generated_Source\PSoC5/UART_TEST.c ****     *******************************************************************************/
 691:.\Generated_Source\PSoC5/UART_TEST.c ****     uint8 UART_TEST_GetRxBufferSize(void)
 692:.\Generated_Source\PSoC5/UART_TEST.c ****                                                             
 693:.\Generated_Source\PSoC5/UART_TEST.c ****     {
 694:.\Generated_Source\PSoC5/UART_TEST.c ****         uint8 size;
 695:.\Generated_Source\PSoC5/UART_TEST.c **** 
 696:.\Generated_Source\PSoC5/UART_TEST.c ****         #if(UART_TEST_RXBUFFERSIZE > UART_TEST_FIFO_LENGTH)
 697:.\Generated_Source\PSoC5/UART_TEST.c **** 
 698:.\Generated_Source\PSoC5/UART_TEST.c ****             /* Disable Rx interrupt. */
 699:.\Generated_Source\PSoC5/UART_TEST.c ****             /* Protect variables that could change on interrupt. */
 700:.\Generated_Source\PSoC5/UART_TEST.c ****             #if(UART_TEST_RX_INTERRUPT_ENABLED)
 701:.\Generated_Source\PSoC5/UART_TEST.c ****                 UART_TEST_DisableRxInt();
 702:.\Generated_Source\PSoC5/UART_TEST.c ****             #endif /* UART_TEST_RX_INTERRUPT_ENABLED */
 703:.\Generated_Source\PSoC5/UART_TEST.c **** 
 704:.\Generated_Source\PSoC5/UART_TEST.c ****             if(UART_TEST_rxBufferRead == UART_TEST_rxBufferWrite)
 705:.\Generated_Source\PSoC5/UART_TEST.c ****             {
 706:.\Generated_Source\PSoC5/UART_TEST.c ****                 if(UART_TEST_rxBufferLoopDetect > 0u)
 707:.\Generated_Source\PSoC5/UART_TEST.c ****                 {
 708:.\Generated_Source\PSoC5/UART_TEST.c ****                     size = UART_TEST_RXBUFFERSIZE;
 709:.\Generated_Source\PSoC5/UART_TEST.c ****                 }
 710:.\Generated_Source\PSoC5/UART_TEST.c ****                 else
 711:.\Generated_Source\PSoC5/UART_TEST.c ****                 {
 712:.\Generated_Source\PSoC5/UART_TEST.c ****                     size = 0u;
 713:.\Generated_Source\PSoC5/UART_TEST.c ****                 }
 714:.\Generated_Source\PSoC5/UART_TEST.c ****             }
 715:.\Generated_Source\PSoC5/UART_TEST.c ****             else if(UART_TEST_rxBufferRead < UART_TEST_rxBufferWrite)
 716:.\Generated_Source\PSoC5/UART_TEST.c ****             {
 717:.\Generated_Source\PSoC5/UART_TEST.c ****                 size = (UART_TEST_rxBufferWrite - UART_TEST_rxBufferRead);
 718:.\Generated_Source\PSoC5/UART_TEST.c ****             }
 719:.\Generated_Source\PSoC5/UART_TEST.c ****             else
 720:.\Generated_Source\PSoC5/UART_TEST.c ****             {
 721:.\Generated_Source\PSoC5/UART_TEST.c ****                 size = (UART_TEST_RXBUFFERSIZE - UART_TEST_rxBufferRead) + UART_TEST_rxBufferWrite;
 722:.\Generated_Source\PSoC5/UART_TEST.c ****             }
 723:.\Generated_Source\PSoC5/UART_TEST.c **** 
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 19


 724:.\Generated_Source\PSoC5/UART_TEST.c ****             /* Enable Rx interrupt. */
 725:.\Generated_Source\PSoC5/UART_TEST.c ****             #if(UART_TEST_RX_INTERRUPT_ENABLED)
 726:.\Generated_Source\PSoC5/UART_TEST.c ****                 UART_TEST_EnableRxInt();
 727:.\Generated_Source\PSoC5/UART_TEST.c ****             #endif /* End UART_TEST_RX_INTERRUPT_ENABLED */
 728:.\Generated_Source\PSoC5/UART_TEST.c **** 
 729:.\Generated_Source\PSoC5/UART_TEST.c ****         #else /* UART_TEST_RXBUFFERSIZE > UART_TEST_FIFO_LENGTH */
 730:.\Generated_Source\PSoC5/UART_TEST.c **** 
 731:.\Generated_Source\PSoC5/UART_TEST.c ****             /* We can only know if there is data in the fifo. */
 732:.\Generated_Source\PSoC5/UART_TEST.c ****             size = ((UART_TEST_RXSTATUS_REG & UART_TEST_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 733:.\Generated_Source\PSoC5/UART_TEST.c **** 
 734:.\Generated_Source\PSoC5/UART_TEST.c ****         #endif /* End UART_TEST_RXBUFFERSIZE > UART_TEST_FIFO_LENGTH */
 735:.\Generated_Source\PSoC5/UART_TEST.c **** 
 736:.\Generated_Source\PSoC5/UART_TEST.c ****         return(size);
 737:.\Generated_Source\PSoC5/UART_TEST.c ****     }
 738:.\Generated_Source\PSoC5/UART_TEST.c **** 
 739:.\Generated_Source\PSoC5/UART_TEST.c **** 
 740:.\Generated_Source\PSoC5/UART_TEST.c ****     /*******************************************************************************
 741:.\Generated_Source\PSoC5/UART_TEST.c ****     * Function Name: UART_TEST_ClearRxBuffer
 742:.\Generated_Source\PSoC5/UART_TEST.c ****     ********************************************************************************
 743:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 744:.\Generated_Source\PSoC5/UART_TEST.c ****     * Summary:
 745:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Clears the RX RAM buffer by setting the read and write pointers both to zero.
 746:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Clears hardware RX FIFO.
 747:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 748:.\Generated_Source\PSoC5/UART_TEST.c ****     * Parameters:
 749:.\Generated_Source\PSoC5/UART_TEST.c ****     *  None.
 750:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 751:.\Generated_Source\PSoC5/UART_TEST.c ****     * Return:
 752:.\Generated_Source\PSoC5/UART_TEST.c ****     *  None.
 753:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 754:.\Generated_Source\PSoC5/UART_TEST.c ****     * Global Variables:
 755:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST_rxBufferWrite - cleared to zero.
 756:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST_rxBufferRead - cleared to zero.
 757:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST_rxBufferLoopDetect - cleared to zero.
 758:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST_rxBufferOverflow - cleared to zero.
 759:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 760:.\Generated_Source\PSoC5/UART_TEST.c ****     * Reentrant:
 761:.\Generated_Source\PSoC5/UART_TEST.c ****     *  No.
 762:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 763:.\Generated_Source\PSoC5/UART_TEST.c ****     * Theory:
 764:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 765:.\Generated_Source\PSoC5/UART_TEST.c ****     *  read and writing will resume at address 0 overwriting any data that may
 766:.\Generated_Source\PSoC5/UART_TEST.c ****     *  have remained in the RAM.
 767:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 768:.\Generated_Source\PSoC5/UART_TEST.c ****     * Side Effects:
 769:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 770:.\Generated_Source\PSoC5/UART_TEST.c ****     *******************************************************************************/
 771:.\Generated_Source\PSoC5/UART_TEST.c ****     void UART_TEST_ClearRxBuffer(void) 
 772:.\Generated_Source\PSoC5/UART_TEST.c ****     {
 773:.\Generated_Source\PSoC5/UART_TEST.c ****         uint8 enableInterrupts;
 774:.\Generated_Source\PSoC5/UART_TEST.c **** 
 775:.\Generated_Source\PSoC5/UART_TEST.c ****         /* clear the HW FIFO */
 776:.\Generated_Source\PSoC5/UART_TEST.c ****         /* Enter critical section */
 777:.\Generated_Source\PSoC5/UART_TEST.c ****         enableInterrupts = CyEnterCriticalSection();
 778:.\Generated_Source\PSoC5/UART_TEST.c ****         UART_TEST_RXDATA_AUX_CTL_REG |=  UART_TEST_RX_FIFO_CLR;
 779:.\Generated_Source\PSoC5/UART_TEST.c ****         UART_TEST_RXDATA_AUX_CTL_REG &= (uint8)~UART_TEST_RX_FIFO_CLR;
 780:.\Generated_Source\PSoC5/UART_TEST.c ****         /* Exit critical section */
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 20


 781:.\Generated_Source\PSoC5/UART_TEST.c ****         CyExitCriticalSection(enableInterrupts);
 782:.\Generated_Source\PSoC5/UART_TEST.c **** 
 783:.\Generated_Source\PSoC5/UART_TEST.c ****         #if(UART_TEST_RXBUFFERSIZE > UART_TEST_FIFO_LENGTH)
 784:.\Generated_Source\PSoC5/UART_TEST.c ****             /* Disable Rx interrupt. */
 785:.\Generated_Source\PSoC5/UART_TEST.c ****             /* Protect variables that could change on interrupt. */
 786:.\Generated_Source\PSoC5/UART_TEST.c ****             #if(UART_TEST_RX_INTERRUPT_ENABLED)
 787:.\Generated_Source\PSoC5/UART_TEST.c ****                 UART_TEST_DisableRxInt();
 788:.\Generated_Source\PSoC5/UART_TEST.c ****             #endif /* End UART_TEST_RX_INTERRUPT_ENABLED */
 789:.\Generated_Source\PSoC5/UART_TEST.c **** 
 790:.\Generated_Source\PSoC5/UART_TEST.c ****             UART_TEST_rxBufferRead = 0u;
 791:.\Generated_Source\PSoC5/UART_TEST.c ****             UART_TEST_rxBufferWrite = 0u;
 792:.\Generated_Source\PSoC5/UART_TEST.c ****             UART_TEST_rxBufferLoopDetect = 0u;
 793:.\Generated_Source\PSoC5/UART_TEST.c ****             UART_TEST_rxBufferOverflow = 0u;
 794:.\Generated_Source\PSoC5/UART_TEST.c **** 
 795:.\Generated_Source\PSoC5/UART_TEST.c ****             /* Enable Rx interrupt. */
 796:.\Generated_Source\PSoC5/UART_TEST.c ****             #if(UART_TEST_RX_INTERRUPT_ENABLED)
 797:.\Generated_Source\PSoC5/UART_TEST.c ****                 UART_TEST_EnableRxInt();
 798:.\Generated_Source\PSoC5/UART_TEST.c ****             #endif /* End UART_TEST_RX_INTERRUPT_ENABLED */
 799:.\Generated_Source\PSoC5/UART_TEST.c ****         #endif /* End UART_TEST_RXBUFFERSIZE > UART_TEST_FIFO_LENGTH */
 800:.\Generated_Source\PSoC5/UART_TEST.c **** 
 801:.\Generated_Source\PSoC5/UART_TEST.c ****     }
 802:.\Generated_Source\PSoC5/UART_TEST.c **** 
 803:.\Generated_Source\PSoC5/UART_TEST.c **** 
 804:.\Generated_Source\PSoC5/UART_TEST.c ****     /*******************************************************************************
 805:.\Generated_Source\PSoC5/UART_TEST.c ****     * Function Name: UART_TEST_SetRxAddressMode
 806:.\Generated_Source\PSoC5/UART_TEST.c ****     ********************************************************************************
 807:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 808:.\Generated_Source\PSoC5/UART_TEST.c ****     * Summary:
 809:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Set the receive addressing mode
 810:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 811:.\Generated_Source\PSoC5/UART_TEST.c ****     * Parameters:
 812:.\Generated_Source\PSoC5/UART_TEST.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 813:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 814:.\Generated_Source\PSoC5/UART_TEST.c ****     *                                               detection
 815:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 816:.\Generated_Source\PSoC5/UART_TEST.c ****     *                                               address detection
 817:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 818:.\Generated_Source\PSoC5/UART_TEST.c ****     *                                               detection
 819:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 820:.\Generated_Source\PSoC5/UART_TEST.c ****     *                                               address detection
 821:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST__B_UART__AM_NONE - No address detection
 822:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 823:.\Generated_Source\PSoC5/UART_TEST.c ****     * Return:
 824:.\Generated_Source\PSoC5/UART_TEST.c ****     *  None.
 825:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 826:.\Generated_Source\PSoC5/UART_TEST.c ****     * Global Variables:
 827:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST_rxAddressMode - the parameter stored in this variable for
 828:.\Generated_Source\PSoC5/UART_TEST.c ****     *   the farther usage in RX ISR.
 829:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST_rxAddressDetected - set to initial state (0).
 830:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 831:.\Generated_Source\PSoC5/UART_TEST.c ****     *******************************************************************************/
 832:.\Generated_Source\PSoC5/UART_TEST.c ****     void UART_TEST_SetRxAddressMode(uint8 addressMode)
 833:.\Generated_Source\PSoC5/UART_TEST.c ****                                                         
 834:.\Generated_Source\PSoC5/UART_TEST.c ****     {
 835:.\Generated_Source\PSoC5/UART_TEST.c ****         #if(UART_TEST_RXHW_ADDRESS_ENABLED)
 836:.\Generated_Source\PSoC5/UART_TEST.c ****             #if(UART_TEST_CONTROL_REG_REMOVED)
 837:.\Generated_Source\PSoC5/UART_TEST.c ****                 if(addressMode != 0u) { }     /* release compiler warning */
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 21


 838:.\Generated_Source\PSoC5/UART_TEST.c ****             #else /* UART_TEST_CONTROL_REG_REMOVED */
 839:.\Generated_Source\PSoC5/UART_TEST.c ****                 uint8 tmpCtrl;
 840:.\Generated_Source\PSoC5/UART_TEST.c ****                 tmpCtrl = UART_TEST_CONTROL_REG & (uint8)~UART_TEST_CTRL_RXADDR_MODE_MASK;
 841:.\Generated_Source\PSoC5/UART_TEST.c ****                 tmpCtrl |= (uint8)(addressMode << UART_TEST_CTRL_RXADDR_MODE0_SHIFT);
 842:.\Generated_Source\PSoC5/UART_TEST.c ****                 UART_TEST_CONTROL_REG = tmpCtrl;
 843:.\Generated_Source\PSoC5/UART_TEST.c ****                 #if(UART_TEST_RX_INTERRUPT_ENABLED && \
 844:.\Generated_Source\PSoC5/UART_TEST.c ****                    (UART_TEST_RXBUFFERSIZE > UART_TEST_FIFO_LENGTH) )
 845:.\Generated_Source\PSoC5/UART_TEST.c ****                     UART_TEST_rxAddressMode = addressMode;
 846:.\Generated_Source\PSoC5/UART_TEST.c ****                     UART_TEST_rxAddressDetected = 0u;
 847:.\Generated_Source\PSoC5/UART_TEST.c ****                 #endif /* End UART_TEST_RXBUFFERSIZE > UART_TEST_FIFO_LENGTH*/
 848:.\Generated_Source\PSoC5/UART_TEST.c ****             #endif /* End UART_TEST_CONTROL_REG_REMOVED */
 849:.\Generated_Source\PSoC5/UART_TEST.c ****         #else /* UART_TEST_RXHW_ADDRESS_ENABLED */
 850:.\Generated_Source\PSoC5/UART_TEST.c ****             if(addressMode != 0u) { }     /* release compiler warning */
 851:.\Generated_Source\PSoC5/UART_TEST.c ****         #endif /* End UART_TEST_RXHW_ADDRESS_ENABLED */
 852:.\Generated_Source\PSoC5/UART_TEST.c ****     }
 853:.\Generated_Source\PSoC5/UART_TEST.c **** 
 854:.\Generated_Source\PSoC5/UART_TEST.c **** 
 855:.\Generated_Source\PSoC5/UART_TEST.c ****     /*******************************************************************************
 856:.\Generated_Source\PSoC5/UART_TEST.c ****     * Function Name: UART_TEST_SetRxAddress1
 857:.\Generated_Source\PSoC5/UART_TEST.c ****     ********************************************************************************
 858:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 859:.\Generated_Source\PSoC5/UART_TEST.c ****     * Summary:
 860:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Set the first hardware address compare value
 861:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 862:.\Generated_Source\PSoC5/UART_TEST.c ****     * Parameters:
 863:.\Generated_Source\PSoC5/UART_TEST.c ****     *  address
 864:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 865:.\Generated_Source\PSoC5/UART_TEST.c ****     * Return:
 866:.\Generated_Source\PSoC5/UART_TEST.c ****     *  None.
 867:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 868:.\Generated_Source\PSoC5/UART_TEST.c ****     *******************************************************************************/
 869:.\Generated_Source\PSoC5/UART_TEST.c ****     void UART_TEST_SetRxAddress1(uint8 address) 
 870:.\Generated_Source\PSoC5/UART_TEST.c **** 
 871:.\Generated_Source\PSoC5/UART_TEST.c ****     {
 872:.\Generated_Source\PSoC5/UART_TEST.c ****         UART_TEST_RXADDRESS1_REG = address;
 873:.\Generated_Source\PSoC5/UART_TEST.c ****     }
 874:.\Generated_Source\PSoC5/UART_TEST.c **** 
 875:.\Generated_Source\PSoC5/UART_TEST.c **** 
 876:.\Generated_Source\PSoC5/UART_TEST.c ****     /*******************************************************************************
 877:.\Generated_Source\PSoC5/UART_TEST.c ****     * Function Name: UART_TEST_SetRxAddress2
 878:.\Generated_Source\PSoC5/UART_TEST.c ****     ********************************************************************************
 879:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 880:.\Generated_Source\PSoC5/UART_TEST.c ****     * Summary:
 881:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Set the second hardware address compare value
 882:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 883:.\Generated_Source\PSoC5/UART_TEST.c ****     * Parameters:
 884:.\Generated_Source\PSoC5/UART_TEST.c ****     *  address
 885:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 886:.\Generated_Source\PSoC5/UART_TEST.c ****     * Return:
 887:.\Generated_Source\PSoC5/UART_TEST.c ****     *  None.
 888:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 889:.\Generated_Source\PSoC5/UART_TEST.c ****     *******************************************************************************/
 890:.\Generated_Source\PSoC5/UART_TEST.c ****     void UART_TEST_SetRxAddress2(uint8 address) 
 891:.\Generated_Source\PSoC5/UART_TEST.c ****     {
 892:.\Generated_Source\PSoC5/UART_TEST.c ****         UART_TEST_RXADDRESS2_REG = address;
 893:.\Generated_Source\PSoC5/UART_TEST.c ****     }
 894:.\Generated_Source\PSoC5/UART_TEST.c **** 
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 22


 895:.\Generated_Source\PSoC5/UART_TEST.c **** #endif  /* UART_TEST_RX_ENABLED || UART_TEST_HD_ENABLED*/
 896:.\Generated_Source\PSoC5/UART_TEST.c **** 
 897:.\Generated_Source\PSoC5/UART_TEST.c **** 
 898:.\Generated_Source\PSoC5/UART_TEST.c **** #if( (UART_TEST_TX_ENABLED) || (UART_TEST_HD_ENABLED) )
 899:.\Generated_Source\PSoC5/UART_TEST.c **** 
 900:.\Generated_Source\PSoC5/UART_TEST.c ****     #if(UART_TEST_TX_INTERRUPT_ENABLED)
 901:.\Generated_Source\PSoC5/UART_TEST.c **** 
 902:.\Generated_Source\PSoC5/UART_TEST.c ****         /*******************************************************************************
 903:.\Generated_Source\PSoC5/UART_TEST.c ****         * Function Name: UART_TEST_EnableTxInt
 904:.\Generated_Source\PSoC5/UART_TEST.c ****         ********************************************************************************
 905:.\Generated_Source\PSoC5/UART_TEST.c ****         *
 906:.\Generated_Source\PSoC5/UART_TEST.c ****         * Summary:
 907:.\Generated_Source\PSoC5/UART_TEST.c ****         *  Enable TX interrupt generation
 908:.\Generated_Source\PSoC5/UART_TEST.c ****         *
 909:.\Generated_Source\PSoC5/UART_TEST.c ****         * Parameters:
 910:.\Generated_Source\PSoC5/UART_TEST.c ****         *  None.
 911:.\Generated_Source\PSoC5/UART_TEST.c ****         *
 912:.\Generated_Source\PSoC5/UART_TEST.c ****         * Return:
 913:.\Generated_Source\PSoC5/UART_TEST.c ****         *  None.
 914:.\Generated_Source\PSoC5/UART_TEST.c ****         *
 915:.\Generated_Source\PSoC5/UART_TEST.c ****         * Theory:
 916:.\Generated_Source\PSoC5/UART_TEST.c ****         *  Enable the interrupt output -or- the interrupt component itself
 917:.\Generated_Source\PSoC5/UART_TEST.c ****         *
 918:.\Generated_Source\PSoC5/UART_TEST.c ****         *******************************************************************************/
 919:.\Generated_Source\PSoC5/UART_TEST.c ****         void UART_TEST_EnableTxInt(void) 
 920:.\Generated_Source\PSoC5/UART_TEST.c ****         {
 304              		.loc 1 920 0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 1, uses_anonymous_args = 0
 308              		@ link register save eliminated.
 309 0000 80B4     		push	{r7}
 310              	.LCFI15:
 311              		.cfi_def_cfa_offset 4
 312              		.cfi_offset 7, -4
 313 0002 00AF     		add	r7, sp, #0
 314              	.LCFI16:
 315              		.cfi_def_cfa_register 7
 921:.\Generated_Source\PSoC5/UART_TEST.c ****             CyIntEnable(UART_TEST_TX_VECT_NUM);
 316              		.loc 1 921 0
 317 0004 4FF46143 		mov	r3, #57600
 318 0008 CEF20003 		movt	r3, 57344
 319 000c 4FF02002 		mov	r2, #32
 320 0010 1A60     		str	r2, [r3, #0]
 922:.\Generated_Source\PSoC5/UART_TEST.c ****         }
 321              		.loc 1 922 0
 322 0012 BD46     		mov	sp, r7
 323 0014 80BC     		pop	{r7}
 324 0016 7047     		bx	lr
 325              		.cfi_endproc
 326              	.LFE6:
 327              		.size	UART_TEST_EnableTxInt, .-UART_TEST_EnableTxInt
 328              		.section	.text.UART_TEST_DisableTxInt,"ax",%progbits
 329              		.align	2
 330              		.global	UART_TEST_DisableTxInt
 331              		.thumb
 332              		.thumb_func
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 23


 333              		.type	UART_TEST_DisableTxInt, %function
 334              	UART_TEST_DisableTxInt:
 335              	.LFB7:
 923:.\Generated_Source\PSoC5/UART_TEST.c **** 
 924:.\Generated_Source\PSoC5/UART_TEST.c **** 
 925:.\Generated_Source\PSoC5/UART_TEST.c ****         /*******************************************************************************
 926:.\Generated_Source\PSoC5/UART_TEST.c ****         * Function Name: UART_TEST_DisableTxInt
 927:.\Generated_Source\PSoC5/UART_TEST.c ****         ********************************************************************************
 928:.\Generated_Source\PSoC5/UART_TEST.c ****         *
 929:.\Generated_Source\PSoC5/UART_TEST.c ****         * Summary:
 930:.\Generated_Source\PSoC5/UART_TEST.c ****         *  Disable TX interrupt generation
 931:.\Generated_Source\PSoC5/UART_TEST.c ****         *
 932:.\Generated_Source\PSoC5/UART_TEST.c ****         * Parameters:
 933:.\Generated_Source\PSoC5/UART_TEST.c ****         *  None.
 934:.\Generated_Source\PSoC5/UART_TEST.c ****         *
 935:.\Generated_Source\PSoC5/UART_TEST.c ****         * Return:
 936:.\Generated_Source\PSoC5/UART_TEST.c ****         *  None.
 937:.\Generated_Source\PSoC5/UART_TEST.c ****         *
 938:.\Generated_Source\PSoC5/UART_TEST.c ****         * Theory:
 939:.\Generated_Source\PSoC5/UART_TEST.c ****         *  Disable the interrupt output -or- the interrupt component itself
 940:.\Generated_Source\PSoC5/UART_TEST.c ****         *
 941:.\Generated_Source\PSoC5/UART_TEST.c ****         *******************************************************************************/
 942:.\Generated_Source\PSoC5/UART_TEST.c ****         void UART_TEST_DisableTxInt(void) 
 943:.\Generated_Source\PSoC5/UART_TEST.c ****         {
 336              		.loc 1 943 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 1, uses_anonymous_args = 0
 340              		@ link register save eliminated.
 341 0000 80B4     		push	{r7}
 342              	.LCFI17:
 343              		.cfi_def_cfa_offset 4
 344              		.cfi_offset 7, -4
 345 0002 00AF     		add	r7, sp, #0
 346              	.LCFI18:
 347              		.cfi_def_cfa_register 7
 944:.\Generated_Source\PSoC5/UART_TEST.c ****             CyIntDisable(UART_TEST_TX_VECT_NUM);
 348              		.loc 1 944 0
 349 0004 4EF28013 		movw	r3, #57728
 350 0008 CEF20003 		movt	r3, 57344
 351 000c 4FF02002 		mov	r2, #32
 352 0010 1A60     		str	r2, [r3, #0]
 945:.\Generated_Source\PSoC5/UART_TEST.c ****         }
 353              		.loc 1 945 0
 354 0012 BD46     		mov	sp, r7
 355 0014 80BC     		pop	{r7}
 356 0016 7047     		bx	lr
 357              		.cfi_endproc
 358              	.LFE7:
 359              		.size	UART_TEST_DisableTxInt, .-UART_TEST_DisableTxInt
 360              		.section	.text.UART_TEST_SetTxInterruptMode,"ax",%progbits
 361              		.align	2
 362              		.global	UART_TEST_SetTxInterruptMode
 363              		.thumb
 364              		.thumb_func
 365              		.type	UART_TEST_SetTxInterruptMode, %function
 366              	UART_TEST_SetTxInterruptMode:
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 24


 367              	.LFB8:
 946:.\Generated_Source\PSoC5/UART_TEST.c **** 
 947:.\Generated_Source\PSoC5/UART_TEST.c ****     #endif /* UART_TEST_TX_INTERRUPT_ENABLED */
 948:.\Generated_Source\PSoC5/UART_TEST.c **** 
 949:.\Generated_Source\PSoC5/UART_TEST.c **** 
 950:.\Generated_Source\PSoC5/UART_TEST.c ****     /*******************************************************************************
 951:.\Generated_Source\PSoC5/UART_TEST.c ****     * Function Name: UART_TEST_SetTxInterruptMode
 952:.\Generated_Source\PSoC5/UART_TEST.c ****     ********************************************************************************
 953:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 954:.\Generated_Source\PSoC5/UART_TEST.c ****     * Summary:
 955:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Configure which status bits trigger an interrupt event
 956:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 957:.\Generated_Source\PSoC5/UART_TEST.c ****     * Parameters:
 958:.\Generated_Source\PSoC5/UART_TEST.c ****     *  intSrc: An or'd combination of the desired status bit masks (defined in
 959:.\Generated_Source\PSoC5/UART_TEST.c ****     *          the header file)
 960:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 961:.\Generated_Source\PSoC5/UART_TEST.c ****     * Return:
 962:.\Generated_Source\PSoC5/UART_TEST.c ****     *  None.
 963:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 964:.\Generated_Source\PSoC5/UART_TEST.c ****     * Theory:
 965:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Enables the output of specific status bits to the interrupt controller
 966:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 967:.\Generated_Source\PSoC5/UART_TEST.c ****     *******************************************************************************/
 968:.\Generated_Source\PSoC5/UART_TEST.c ****     void UART_TEST_SetTxInterruptMode(uint8 intSrc) 
 969:.\Generated_Source\PSoC5/UART_TEST.c ****     {
 368              		.loc 1 969 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 8
 371              		@ frame_needed = 1, uses_anonymous_args = 0
 372              		@ link register save eliminated.
 373 0000 80B4     		push	{r7}
 374              	.LCFI19:
 375              		.cfi_def_cfa_offset 4
 376              		.cfi_offset 7, -4
 377 0002 83B0     		sub	sp, sp, #12
 378              	.LCFI20:
 379              		.cfi_def_cfa_offset 16
 380 0004 00AF     		add	r7, sp, #0
 381              	.LCFI21:
 382              		.cfi_def_cfa_register 7
 383 0006 0346     		mov	r3, r0
 384 0008 FB71     		strb	r3, [r7, #7]
 970:.\Generated_Source\PSoC5/UART_TEST.c ****         UART_TEST_TXSTATUS_MASK_REG = intSrc;
 385              		.loc 1 970 0
 386 000a 46F28343 		movw	r3, #25731
 387 000e C4F20003 		movt	r3, 16384
 388 0012 FA79     		ldrb	r2, [r7, #7]
 389 0014 1A70     		strb	r2, [r3, #0]
 971:.\Generated_Source\PSoC5/UART_TEST.c ****     }
 390              		.loc 1 971 0
 391 0016 07F10C07 		add	r7, r7, #12
 392 001a BD46     		mov	sp, r7
 393 001c 80BC     		pop	{r7}
 394 001e 7047     		bx	lr
 395              		.cfi_endproc
 396              	.LFE8:
 397              		.size	UART_TEST_SetTxInterruptMode, .-UART_TEST_SetTxInterruptMode
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 25


 398              		.section	.text.UART_TEST_WriteTxData,"ax",%progbits
 399              		.align	2
 400              		.global	UART_TEST_WriteTxData
 401              		.thumb
 402              		.thumb_func
 403              		.type	UART_TEST_WriteTxData, %function
 404              	UART_TEST_WriteTxData:
 405              	.LFB9:
 972:.\Generated_Source\PSoC5/UART_TEST.c **** 
 973:.\Generated_Source\PSoC5/UART_TEST.c **** 
 974:.\Generated_Source\PSoC5/UART_TEST.c ****     /*******************************************************************************
 975:.\Generated_Source\PSoC5/UART_TEST.c ****     * Function Name: UART_TEST_WriteTxData
 976:.\Generated_Source\PSoC5/UART_TEST.c ****     ********************************************************************************
 977:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 978:.\Generated_Source\PSoC5/UART_TEST.c ****     * Summary:
 979:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Write a byte of data to the Transmit FIFO or TX buffer to be sent when the
 980:.\Generated_Source\PSoC5/UART_TEST.c ****     *  bus is available. WriteTxData sends a byte without checking for buffer room
 981:.\Generated_Source\PSoC5/UART_TEST.c ****     *  or status. It is up to the user to separately check status.
 982:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 983:.\Generated_Source\PSoC5/UART_TEST.c ****     * Parameters:
 984:.\Generated_Source\PSoC5/UART_TEST.c ****     *  TXDataByte: byte of data to place in the transmit FIFO
 985:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 986:.\Generated_Source\PSoC5/UART_TEST.c ****     * Return:
 987:.\Generated_Source\PSoC5/UART_TEST.c ****     * void
 988:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 989:.\Generated_Source\PSoC5/UART_TEST.c ****     * Global Variables:
 990:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST_txBuffer - RAM buffer pointer for save data for transmission
 991:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST_txBufferWrite - cyclic index for write to txBuffer,
 992:.\Generated_Source\PSoC5/UART_TEST.c ****     *    incremented after each byte saved to buffer.
 993:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST_txBufferRead - cyclic index for read from txBuffer,
 994:.\Generated_Source\PSoC5/UART_TEST.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 995:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST_initVar - checked to identify that the component has been
 996:.\Generated_Source\PSoC5/UART_TEST.c ****     *    initialized.
 997:.\Generated_Source\PSoC5/UART_TEST.c ****     *
 998:.\Generated_Source\PSoC5/UART_TEST.c ****     * Reentrant:
 999:.\Generated_Source\PSoC5/UART_TEST.c ****     *  No.
1000:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1001:.\Generated_Source\PSoC5/UART_TEST.c ****     *******************************************************************************/
1002:.\Generated_Source\PSoC5/UART_TEST.c ****     void UART_TEST_WriteTxData(uint8 txDataByte) 
1003:.\Generated_Source\PSoC5/UART_TEST.c ****     {
 406              		.loc 1 1003 0
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 8
 409              		@ frame_needed = 1, uses_anonymous_args = 0
 410 0000 80B5     		push	{r7, lr}
 411              	.LCFI22:
 412              		.cfi_def_cfa_offset 8
 413              		.cfi_offset 7, -8
 414              		.cfi_offset 14, -4
 415 0002 82B0     		sub	sp, sp, #8
 416              	.LCFI23:
 417              		.cfi_def_cfa_offset 16
 418 0004 00AF     		add	r7, sp, #0
 419              	.LCFI24:
 420              		.cfi_def_cfa_register 7
 421 0006 0346     		mov	r3, r0
 422 0008 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 26


1004:.\Generated_Source\PSoC5/UART_TEST.c ****         /* If not Initialized then skip this function*/
1005:.\Generated_Source\PSoC5/UART_TEST.c ****         if(UART_TEST_initVar != 0u)
 423              		.loc 1 1005 0
 424 000a 40F20003 		movw	r3, #:lower16:UART_TEST_initVar
 425 000e C0F20003 		movt	r3, #:upper16:UART_TEST_initVar
 426 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 427 0014 002B     		cmp	r3, #0
 428 0016 48D0     		beq	.L12
1006:.\Generated_Source\PSoC5/UART_TEST.c ****         {
1007:.\Generated_Source\PSoC5/UART_TEST.c ****             #if(UART_TEST_TXBUFFERSIZE > UART_TEST_FIFO_LENGTH)
1008:.\Generated_Source\PSoC5/UART_TEST.c **** 
1009:.\Generated_Source\PSoC5/UART_TEST.c ****                 /* Disable Tx interrupt. */
1010:.\Generated_Source\PSoC5/UART_TEST.c ****                 /* Protect variables that could change on interrupt. */
1011:.\Generated_Source\PSoC5/UART_TEST.c ****                 #if(UART_TEST_TX_INTERRUPT_ENABLED)
1012:.\Generated_Source\PSoC5/UART_TEST.c ****                     UART_TEST_DisableTxInt();
 429              		.loc 1 1012 0
 430 0018 FFF7FEFF 		bl	UART_TEST_DisableTxInt
1013:.\Generated_Source\PSoC5/UART_TEST.c ****                 #endif /* End UART_TEST_TX_INTERRUPT_ENABLED */
1014:.\Generated_Source\PSoC5/UART_TEST.c **** 
1015:.\Generated_Source\PSoC5/UART_TEST.c ****                 if( (UART_TEST_txBufferRead == UART_TEST_txBufferWrite) &&
 431              		.loc 1 1015 0
 432 001c 40F20003 		movw	r3, #:lower16:UART_TEST_txBufferRead
 433 0020 C0F20003 		movt	r3, #:upper16:UART_TEST_txBufferRead
 434 0024 1B78     		ldrb	r3, [r3, #0]
 435 0026 DAB2     		uxtb	r2, r3
 436 0028 40F20003 		movw	r3, #:lower16:UART_TEST_txBufferWrite
 437 002c C0F20003 		movt	r3, #:upper16:UART_TEST_txBufferWrite
 438 0030 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 439 0032 9A42     		cmp	r2, r3
 440 0034 10D1     		bne	.L14
1016:.\Generated_Source\PSoC5/UART_TEST.c ****                     ((UART_TEST_TXSTATUS_REG & UART_TEST_TX_STS_FIFO_FULL) == 0u) )
 441              		.loc 1 1016 0 discriminator 1
 442 0036 46F26343 		movw	r3, #25699
 443 003a C4F20003 		movt	r3, 16384
 444 003e 1B78     		ldrb	r3, [r3, #0]
 445 0040 DBB2     		uxtb	r3, r3
 446 0042 03F00403 		and	r3, r3, #4
1015:.\Generated_Source\PSoC5/UART_TEST.c ****                 if( (UART_TEST_txBufferRead == UART_TEST_txBufferWrite) &&
 447              		.loc 1 1015 0 discriminator 1
 448 0046 002B     		cmp	r3, #0
 449 0048 06D1     		bne	.L14
1017:.\Generated_Source\PSoC5/UART_TEST.c ****                 {
1018:.\Generated_Source\PSoC5/UART_TEST.c ****                     /* Add directly to the FIFO. */
1019:.\Generated_Source\PSoC5/UART_TEST.c ****                     UART_TEST_TXDATA_REG = txDataByte;
 450              		.loc 1 1019 0
 451 004a 46F24443 		movw	r3, #25668
 452 004e C4F20003 		movt	r3, 16384
 453 0052 FA79     		ldrb	r2, [r7, #7]
 454 0054 1A70     		strb	r2, [r3, #0]
 455 0056 26E0     		b	.L15
 456              	.L14:
1020:.\Generated_Source\PSoC5/UART_TEST.c ****                 }
1021:.\Generated_Source\PSoC5/UART_TEST.c ****                 else
1022:.\Generated_Source\PSoC5/UART_TEST.c ****                 {
1023:.\Generated_Source\PSoC5/UART_TEST.c ****                     if(UART_TEST_txBufferWrite >= UART_TEST_TXBUFFERSIZE)
 457              		.loc 1 1023 0
 458 0058 40F20003 		movw	r3, #:lower16:UART_TEST_txBufferWrite
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 27


 459 005c C0F20003 		movt	r3, #:upper16:UART_TEST_txBufferWrite
 460 0060 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 461 0062 1F2B     		cmp	r3, #31
 462 0064 06D9     		bls	.L16
1024:.\Generated_Source\PSoC5/UART_TEST.c ****                     {
1025:.\Generated_Source\PSoC5/UART_TEST.c ****                         UART_TEST_txBufferWrite = 0u;
 463              		.loc 1 1025 0
 464 0066 40F20003 		movw	r3, #:lower16:UART_TEST_txBufferWrite
 465 006a C0F20003 		movt	r3, #:upper16:UART_TEST_txBufferWrite
 466 006e 4FF00002 		mov	r2, #0
 467 0072 1A70     		strb	r2, [r3, #0]
 468              	.L16:
1026:.\Generated_Source\PSoC5/UART_TEST.c ****                     }
1027:.\Generated_Source\PSoC5/UART_TEST.c **** 
1028:.\Generated_Source\PSoC5/UART_TEST.c ****                     UART_TEST_txBuffer[UART_TEST_txBufferWrite] = txDataByte;
 469              		.loc 1 1028 0
 470 0074 40F20003 		movw	r3, #:lower16:UART_TEST_txBufferWrite
 471 0078 C0F20003 		movt	r3, #:upper16:UART_TEST_txBufferWrite
 472 007c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 473 007e 1A46     		mov	r2, r3
 474 0080 40F20003 		movw	r3, #:lower16:UART_TEST_txBuffer
 475 0084 C0F20003 		movt	r3, #:upper16:UART_TEST_txBuffer
 476 0088 F979     		ldrb	r1, [r7, #7]
 477 008a 9954     		strb	r1, [r3, r2]
1029:.\Generated_Source\PSoC5/UART_TEST.c **** 
1030:.\Generated_Source\PSoC5/UART_TEST.c ****                     /* Add to the software buffer. */
1031:.\Generated_Source\PSoC5/UART_TEST.c ****                     UART_TEST_txBufferWrite++;
 478              		.loc 1 1031 0
 479 008c 40F20003 		movw	r3, #:lower16:UART_TEST_txBufferWrite
 480 0090 C0F20003 		movt	r3, #:upper16:UART_TEST_txBufferWrite
 481 0094 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 482 0096 03F10103 		add	r3, r3, #1
 483 009a DAB2     		uxtb	r2, r3
 484 009c 40F20003 		movw	r3, #:lower16:UART_TEST_txBufferWrite
 485 00a0 C0F20003 		movt	r3, #:upper16:UART_TEST_txBufferWrite
 486 00a4 1A70     		strb	r2, [r3, #0]
 487              	.L15:
1032:.\Generated_Source\PSoC5/UART_TEST.c **** 
1033:.\Generated_Source\PSoC5/UART_TEST.c ****                 }
1034:.\Generated_Source\PSoC5/UART_TEST.c **** 
1035:.\Generated_Source\PSoC5/UART_TEST.c ****                 /* Enable Tx interrupt. */
1036:.\Generated_Source\PSoC5/UART_TEST.c ****                 #if(UART_TEST_TX_INTERRUPT_ENABLED)
1037:.\Generated_Source\PSoC5/UART_TEST.c ****                     UART_TEST_EnableTxInt();
 488              		.loc 1 1037 0
 489 00a6 FFF7FEFF 		bl	UART_TEST_EnableTxInt
 490              	.L12:
1038:.\Generated_Source\PSoC5/UART_TEST.c ****                 #endif /* End UART_TEST_TX_INTERRUPT_ENABLED */
1039:.\Generated_Source\PSoC5/UART_TEST.c **** 
1040:.\Generated_Source\PSoC5/UART_TEST.c ****             #else /* UART_TEST_TXBUFFERSIZE > UART_TEST_FIFO_LENGTH */
1041:.\Generated_Source\PSoC5/UART_TEST.c **** 
1042:.\Generated_Source\PSoC5/UART_TEST.c ****                 /* Add directly to the FIFO. */
1043:.\Generated_Source\PSoC5/UART_TEST.c ****                 UART_TEST_TXDATA_REG = txDataByte;
1044:.\Generated_Source\PSoC5/UART_TEST.c **** 
1045:.\Generated_Source\PSoC5/UART_TEST.c ****             #endif /* End UART_TEST_TXBUFFERSIZE > UART_TEST_FIFO_LENGTH */
1046:.\Generated_Source\PSoC5/UART_TEST.c ****         }
1047:.\Generated_Source\PSoC5/UART_TEST.c ****     }
 491              		.loc 1 1047 0
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 28


 492 00aa 07F10807 		add	r7, r7, #8
 493 00ae BD46     		mov	sp, r7
 494 00b0 80BD     		pop	{r7, pc}
 495              		.cfi_endproc
 496              	.LFE9:
 497              		.size	UART_TEST_WriteTxData, .-UART_TEST_WriteTxData
 498 00b2 00BF     		.section	.text.UART_TEST_ReadTxStatus,"ax",%progbits
 499              		.align	2
 500              		.global	UART_TEST_ReadTxStatus
 501              		.thumb
 502              		.thumb_func
 503              		.type	UART_TEST_ReadTxStatus, %function
 504              	UART_TEST_ReadTxStatus:
 505              	.LFB10:
1048:.\Generated_Source\PSoC5/UART_TEST.c **** 
1049:.\Generated_Source\PSoC5/UART_TEST.c **** 
1050:.\Generated_Source\PSoC5/UART_TEST.c ****     /*******************************************************************************
1051:.\Generated_Source\PSoC5/UART_TEST.c ****     * Function Name: UART_TEST_ReadTxStatus
1052:.\Generated_Source\PSoC5/UART_TEST.c ****     ********************************************************************************
1053:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1054:.\Generated_Source\PSoC5/UART_TEST.c ****     * Summary:
1055:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Read the status register for the component
1056:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1057:.\Generated_Source\PSoC5/UART_TEST.c ****     * Parameters:
1058:.\Generated_Source\PSoC5/UART_TEST.c ****     *  None.
1059:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1060:.\Generated_Source\PSoC5/UART_TEST.c ****     * Return:
1061:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Contents of the status register
1062:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1063:.\Generated_Source\PSoC5/UART_TEST.c ****     * Theory:
1064:.\Generated_Source\PSoC5/UART_TEST.c ****     *  This function reads the status register which is clear on read. It is up to
1065:.\Generated_Source\PSoC5/UART_TEST.c ****     *  the user to handle all bits in this return value accordingly, even if the bit
1066:.\Generated_Source\PSoC5/UART_TEST.c ****     *  was not enabled as an interrupt source the event happened and must be handled
1067:.\Generated_Source\PSoC5/UART_TEST.c ****     *  accordingly.
1068:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1069:.\Generated_Source\PSoC5/UART_TEST.c ****     *******************************************************************************/
1070:.\Generated_Source\PSoC5/UART_TEST.c ****     uint8 UART_TEST_ReadTxStatus(void) 
1071:.\Generated_Source\PSoC5/UART_TEST.c ****     {
 506              		.loc 1 1071 0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 0
 509              		@ frame_needed = 1, uses_anonymous_args = 0
 510              		@ link register save eliminated.
 511 0000 80B4     		push	{r7}
 512              	.LCFI25:
 513              		.cfi_def_cfa_offset 4
 514              		.cfi_offset 7, -4
 515 0002 00AF     		add	r7, sp, #0
 516              	.LCFI26:
 517              		.cfi_def_cfa_register 7
1072:.\Generated_Source\PSoC5/UART_TEST.c ****         return(UART_TEST_TXSTATUS_REG);
 518              		.loc 1 1072 0
 519 0004 46F26343 		movw	r3, #25699
 520 0008 C4F20003 		movt	r3, 16384
 521 000c 1B78     		ldrb	r3, [r3, #0]
 522 000e DBB2     		uxtb	r3, r3
1073:.\Generated_Source\PSoC5/UART_TEST.c ****     }
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 29


 523              		.loc 1 1073 0
 524 0010 1846     		mov	r0, r3
 525 0012 BD46     		mov	sp, r7
 526 0014 80BC     		pop	{r7}
 527 0016 7047     		bx	lr
 528              		.cfi_endproc
 529              	.LFE10:
 530              		.size	UART_TEST_ReadTxStatus, .-UART_TEST_ReadTxStatus
 531              		.section	.text.UART_TEST_PutChar,"ax",%progbits
 532              		.align	2
 533              		.global	UART_TEST_PutChar
 534              		.thumb
 535              		.thumb_func
 536              		.type	UART_TEST_PutChar, %function
 537              	UART_TEST_PutChar:
 538              	.LFB11:
1074:.\Generated_Source\PSoC5/UART_TEST.c **** 
1075:.\Generated_Source\PSoC5/UART_TEST.c **** 
1076:.\Generated_Source\PSoC5/UART_TEST.c ****     /*******************************************************************************
1077:.\Generated_Source\PSoC5/UART_TEST.c ****     * Function Name: UART_TEST_PutChar
1078:.\Generated_Source\PSoC5/UART_TEST.c ****     ********************************************************************************
1079:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1080:.\Generated_Source\PSoC5/UART_TEST.c ****     * Summary:
1081:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Wait to send byte until TX register or buffer has room.
1082:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1083:.\Generated_Source\PSoC5/UART_TEST.c ****     * Parameters:
1084:.\Generated_Source\PSoC5/UART_TEST.c ****     *  txDataByte: The 8-bit data value to send across the UART.
1085:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1086:.\Generated_Source\PSoC5/UART_TEST.c ****     * Return:
1087:.\Generated_Source\PSoC5/UART_TEST.c ****     *  None.
1088:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1089:.\Generated_Source\PSoC5/UART_TEST.c ****     * Global Variables:
1090:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST_txBuffer - RAM buffer pointer for save data for transmission
1091:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST_txBufferWrite - cyclic index for write to txBuffer,
1092:.\Generated_Source\PSoC5/UART_TEST.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1093:.\Generated_Source\PSoC5/UART_TEST.c ****     *     saved to buffer.
1094:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST_txBufferRead - cyclic index for read from txBuffer,
1095:.\Generated_Source\PSoC5/UART_TEST.c ****     *     checked to identify free space in txBuffer.
1096:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST_initVar - checked to identify that the component has been
1097:.\Generated_Source\PSoC5/UART_TEST.c ****     *     initialized.
1098:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1099:.\Generated_Source\PSoC5/UART_TEST.c ****     * Reentrant:
1100:.\Generated_Source\PSoC5/UART_TEST.c ****     *  No.
1101:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1102:.\Generated_Source\PSoC5/UART_TEST.c ****     * Theory:
1103:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Allows the user to transmit any byte of data in a single transfer
1104:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1105:.\Generated_Source\PSoC5/UART_TEST.c ****     *******************************************************************************/
1106:.\Generated_Source\PSoC5/UART_TEST.c ****     void UART_TEST_PutChar(uint8 txDataByte) 
1107:.\Generated_Source\PSoC5/UART_TEST.c ****     {
 539              		.loc 1 1107 0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 16
 542              		@ frame_needed = 1, uses_anonymous_args = 0
 543              		@ link register save eliminated.
 544 0000 80B4     		push	{r7}
 545              	.LCFI27:
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 30


 546              		.cfi_def_cfa_offset 4
 547              		.cfi_offset 7, -4
 548 0002 85B0     		sub	sp, sp, #20
 549              	.LCFI28:
 550              		.cfi_def_cfa_offset 24
 551 0004 00AF     		add	r7, sp, #0
 552              	.LCFI29:
 553              		.cfi_def_cfa_register 7
 554 0006 0346     		mov	r3, r0
 555 0008 FB71     		strb	r3, [r7, #7]
 556              	.L22:
1108:.\Generated_Source\PSoC5/UART_TEST.c ****             #if(UART_TEST_TXBUFFERSIZE > UART_TEST_FIFO_LENGTH)
1109:.\Generated_Source\PSoC5/UART_TEST.c ****                 /* The temporary output pointer is used since it takes two instructions
1110:.\Generated_Source\PSoC5/UART_TEST.c ****                 *  to increment with a wrap, and we can't risk doing that with the real
1111:.\Generated_Source\PSoC5/UART_TEST.c ****                 *  pointer and getting an interrupt in between instructions.
1112:.\Generated_Source\PSoC5/UART_TEST.c ****                 */
1113:.\Generated_Source\PSoC5/UART_TEST.c ****                 uint8 loc_txBufferWrite;
1114:.\Generated_Source\PSoC5/UART_TEST.c ****                 uint8 loc_txBufferRead;
1115:.\Generated_Source\PSoC5/UART_TEST.c **** 
1116:.\Generated_Source\PSoC5/UART_TEST.c ****                 do{
1117:.\Generated_Source\PSoC5/UART_TEST.c ****                     /* Block if software buffer is full, so we don't overwrite. */
1118:.\Generated_Source\PSoC5/UART_TEST.c ****                     #if ((UART_TEST_TXBUFFERSIZE > UART_TEST_MAX_BYTE_VALUE) && (CY_PSOC3))
1119:.\Generated_Source\PSoC5/UART_TEST.c ****                         /* Disable TX interrupt to protect variables that could change on interrupt
1120:.\Generated_Source\PSoC5/UART_TEST.c ****                         CyIntDisable(UART_TEST_TX_VECT_NUM);
1121:.\Generated_Source\PSoC5/UART_TEST.c ****                     #endif /* End TXBUFFERSIZE > 255 */
1122:.\Generated_Source\PSoC5/UART_TEST.c ****                     loc_txBufferWrite = UART_TEST_txBufferWrite;
 557              		.loc 1 1122 0
 558 000a 40F20003 		movw	r3, #:lower16:UART_TEST_txBufferWrite
 559 000e C0F20003 		movt	r3, #:upper16:UART_TEST_txBufferWrite
 560 0012 1B78     		ldrb	r3, [r3, #0]
 561 0014 FB73     		strb	r3, [r7, #15]
1123:.\Generated_Source\PSoC5/UART_TEST.c ****                     loc_txBufferRead = UART_TEST_txBufferRead;
 562              		.loc 1 1123 0
 563 0016 40F20003 		movw	r3, #:lower16:UART_TEST_txBufferRead
 564 001a C0F20003 		movt	r3, #:upper16:UART_TEST_txBufferRead
 565 001e 1B78     		ldrb	r3, [r3, #0]
 566 0020 BB73     		strb	r3, [r7, #14]
1124:.\Generated_Source\PSoC5/UART_TEST.c ****                     #if ((UART_TEST_TXBUFFERSIZE > UART_TEST_MAX_BYTE_VALUE) && (CY_PSOC3))
1125:.\Generated_Source\PSoC5/UART_TEST.c ****                         /* Enable interrupt to continue transmission */
1126:.\Generated_Source\PSoC5/UART_TEST.c ****                         CyIntEnable(UART_TEST_TX_VECT_NUM);
1127:.\Generated_Source\PSoC5/UART_TEST.c ****                     #endif /* End TXBUFFERSIZE > 255 */
1128:.\Generated_Source\PSoC5/UART_TEST.c ****                 }while( (loc_txBufferWrite < loc_txBufferRead) ? (loc_txBufferWrite == (loc_txBuffe
 567              		.loc 1 1128 0
 568 0022 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 569 0024 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 570 0026 9A42     		cmp	r2, r3
 571 0028 09D2     		bcs	.L20
 572              		.loc 1 1128 0 is_stmt 0 discriminator 1
 573 002a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 574 002c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 575 002e 03F1FF33 		add	r3, r3, #-1
 576 0032 9A42     		cmp	r2, r3
 577 0034 14BF     		ite	ne
 578 0036 0023     		movne	r3, #0
 579 0038 0123     		moveq	r3, #1
 580 003a DBB2     		uxtb	r3, r3
 581 003c 07E0     		b	.L21
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 31


 582              	.L20:
1129:.\Generated_Source\PSoC5/UART_TEST.c ****                                         ((loc_txBufferWrite - loc_txBufferRead) ==
 583              		.loc 1 1129 0 is_stmt 1 discriminator 2
 584 003e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 585 0040 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 586 0042 D31A     		subs	r3, r2, r3
1128:.\Generated_Source\PSoC5/UART_TEST.c ****                 }while( (loc_txBufferWrite < loc_txBufferRead) ? (loc_txBufferWrite == (loc_txBuffe
 587              		.loc 1 1128 0 discriminator 2
 588 0044 1F2B     		cmp	r3, #31
 589 0046 14BF     		ite	ne
 590 0048 0023     		movne	r3, #0
 591 004a 0123     		moveq	r3, #1
 592 004c DBB2     		uxtb	r3, r3
 593              	.L21:
1130:.\Generated_Source\PSoC5/UART_TEST.c ****                                         (uint8)(UART_TEST_TXBUFFERSIZE - 1u)) );
 594              		.loc 1 1130 0
 595 004e 002B     		cmp	r3, #0
 596 0050 DBD1     		bne	.L22
1131:.\Generated_Source\PSoC5/UART_TEST.c **** 
1132:.\Generated_Source\PSoC5/UART_TEST.c ****                 if( (loc_txBufferRead == loc_txBufferWrite) &&
 597              		.loc 1 1132 0
 598 0052 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 599 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 600 0056 9A42     		cmp	r2, r3
 601 0058 10D1     		bne	.L23
1133:.\Generated_Source\PSoC5/UART_TEST.c ****                     ((UART_TEST_TXSTATUS_REG & UART_TEST_TX_STS_FIFO_FULL) == 0u) )
 602              		.loc 1 1133 0 discriminator 1
 603 005a 46F26343 		movw	r3, #25699
 604 005e C4F20003 		movt	r3, 16384
 605 0062 1B78     		ldrb	r3, [r3, #0]
 606 0064 DBB2     		uxtb	r3, r3
 607 0066 03F00403 		and	r3, r3, #4
1132:.\Generated_Source\PSoC5/UART_TEST.c ****                 if( (loc_txBufferRead == loc_txBufferWrite) &&
 608              		.loc 1 1132 0 discriminator 1
 609 006a 002B     		cmp	r3, #0
 610 006c 06D1     		bne	.L23
1134:.\Generated_Source\PSoC5/UART_TEST.c ****                 {
1135:.\Generated_Source\PSoC5/UART_TEST.c ****                     /* Add directly to the FIFO. */
1136:.\Generated_Source\PSoC5/UART_TEST.c ****                     UART_TEST_TXDATA_REG = txDataByte;
 611              		.loc 1 1136 0
 612 006e 46F24443 		movw	r3, #25668
 613 0072 C4F20003 		movt	r3, 16384
 614 0076 FA79     		ldrb	r2, [r7, #7]
 615 0078 1A70     		strb	r2, [r3, #0]
 616 007a 16E0     		b	.L19
 617              	.L23:
1137:.\Generated_Source\PSoC5/UART_TEST.c ****                 }
1138:.\Generated_Source\PSoC5/UART_TEST.c ****                 else
1139:.\Generated_Source\PSoC5/UART_TEST.c ****                 {
1140:.\Generated_Source\PSoC5/UART_TEST.c ****                     if(loc_txBufferWrite >= UART_TEST_TXBUFFERSIZE)
 618              		.loc 1 1140 0
 619 007c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 620 007e 1F2B     		cmp	r3, #31
 621 0080 02D9     		bls	.L25
1141:.\Generated_Source\PSoC5/UART_TEST.c ****                     {
1142:.\Generated_Source\PSoC5/UART_TEST.c ****                         loc_txBufferWrite = 0u;
 622              		.loc 1 1142 0
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 32


 623 0082 4FF00003 		mov	r3, #0
 624 0086 FB73     		strb	r3, [r7, #15]
 625              	.L25:
1143:.\Generated_Source\PSoC5/UART_TEST.c ****                     }
1144:.\Generated_Source\PSoC5/UART_TEST.c ****                     /* Add to the software buffer. */
1145:.\Generated_Source\PSoC5/UART_TEST.c ****                     UART_TEST_txBuffer[loc_txBufferWrite] = txDataByte;
 626              		.loc 1 1145 0
 627 0088 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 628 008a 40F20003 		movw	r3, #:lower16:UART_TEST_txBuffer
 629 008e C0F20003 		movt	r3, #:upper16:UART_TEST_txBuffer
 630 0092 F979     		ldrb	r1, [r7, #7]
 631 0094 9954     		strb	r1, [r3, r2]
1146:.\Generated_Source\PSoC5/UART_TEST.c ****                     loc_txBufferWrite++;
 632              		.loc 1 1146 0
 633 0096 FB7B     		ldrb	r3, [r7, #15]
 634 0098 03F10103 		add	r3, r3, #1
 635 009c FB73     		strb	r3, [r7, #15]
1147:.\Generated_Source\PSoC5/UART_TEST.c **** 
1148:.\Generated_Source\PSoC5/UART_TEST.c ****                     /* Finally, update the real output pointer */
1149:.\Generated_Source\PSoC5/UART_TEST.c ****                     #if ((UART_TEST_TXBUFFERSIZE > UART_TEST_MAX_BYTE_VALUE) && (CY_PSOC3))
1150:.\Generated_Source\PSoC5/UART_TEST.c ****                         CyIntDisable(UART_TEST_TX_VECT_NUM);
1151:.\Generated_Source\PSoC5/UART_TEST.c ****                     #endif /* End TXBUFFERSIZE > 255 */
1152:.\Generated_Source\PSoC5/UART_TEST.c ****                     UART_TEST_txBufferWrite = loc_txBufferWrite;
 636              		.loc 1 1152 0
 637 009e 40F20003 		movw	r3, #:lower16:UART_TEST_txBufferWrite
 638 00a2 C0F20003 		movt	r3, #:upper16:UART_TEST_txBufferWrite
 639 00a6 FA7B     		ldrb	r2, [r7, #15]
 640 00a8 1A70     		strb	r2, [r3, #0]
 641              	.L19:
1153:.\Generated_Source\PSoC5/UART_TEST.c ****                     #if ((UART_TEST_TXBUFFERSIZE > UART_TEST_MAX_BYTE_VALUE) && (CY_PSOC3))
1154:.\Generated_Source\PSoC5/UART_TEST.c ****                         CyIntEnable(UART_TEST_TX_VECT_NUM);
1155:.\Generated_Source\PSoC5/UART_TEST.c ****                     #endif /* End TXBUFFERSIZE > 255 */
1156:.\Generated_Source\PSoC5/UART_TEST.c ****                 }
1157:.\Generated_Source\PSoC5/UART_TEST.c **** 
1158:.\Generated_Source\PSoC5/UART_TEST.c ****             #else /* UART_TEST_TXBUFFERSIZE > UART_TEST_FIFO_LENGTH */
1159:.\Generated_Source\PSoC5/UART_TEST.c **** 
1160:.\Generated_Source\PSoC5/UART_TEST.c ****                 while((UART_TEST_TXSTATUS_REG & UART_TEST_TX_STS_FIFO_FULL) != 0u)
1161:.\Generated_Source\PSoC5/UART_TEST.c ****                 {
1162:.\Generated_Source\PSoC5/UART_TEST.c ****                     ; /* Wait for room in the FIFO. */
1163:.\Generated_Source\PSoC5/UART_TEST.c ****                 }
1164:.\Generated_Source\PSoC5/UART_TEST.c **** 
1165:.\Generated_Source\PSoC5/UART_TEST.c ****                 /* Add directly to the FIFO. */
1166:.\Generated_Source\PSoC5/UART_TEST.c ****                 UART_TEST_TXDATA_REG = txDataByte;
1167:.\Generated_Source\PSoC5/UART_TEST.c **** 
1168:.\Generated_Source\PSoC5/UART_TEST.c ****             #endif /* End UART_TEST_TXBUFFERSIZE > UART_TEST_FIFO_LENGTH */
1169:.\Generated_Source\PSoC5/UART_TEST.c ****     }
 642              		.loc 1 1169 0
 643 00aa 07F11407 		add	r7, r7, #20
 644 00ae BD46     		mov	sp, r7
 645 00b0 80BC     		pop	{r7}
 646 00b2 7047     		bx	lr
 647              		.cfi_endproc
 648              	.LFE11:
 649              		.size	UART_TEST_PutChar, .-UART_TEST_PutChar
 650              		.section	.text.UART_TEST_PutString,"ax",%progbits
 651              		.align	2
 652              		.global	UART_TEST_PutString
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 33


 653              		.thumb
 654              		.thumb_func
 655              		.type	UART_TEST_PutString, %function
 656              	UART_TEST_PutString:
 657              	.LFB12:
1170:.\Generated_Source\PSoC5/UART_TEST.c **** 
1171:.\Generated_Source\PSoC5/UART_TEST.c **** 
1172:.\Generated_Source\PSoC5/UART_TEST.c ****     /*******************************************************************************
1173:.\Generated_Source\PSoC5/UART_TEST.c ****     * Function Name: UART_TEST_PutString
1174:.\Generated_Source\PSoC5/UART_TEST.c ****     ********************************************************************************
1175:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1176:.\Generated_Source\PSoC5/UART_TEST.c ****     * Summary:
1177:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Write a Sequence of bytes on the Transmit line. Data comes from RAM or ROM.
1178:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1179:.\Generated_Source\PSoC5/UART_TEST.c ****     * Parameters:
1180:.\Generated_Source\PSoC5/UART_TEST.c ****     *  string: char pointer to character string of Data to Send.
1181:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1182:.\Generated_Source\PSoC5/UART_TEST.c ****     * Return:
1183:.\Generated_Source\PSoC5/UART_TEST.c ****     *  None.
1184:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1185:.\Generated_Source\PSoC5/UART_TEST.c ****     * Global Variables:
1186:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST_initVar - checked to identify that the component has been
1187:.\Generated_Source\PSoC5/UART_TEST.c ****     *     initialized.
1188:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1189:.\Generated_Source\PSoC5/UART_TEST.c ****     * Reentrant:
1190:.\Generated_Source\PSoC5/UART_TEST.c ****     *  No.
1191:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1192:.\Generated_Source\PSoC5/UART_TEST.c ****     * Theory:
1193:.\Generated_Source\PSoC5/UART_TEST.c ****     *  This function will block if there is not enough memory to place the whole
1194:.\Generated_Source\PSoC5/UART_TEST.c ****     *  string, it will block until the entire string has been written to the
1195:.\Generated_Source\PSoC5/UART_TEST.c ****     *  transmit buffer.
1196:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1197:.\Generated_Source\PSoC5/UART_TEST.c ****     *******************************************************************************/
1198:.\Generated_Source\PSoC5/UART_TEST.c ****     void UART_TEST_PutString(const char8 string[]) 
1199:.\Generated_Source\PSoC5/UART_TEST.c ****     {
 658              		.loc 1 1199 0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 16
 661              		@ frame_needed = 1, uses_anonymous_args = 0
 662 0000 80B5     		push	{r7, lr}
 663              	.LCFI30:
 664              		.cfi_def_cfa_offset 8
 665              		.cfi_offset 7, -8
 666              		.cfi_offset 14, -4
 667 0002 84B0     		sub	sp, sp, #16
 668              	.LCFI31:
 669              		.cfi_def_cfa_offset 24
 670 0004 00AF     		add	r7, sp, #0
 671              	.LCFI32:
 672              		.cfi_def_cfa_register 7
 673 0006 7860     		str	r0, [r7, #4]
1200:.\Generated_Source\PSoC5/UART_TEST.c ****         uint16 buf_index = 0u;
 674              		.loc 1 1200 0
 675 0008 4FF00003 		mov	r3, #0
 676 000c FB81     		strh	r3, [r7, #14]	@ movhi
1201:.\Generated_Source\PSoC5/UART_TEST.c ****         /* If not Initialized then skip this function*/
1202:.\Generated_Source\PSoC5/UART_TEST.c ****         if(UART_TEST_initVar != 0u)
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 34


 677              		.loc 1 1202 0
 678 000e 40F20003 		movw	r3, #:lower16:UART_TEST_initVar
 679 0012 C0F20003 		movt	r3, #:upper16:UART_TEST_initVar
 680 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 681 0018 002B     		cmp	r3, #0
 682 001a 11D0     		beq	.L26
1203:.\Generated_Source\PSoC5/UART_TEST.c ****         {
1204:.\Generated_Source\PSoC5/UART_TEST.c ****             /* This is a blocking function, it will not exit until all data is sent*/
1205:.\Generated_Source\PSoC5/UART_TEST.c ****             while(string[buf_index] != (char8)0)
 683              		.loc 1 1205 0
 684 001c 0AE0     		b	.L28
 685              	.L29:
1206:.\Generated_Source\PSoC5/UART_TEST.c ****             {
1207:.\Generated_Source\PSoC5/UART_TEST.c ****                 UART_TEST_PutChar((uint8)string[buf_index]);
 686              		.loc 1 1207 0
 687 001e FB89     		ldrh	r3, [r7, #14]
 688 0020 7A68     		ldr	r2, [r7, #4]
 689 0022 D318     		adds	r3, r2, r3
 690 0024 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 691 0026 1846     		mov	r0, r3
 692 0028 FFF7FEFF 		bl	UART_TEST_PutChar
1208:.\Generated_Source\PSoC5/UART_TEST.c ****                 buf_index++;
 693              		.loc 1 1208 0
 694 002c FB89     		ldrh	r3, [r7, #14]	@ movhi
 695 002e 03F10103 		add	r3, r3, #1
 696 0032 FB81     		strh	r3, [r7, #14]	@ movhi
 697              	.L28:
1205:.\Generated_Source\PSoC5/UART_TEST.c ****             while(string[buf_index] != (char8)0)
 698              		.loc 1 1205 0 discriminator 1
 699 0034 FB89     		ldrh	r3, [r7, #14]
 700 0036 7A68     		ldr	r2, [r7, #4]
 701 0038 D318     		adds	r3, r2, r3
 702 003a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 703 003c 002B     		cmp	r3, #0
 704 003e EED1     		bne	.L29
 705              	.L26:
1209:.\Generated_Source\PSoC5/UART_TEST.c ****             }
1210:.\Generated_Source\PSoC5/UART_TEST.c ****         }
1211:.\Generated_Source\PSoC5/UART_TEST.c ****     }
 706              		.loc 1 1211 0
 707 0040 07F11007 		add	r7, r7, #16
 708 0044 BD46     		mov	sp, r7
 709 0046 80BD     		pop	{r7, pc}
 710              		.cfi_endproc
 711              	.LFE12:
 712              		.size	UART_TEST_PutString, .-UART_TEST_PutString
 713              		.section	.text.UART_TEST_PutArray,"ax",%progbits
 714              		.align	2
 715              		.global	UART_TEST_PutArray
 716              		.thumb
 717              		.thumb_func
 718              		.type	UART_TEST_PutArray, %function
 719              	UART_TEST_PutArray:
 720              	.LFB13:
1212:.\Generated_Source\PSoC5/UART_TEST.c **** 
1213:.\Generated_Source\PSoC5/UART_TEST.c **** 
1214:.\Generated_Source\PSoC5/UART_TEST.c ****     /*******************************************************************************
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 35


1215:.\Generated_Source\PSoC5/UART_TEST.c ****     * Function Name: UART_TEST_PutArray
1216:.\Generated_Source\PSoC5/UART_TEST.c ****     ********************************************************************************
1217:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1218:.\Generated_Source\PSoC5/UART_TEST.c ****     * Summary:
1219:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Write a Sequence of bytes on the Transmit line. Data comes from RAM or ROM.
1220:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1221:.\Generated_Source\PSoC5/UART_TEST.c ****     * Parameters:
1222:.\Generated_Source\PSoC5/UART_TEST.c ****     *  string: Address of the memory array residing in RAM or ROM.
1223:.\Generated_Source\PSoC5/UART_TEST.c ****     *  byteCount: Number of Bytes to be transmitted.
1224:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1225:.\Generated_Source\PSoC5/UART_TEST.c ****     * Return:
1226:.\Generated_Source\PSoC5/UART_TEST.c ****     *  None.
1227:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1228:.\Generated_Source\PSoC5/UART_TEST.c ****     * Global Variables:
1229:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST_initVar - checked to identify that the component has been
1230:.\Generated_Source\PSoC5/UART_TEST.c ****     *     initialized.
1231:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1232:.\Generated_Source\PSoC5/UART_TEST.c ****     * Reentrant:
1233:.\Generated_Source\PSoC5/UART_TEST.c ****     *  No.
1234:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1235:.\Generated_Source\PSoC5/UART_TEST.c ****     *******************************************************************************/
1236:.\Generated_Source\PSoC5/UART_TEST.c ****     void UART_TEST_PutArray(const uint8 string[], uint8 byteCount)
1237:.\Generated_Source\PSoC5/UART_TEST.c ****                                                                     
1238:.\Generated_Source\PSoC5/UART_TEST.c ****     {
 721              		.loc 1 1238 0
 722              		.cfi_startproc
 723              		@ args = 0, pretend = 0, frame = 16
 724              		@ frame_needed = 1, uses_anonymous_args = 0
 725 0000 80B5     		push	{r7, lr}
 726              	.LCFI33:
 727              		.cfi_def_cfa_offset 8
 728              		.cfi_offset 7, -8
 729              		.cfi_offset 14, -4
 730 0002 84B0     		sub	sp, sp, #16
 731              	.LCFI34:
 732              		.cfi_def_cfa_offset 24
 733 0004 00AF     		add	r7, sp, #0
 734              	.LCFI35:
 735              		.cfi_def_cfa_register 7
 736 0006 7860     		str	r0, [r7, #4]
 737 0008 0B46     		mov	r3, r1
 738 000a FB70     		strb	r3, [r7, #3]
1239:.\Generated_Source\PSoC5/UART_TEST.c ****         uint8 buf_index = 0u;
 739              		.loc 1 1239 0
 740 000c 4FF00003 		mov	r3, #0
 741 0010 FB73     		strb	r3, [r7, #15]
1240:.\Generated_Source\PSoC5/UART_TEST.c ****         /* If not Initialized then skip this function*/
1241:.\Generated_Source\PSoC5/UART_TEST.c ****         if(UART_TEST_initVar != 0u)
 742              		.loc 1 1241 0
 743 0012 40F20003 		movw	r3, #:lower16:UART_TEST_initVar
 744 0016 C0F20003 		movt	r3, #:upper16:UART_TEST_initVar
 745 001a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 746 001c 002B     		cmp	r3, #0
 747 001e 0ED0     		beq	.L30
 748              	.L32:
1242:.\Generated_Source\PSoC5/UART_TEST.c ****         {
1243:.\Generated_Source\PSoC5/UART_TEST.c ****             do
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 36


1244:.\Generated_Source\PSoC5/UART_TEST.c ****             {
1245:.\Generated_Source\PSoC5/UART_TEST.c ****                 UART_TEST_PutChar(string[buf_index]);
 749              		.loc 1 1245 0 discriminator 1
 750 0020 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 751 0022 7A68     		ldr	r2, [r7, #4]
 752 0024 D318     		adds	r3, r2, r3
 753 0026 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 754 0028 1846     		mov	r0, r3
 755 002a FFF7FEFF 		bl	UART_TEST_PutChar
1246:.\Generated_Source\PSoC5/UART_TEST.c ****                 buf_index++;
 756              		.loc 1 1246 0 discriminator 1
 757 002e FB7B     		ldrb	r3, [r7, #15]
 758 0030 03F10103 		add	r3, r3, #1
 759 0034 FB73     		strb	r3, [r7, #15]
1247:.\Generated_Source\PSoC5/UART_TEST.c ****             }while(buf_index < byteCount);
 760              		.loc 1 1247 0 discriminator 1
 761 0036 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 762 0038 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 763 003a 9A42     		cmp	r2, r3
 764 003c F0D3     		bcc	.L32
 765              	.L30:
1248:.\Generated_Source\PSoC5/UART_TEST.c ****         }
1249:.\Generated_Source\PSoC5/UART_TEST.c ****     }
 766              		.loc 1 1249 0
 767 003e 07F11007 		add	r7, r7, #16
 768 0042 BD46     		mov	sp, r7
 769 0044 80BD     		pop	{r7, pc}
 770              		.cfi_endproc
 771              	.LFE13:
 772              		.size	UART_TEST_PutArray, .-UART_TEST_PutArray
 773 0046 00BF     		.section	.text.UART_TEST_PutCRLF,"ax",%progbits
 774              		.align	2
 775              		.global	UART_TEST_PutCRLF
 776              		.thumb
 777              		.thumb_func
 778              		.type	UART_TEST_PutCRLF, %function
 779              	UART_TEST_PutCRLF:
 780              	.LFB14:
1250:.\Generated_Source\PSoC5/UART_TEST.c **** 
1251:.\Generated_Source\PSoC5/UART_TEST.c **** 
1252:.\Generated_Source\PSoC5/UART_TEST.c ****     /*******************************************************************************
1253:.\Generated_Source\PSoC5/UART_TEST.c ****     * Function Name: UART_TEST_PutCRLF
1254:.\Generated_Source\PSoC5/UART_TEST.c ****     ********************************************************************************
1255:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1256:.\Generated_Source\PSoC5/UART_TEST.c ****     * Summary:
1257:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Write a character and then carriage return and line feed.
1258:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1259:.\Generated_Source\PSoC5/UART_TEST.c ****     * Parameters:
1260:.\Generated_Source\PSoC5/UART_TEST.c ****     *  txDataByte: uint8 Character to send.
1261:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1262:.\Generated_Source\PSoC5/UART_TEST.c ****     * Return:
1263:.\Generated_Source\PSoC5/UART_TEST.c ****     *  None.
1264:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1265:.\Generated_Source\PSoC5/UART_TEST.c ****     * Global Variables:
1266:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST_initVar - checked to identify that the component has been
1267:.\Generated_Source\PSoC5/UART_TEST.c ****     *     initialized.
1268:.\Generated_Source\PSoC5/UART_TEST.c ****     *
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 37


1269:.\Generated_Source\PSoC5/UART_TEST.c ****     * Reentrant:
1270:.\Generated_Source\PSoC5/UART_TEST.c ****     *  No.
1271:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1272:.\Generated_Source\PSoC5/UART_TEST.c ****     *******************************************************************************/
1273:.\Generated_Source\PSoC5/UART_TEST.c ****     void UART_TEST_PutCRLF(uint8 txDataByte) 
1274:.\Generated_Source\PSoC5/UART_TEST.c ****     {
 781              		.loc 1 1274 0
 782              		.cfi_startproc
 783              		@ args = 0, pretend = 0, frame = 8
 784              		@ frame_needed = 1, uses_anonymous_args = 0
 785 0000 80B5     		push	{r7, lr}
 786              	.LCFI36:
 787              		.cfi_def_cfa_offset 8
 788              		.cfi_offset 7, -8
 789              		.cfi_offset 14, -4
 790 0002 82B0     		sub	sp, sp, #8
 791              	.LCFI37:
 792              		.cfi_def_cfa_offset 16
 793 0004 00AF     		add	r7, sp, #0
 794              	.LCFI38:
 795              		.cfi_def_cfa_register 7
 796 0006 0346     		mov	r3, r0
 797 0008 FB71     		strb	r3, [r7, #7]
1275:.\Generated_Source\PSoC5/UART_TEST.c ****         /* If not Initialized then skip this function*/
1276:.\Generated_Source\PSoC5/UART_TEST.c ****         if(UART_TEST_initVar != 0u)
 798              		.loc 1 1276 0
 799 000a 40F20003 		movw	r3, #:lower16:UART_TEST_initVar
 800 000e C0F20003 		movt	r3, #:upper16:UART_TEST_initVar
 801 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 802 0014 002B     		cmp	r3, #0
 803 0016 0BD0     		beq	.L33
1277:.\Generated_Source\PSoC5/UART_TEST.c ****         {
1278:.\Generated_Source\PSoC5/UART_TEST.c ****             UART_TEST_PutChar(txDataByte);
 804              		.loc 1 1278 0
 805 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 806 001a 1846     		mov	r0, r3
 807 001c FFF7FEFF 		bl	UART_TEST_PutChar
1279:.\Generated_Source\PSoC5/UART_TEST.c ****             UART_TEST_PutChar(0x0Du);
 808              		.loc 1 1279 0
 809 0020 4FF00D00 		mov	r0, #13
 810 0024 FFF7FEFF 		bl	UART_TEST_PutChar
1280:.\Generated_Source\PSoC5/UART_TEST.c ****             UART_TEST_PutChar(0x0Au);
 811              		.loc 1 1280 0
 812 0028 4FF00A00 		mov	r0, #10
 813 002c FFF7FEFF 		bl	UART_TEST_PutChar
 814              	.L33:
1281:.\Generated_Source\PSoC5/UART_TEST.c ****         }
1282:.\Generated_Source\PSoC5/UART_TEST.c ****     }
 815              		.loc 1 1282 0
 816 0030 07F10807 		add	r7, r7, #8
 817 0034 BD46     		mov	sp, r7
 818 0036 80BD     		pop	{r7, pc}
 819              		.cfi_endproc
 820              	.LFE14:
 821              		.size	UART_TEST_PutCRLF, .-UART_TEST_PutCRLF
 822              		.section	.text.UART_TEST_GetTxBufferSize,"ax",%progbits
 823              		.align	2
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 38


 824              		.global	UART_TEST_GetTxBufferSize
 825              		.thumb
 826              		.thumb_func
 827              		.type	UART_TEST_GetTxBufferSize, %function
 828              	UART_TEST_GetTxBufferSize:
 829              	.LFB15:
1283:.\Generated_Source\PSoC5/UART_TEST.c **** 
1284:.\Generated_Source\PSoC5/UART_TEST.c **** 
1285:.\Generated_Source\PSoC5/UART_TEST.c ****     /*******************************************************************************
1286:.\Generated_Source\PSoC5/UART_TEST.c ****     * Function Name: UART_TEST_GetTxBufferSize
1287:.\Generated_Source\PSoC5/UART_TEST.c ****     ********************************************************************************
1288:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1289:.\Generated_Source\PSoC5/UART_TEST.c ****     * Summary:
1290:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Determine the amount of space left in the TX buffer and return the count in
1291:.\Generated_Source\PSoC5/UART_TEST.c ****     *  bytes
1292:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1293:.\Generated_Source\PSoC5/UART_TEST.c ****     * Parameters:
1294:.\Generated_Source\PSoC5/UART_TEST.c ****     *  None.
1295:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1296:.\Generated_Source\PSoC5/UART_TEST.c ****     * Return:
1297:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Integer count of the number of bytes left in the TX buffer
1298:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1299:.\Generated_Source\PSoC5/UART_TEST.c ****     * Global Variables:
1300:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST_txBufferWrite - used to calculate left space.
1301:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST_txBufferRead - used to calculate left space.
1302:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1303:.\Generated_Source\PSoC5/UART_TEST.c ****     * Reentrant:
1304:.\Generated_Source\PSoC5/UART_TEST.c ****     *  No.
1305:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1306:.\Generated_Source\PSoC5/UART_TEST.c ****     * Theory:
1307:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Allows the user to find out how full the TX Buffer is.
1308:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1309:.\Generated_Source\PSoC5/UART_TEST.c ****     *******************************************************************************/
1310:.\Generated_Source\PSoC5/UART_TEST.c ****     uint8 UART_TEST_GetTxBufferSize(void)
1311:.\Generated_Source\PSoC5/UART_TEST.c ****                                                             
1312:.\Generated_Source\PSoC5/UART_TEST.c ****     {
 830              		.loc 1 1312 0
 831              		.cfi_startproc
 832              		@ args = 0, pretend = 0, frame = 8
 833              		@ frame_needed = 1, uses_anonymous_args = 0
 834 0000 80B5     		push	{r7, lr}
 835              	.LCFI39:
 836              		.cfi_def_cfa_offset 8
 837              		.cfi_offset 7, -8
 838              		.cfi_offset 14, -4
 839 0002 82B0     		sub	sp, sp, #8
 840              	.LCFI40:
 841              		.cfi_def_cfa_offset 16
 842 0004 00AF     		add	r7, sp, #0
 843              	.LCFI41:
 844              		.cfi_def_cfa_register 7
1313:.\Generated_Source\PSoC5/UART_TEST.c ****         uint8 size;
1314:.\Generated_Source\PSoC5/UART_TEST.c **** 
1315:.\Generated_Source\PSoC5/UART_TEST.c ****         #if(UART_TEST_TXBUFFERSIZE > UART_TEST_FIFO_LENGTH)
1316:.\Generated_Source\PSoC5/UART_TEST.c **** 
1317:.\Generated_Source\PSoC5/UART_TEST.c ****             /* Disable Tx interrupt. */
1318:.\Generated_Source\PSoC5/UART_TEST.c ****             /* Protect variables that could change on interrupt. */
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 39


1319:.\Generated_Source\PSoC5/UART_TEST.c ****             #if(UART_TEST_TX_INTERRUPT_ENABLED)
1320:.\Generated_Source\PSoC5/UART_TEST.c ****                 UART_TEST_DisableTxInt();
 845              		.loc 1 1320 0
 846 0006 FFF7FEFF 		bl	UART_TEST_DisableTxInt
1321:.\Generated_Source\PSoC5/UART_TEST.c ****             #endif /* End UART_TEST_TX_INTERRUPT_ENABLED */
1322:.\Generated_Source\PSoC5/UART_TEST.c **** 
1323:.\Generated_Source\PSoC5/UART_TEST.c ****             if(UART_TEST_txBufferRead == UART_TEST_txBufferWrite)
 847              		.loc 1 1323 0
 848 000a 40F20003 		movw	r3, #:lower16:UART_TEST_txBufferRead
 849 000e C0F20003 		movt	r3, #:upper16:UART_TEST_txBufferRead
 850 0012 1B78     		ldrb	r3, [r3, #0]
 851 0014 DAB2     		uxtb	r2, r3
 852 0016 40F20003 		movw	r3, #:lower16:UART_TEST_txBufferWrite
 853 001a C0F20003 		movt	r3, #:upper16:UART_TEST_txBufferWrite
 854 001e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 855 0020 9A42     		cmp	r2, r3
 856 0022 03D1     		bne	.L36
1324:.\Generated_Source\PSoC5/UART_TEST.c ****             {
1325:.\Generated_Source\PSoC5/UART_TEST.c ****                 size = 0u;
 857              		.loc 1 1325 0
 858 0024 4FF00003 		mov	r3, #0
 859 0028 FB71     		strb	r3, [r7, #7]
 860 002a 2AE0     		b	.L37
 861              	.L36:
1326:.\Generated_Source\PSoC5/UART_TEST.c ****             }
1327:.\Generated_Source\PSoC5/UART_TEST.c ****             else if(UART_TEST_txBufferRead < UART_TEST_txBufferWrite)
 862              		.loc 1 1327 0
 863 002c 40F20003 		movw	r3, #:lower16:UART_TEST_txBufferRead
 864 0030 C0F20003 		movt	r3, #:upper16:UART_TEST_txBufferRead
 865 0034 1B78     		ldrb	r3, [r3, #0]
 866 0036 DAB2     		uxtb	r2, r3
 867 0038 40F20003 		movw	r3, #:lower16:UART_TEST_txBufferWrite
 868 003c C0F20003 		movt	r3, #:upper16:UART_TEST_txBufferWrite
 869 0040 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 870 0042 9A42     		cmp	r2, r3
 871 0044 0DD2     		bcs	.L38
1328:.\Generated_Source\PSoC5/UART_TEST.c ****             {
1329:.\Generated_Source\PSoC5/UART_TEST.c ****                 size = (UART_TEST_txBufferWrite - UART_TEST_txBufferRead);
 872              		.loc 1 1329 0
 873 0046 40F20003 		movw	r3, #:lower16:UART_TEST_txBufferWrite
 874 004a C0F20003 		movt	r3, #:upper16:UART_TEST_txBufferWrite
 875 004e 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 876 0050 40F20003 		movw	r3, #:lower16:UART_TEST_txBufferRead
 877 0054 C0F20003 		movt	r3, #:upper16:UART_TEST_txBufferRead
 878 0058 1B78     		ldrb	r3, [r3, #0]
 879 005a DBB2     		uxtb	r3, r3
 880 005c D31A     		subs	r3, r2, r3
 881 005e FB71     		strb	r3, [r7, #7]
 882 0060 0FE0     		b	.L37
 883              	.L38:
1330:.\Generated_Source\PSoC5/UART_TEST.c ****             }
1331:.\Generated_Source\PSoC5/UART_TEST.c ****             else
1332:.\Generated_Source\PSoC5/UART_TEST.c ****             {
1333:.\Generated_Source\PSoC5/UART_TEST.c ****                 size = (UART_TEST_TXBUFFERSIZE - UART_TEST_txBufferRead) + UART_TEST_txBufferWrite;
 884              		.loc 1 1333 0
 885 0062 40F20003 		movw	r3, #:lower16:UART_TEST_txBufferWrite
 886 0066 C0F20003 		movt	r3, #:upper16:UART_TEST_txBufferWrite
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 40


 887 006a 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 888 006c 40F20003 		movw	r3, #:lower16:UART_TEST_txBufferRead
 889 0070 C0F20003 		movt	r3, #:upper16:UART_TEST_txBufferRead
 890 0074 1B78     		ldrb	r3, [r3, #0]
 891 0076 DBB2     		uxtb	r3, r3
 892 0078 D31A     		subs	r3, r2, r3
 893 007a DBB2     		uxtb	r3, r3
 894 007c 03F12003 		add	r3, r3, #32
 895 0080 FB71     		strb	r3, [r7, #7]
 896              	.L37:
1334:.\Generated_Source\PSoC5/UART_TEST.c ****             }
1335:.\Generated_Source\PSoC5/UART_TEST.c **** 
1336:.\Generated_Source\PSoC5/UART_TEST.c ****             /* Enable Tx interrupt. */
1337:.\Generated_Source\PSoC5/UART_TEST.c ****             #if(UART_TEST_TX_INTERRUPT_ENABLED)
1338:.\Generated_Source\PSoC5/UART_TEST.c ****                 UART_TEST_EnableTxInt();
 897              		.loc 1 1338 0
 898 0082 FFF7FEFF 		bl	UART_TEST_EnableTxInt
1339:.\Generated_Source\PSoC5/UART_TEST.c ****             #endif /* End UART_TEST_TX_INTERRUPT_ENABLED */
1340:.\Generated_Source\PSoC5/UART_TEST.c **** 
1341:.\Generated_Source\PSoC5/UART_TEST.c ****         #else /* UART_TEST_TXBUFFERSIZE > UART_TEST_FIFO_LENGTH */
1342:.\Generated_Source\PSoC5/UART_TEST.c **** 
1343:.\Generated_Source\PSoC5/UART_TEST.c ****             size = UART_TEST_TXSTATUS_REG;
1344:.\Generated_Source\PSoC5/UART_TEST.c **** 
1345:.\Generated_Source\PSoC5/UART_TEST.c ****             /* Is the fifo is full. */
1346:.\Generated_Source\PSoC5/UART_TEST.c ****             if((size & UART_TEST_TX_STS_FIFO_FULL) != 0u)
1347:.\Generated_Source\PSoC5/UART_TEST.c ****             {
1348:.\Generated_Source\PSoC5/UART_TEST.c ****                 size = UART_TEST_FIFO_LENGTH;
1349:.\Generated_Source\PSoC5/UART_TEST.c ****             }
1350:.\Generated_Source\PSoC5/UART_TEST.c ****             else if((size & UART_TEST_TX_STS_FIFO_EMPTY) != 0u)
1351:.\Generated_Source\PSoC5/UART_TEST.c ****             {
1352:.\Generated_Source\PSoC5/UART_TEST.c ****                 size = 0u;
1353:.\Generated_Source\PSoC5/UART_TEST.c ****             }
1354:.\Generated_Source\PSoC5/UART_TEST.c ****             else
1355:.\Generated_Source\PSoC5/UART_TEST.c ****             {
1356:.\Generated_Source\PSoC5/UART_TEST.c ****                 /* We only know there is data in the fifo. */
1357:.\Generated_Source\PSoC5/UART_TEST.c ****                 size = 1u;
1358:.\Generated_Source\PSoC5/UART_TEST.c ****             }
1359:.\Generated_Source\PSoC5/UART_TEST.c **** 
1360:.\Generated_Source\PSoC5/UART_TEST.c ****         #endif /* End UART_TEST_TXBUFFERSIZE > UART_TEST_FIFO_LENGTH */
1361:.\Generated_Source\PSoC5/UART_TEST.c **** 
1362:.\Generated_Source\PSoC5/UART_TEST.c ****         return(size);
 899              		.loc 1 1362 0
 900 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1363:.\Generated_Source\PSoC5/UART_TEST.c ****     }
 901              		.loc 1 1363 0
 902 0088 1846     		mov	r0, r3
 903 008a 07F10807 		add	r7, r7, #8
 904 008e BD46     		mov	sp, r7
 905 0090 80BD     		pop	{r7, pc}
 906              		.cfi_endproc
 907              	.LFE15:
 908              		.size	UART_TEST_GetTxBufferSize, .-UART_TEST_GetTxBufferSize
 909 0092 00BF     		.section	.text.UART_TEST_ClearTxBuffer,"ax",%progbits
 910              		.align	2
 911              		.global	UART_TEST_ClearTxBuffer
 912              		.thumb
 913              		.thumb_func
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 41


 914              		.type	UART_TEST_ClearTxBuffer, %function
 915              	UART_TEST_ClearTxBuffer:
 916              	.LFB16:
1364:.\Generated_Source\PSoC5/UART_TEST.c **** 
1365:.\Generated_Source\PSoC5/UART_TEST.c **** 
1366:.\Generated_Source\PSoC5/UART_TEST.c ****     /*******************************************************************************
1367:.\Generated_Source\PSoC5/UART_TEST.c ****     * Function Name: UART_TEST_ClearTxBuffer
1368:.\Generated_Source\PSoC5/UART_TEST.c ****     ********************************************************************************
1369:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1370:.\Generated_Source\PSoC5/UART_TEST.c ****     * Summary:
1371:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Clears the TX RAM buffer by setting the read and write pointers both to zero.
1372:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Clears the hardware TX FIFO.  Any data present in the FIFO will not be sent.
1373:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1374:.\Generated_Source\PSoC5/UART_TEST.c ****     * Parameters:
1375:.\Generated_Source\PSoC5/UART_TEST.c ****     *  None.
1376:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1377:.\Generated_Source\PSoC5/UART_TEST.c ****     * Return:
1378:.\Generated_Source\PSoC5/UART_TEST.c ****     *  None.
1379:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1380:.\Generated_Source\PSoC5/UART_TEST.c ****     * Global Variables:
1381:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST_txBufferWrite - cleared to zero.
1382:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST_txBufferRead - cleared to zero.
1383:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1384:.\Generated_Source\PSoC5/UART_TEST.c ****     * Reentrant:
1385:.\Generated_Source\PSoC5/UART_TEST.c ****     *  No.
1386:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1387:.\Generated_Source\PSoC5/UART_TEST.c ****     * Theory:
1388:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1389:.\Generated_Source\PSoC5/UART_TEST.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1390:.\Generated_Source\PSoC5/UART_TEST.c ****     *  remained in the RAM.
1391:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1392:.\Generated_Source\PSoC5/UART_TEST.c ****     * Side Effects:
1393:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Any received data not read from the RAM buffer will be lost when overwritten.
1394:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1395:.\Generated_Source\PSoC5/UART_TEST.c ****     *******************************************************************************/
1396:.\Generated_Source\PSoC5/UART_TEST.c ****     void UART_TEST_ClearTxBuffer(void) 
1397:.\Generated_Source\PSoC5/UART_TEST.c ****     {
 917              		.loc 1 1397 0
 918              		.cfi_startproc
 919              		@ args = 0, pretend = 0, frame = 8
 920              		@ frame_needed = 1, uses_anonymous_args = 0
 921 0000 80B5     		push	{r7, lr}
 922              	.LCFI42:
 923              		.cfi_def_cfa_offset 8
 924              		.cfi_offset 7, -8
 925              		.cfi_offset 14, -4
 926 0002 82B0     		sub	sp, sp, #8
 927              	.LCFI43:
 928              		.cfi_def_cfa_offset 16
 929 0004 00AF     		add	r7, sp, #0
 930              	.LCFI44:
 931              		.cfi_def_cfa_register 7
1398:.\Generated_Source\PSoC5/UART_TEST.c ****         uint8 enableInterrupts;
1399:.\Generated_Source\PSoC5/UART_TEST.c **** 
1400:.\Generated_Source\PSoC5/UART_TEST.c ****         /* Enter critical section */
1401:.\Generated_Source\PSoC5/UART_TEST.c ****         enableInterrupts = CyEnterCriticalSection();
 932              		.loc 1 1401 0
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 42


 933 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 934 000a 0346     		mov	r3, r0
 935 000c FB71     		strb	r3, [r7, #7]
1402:.\Generated_Source\PSoC5/UART_TEST.c ****         /* clear the HW FIFO */
1403:.\Generated_Source\PSoC5/UART_TEST.c ****         UART_TEST_TXDATA_AUX_CTL_REG |=  UART_TEST_TX_FIFO_CLR;
 936              		.loc 1 1403 0
 937 000e 46F29443 		movw	r3, #25748
 938 0012 C4F20003 		movt	r3, 16384
 939 0016 46F29442 		movw	r2, #25748
 940 001a C4F20002 		movt	r2, 16384
 941 001e 1278     		ldrb	r2, [r2, #0]
 942 0020 D2B2     		uxtb	r2, r2
 943 0022 42F00102 		orr	r2, r2, #1
 944 0026 D2B2     		uxtb	r2, r2
 945 0028 1A70     		strb	r2, [r3, #0]
1404:.\Generated_Source\PSoC5/UART_TEST.c ****         UART_TEST_TXDATA_AUX_CTL_REG &= (uint8)~UART_TEST_TX_FIFO_CLR;
 946              		.loc 1 1404 0
 947 002a 46F29443 		movw	r3, #25748
 948 002e C4F20003 		movt	r3, 16384
 949 0032 46F29442 		movw	r2, #25748
 950 0036 C4F20002 		movt	r2, 16384
 951 003a 1278     		ldrb	r2, [r2, #0]
 952 003c D2B2     		uxtb	r2, r2
 953 003e 22F00102 		bic	r2, r2, #1
 954 0042 D2B2     		uxtb	r2, r2
 955 0044 1A70     		strb	r2, [r3, #0]
1405:.\Generated_Source\PSoC5/UART_TEST.c ****         /* Exit critical section */
1406:.\Generated_Source\PSoC5/UART_TEST.c ****         CyExitCriticalSection(enableInterrupts);
 956              		.loc 1 1406 0
 957 0046 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 958 0048 1846     		mov	r0, r3
 959 004a FFF7FEFF 		bl	CyExitCriticalSection
1407:.\Generated_Source\PSoC5/UART_TEST.c **** 
1408:.\Generated_Source\PSoC5/UART_TEST.c ****         #if(UART_TEST_TXBUFFERSIZE > UART_TEST_FIFO_LENGTH)
1409:.\Generated_Source\PSoC5/UART_TEST.c **** 
1410:.\Generated_Source\PSoC5/UART_TEST.c ****             /* Disable Tx interrupt. */
1411:.\Generated_Source\PSoC5/UART_TEST.c ****             /* Protect variables that could change on interrupt. */
1412:.\Generated_Source\PSoC5/UART_TEST.c ****             #if(UART_TEST_TX_INTERRUPT_ENABLED)
1413:.\Generated_Source\PSoC5/UART_TEST.c ****                 UART_TEST_DisableTxInt();
 960              		.loc 1 1413 0
 961 004e FFF7FEFF 		bl	UART_TEST_DisableTxInt
1414:.\Generated_Source\PSoC5/UART_TEST.c ****             #endif /* End UART_TEST_TX_INTERRUPT_ENABLED */
1415:.\Generated_Source\PSoC5/UART_TEST.c **** 
1416:.\Generated_Source\PSoC5/UART_TEST.c ****             UART_TEST_txBufferRead = 0u;
 962              		.loc 1 1416 0
 963 0052 40F20003 		movw	r3, #:lower16:UART_TEST_txBufferRead
 964 0056 C0F20003 		movt	r3, #:upper16:UART_TEST_txBufferRead
 965 005a 4FF00002 		mov	r2, #0
 966 005e 1A70     		strb	r2, [r3, #0]
1417:.\Generated_Source\PSoC5/UART_TEST.c ****             UART_TEST_txBufferWrite = 0u;
 967              		.loc 1 1417 0
 968 0060 40F20003 		movw	r3, #:lower16:UART_TEST_txBufferWrite
 969 0064 C0F20003 		movt	r3, #:upper16:UART_TEST_txBufferWrite
 970 0068 4FF00002 		mov	r2, #0
 971 006c 1A70     		strb	r2, [r3, #0]
1418:.\Generated_Source\PSoC5/UART_TEST.c **** 
1419:.\Generated_Source\PSoC5/UART_TEST.c ****             /* Enable Tx interrupt. */
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 43


1420:.\Generated_Source\PSoC5/UART_TEST.c ****             #if(UART_TEST_TX_INTERRUPT_ENABLED)
1421:.\Generated_Source\PSoC5/UART_TEST.c ****                 UART_TEST_EnableTxInt();
 972              		.loc 1 1421 0
 973 006e FFF7FEFF 		bl	UART_TEST_EnableTxInt
1422:.\Generated_Source\PSoC5/UART_TEST.c ****             #endif /* End UART_TEST_TX_INTERRUPT_ENABLED */
1423:.\Generated_Source\PSoC5/UART_TEST.c **** 
1424:.\Generated_Source\PSoC5/UART_TEST.c ****         #endif /* End UART_TEST_TXBUFFERSIZE > UART_TEST_FIFO_LENGTH */
1425:.\Generated_Source\PSoC5/UART_TEST.c ****     }
 974              		.loc 1 1425 0
 975 0072 07F10807 		add	r7, r7, #8
 976 0076 BD46     		mov	sp, r7
 977 0078 80BD     		pop	{r7, pc}
 978              		.cfi_endproc
 979              	.LFE16:
 980              		.size	UART_TEST_ClearTxBuffer, .-UART_TEST_ClearTxBuffer
 981 007a 00BF     		.section	.text.UART_TEST_SendBreak,"ax",%progbits
 982              		.align	2
 983              		.global	UART_TEST_SendBreak
 984              		.thumb
 985              		.thumb_func
 986              		.type	UART_TEST_SendBreak, %function
 987              	UART_TEST_SendBreak:
 988              	.LFB17:
1426:.\Generated_Source\PSoC5/UART_TEST.c **** 
1427:.\Generated_Source\PSoC5/UART_TEST.c **** 
1428:.\Generated_Source\PSoC5/UART_TEST.c ****     /*******************************************************************************
1429:.\Generated_Source\PSoC5/UART_TEST.c ****     * Function Name: UART_TEST_SendBreak
1430:.\Generated_Source\PSoC5/UART_TEST.c ****     ********************************************************************************
1431:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1432:.\Generated_Source\PSoC5/UART_TEST.c ****     * Summary:
1433:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Write a Break command to the UART
1434:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1435:.\Generated_Source\PSoC5/UART_TEST.c ****     * Parameters:
1436:.\Generated_Source\PSoC5/UART_TEST.c ****     *  uint8 retMode:  Wait mode,
1437:.\Generated_Source\PSoC5/UART_TEST.c ****     *   0 - Initialize registers for Break, sends the Break signal and return
1438:.\Generated_Source\PSoC5/UART_TEST.c ****     *       imediately.
1439:.\Generated_Source\PSoC5/UART_TEST.c ****     *   1 - Wait until Break sending is complete, reinitialize registers to normal
1440:.\Generated_Source\PSoC5/UART_TEST.c ****     *       transmission mode then return.
1441:.\Generated_Source\PSoC5/UART_TEST.c ****     *   2 - Reinitialize registers to normal transmission mode then return.
1442:.\Generated_Source\PSoC5/UART_TEST.c ****     *   3 - both steps: 0 and 1
1443:.\Generated_Source\PSoC5/UART_TEST.c ****     *       init registers for Break, send Break signal
1444:.\Generated_Source\PSoC5/UART_TEST.c ****     *       wait until Break sending is complete, reinit registers to normal
1445:.\Generated_Source\PSoC5/UART_TEST.c ****     *       transmission mode then return.
1446:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1447:.\Generated_Source\PSoC5/UART_TEST.c ****     * Return:
1448:.\Generated_Source\PSoC5/UART_TEST.c ****     *  None.
1449:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1450:.\Generated_Source\PSoC5/UART_TEST.c ****     * Global Variables:
1451:.\Generated_Source\PSoC5/UART_TEST.c ****     *  UART_TEST_initVar - checked to identify that the component has been
1452:.\Generated_Source\PSoC5/UART_TEST.c ****     *     initialized.
1453:.\Generated_Source\PSoC5/UART_TEST.c ****     *  tx_period - static variable, used for keeping TX period configuration.
1454:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1455:.\Generated_Source\PSoC5/UART_TEST.c ****     * Reentrant:
1456:.\Generated_Source\PSoC5/UART_TEST.c ****     *  No.
1457:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1458:.\Generated_Source\PSoC5/UART_TEST.c ****     * Theory:
1459:.\Generated_Source\PSoC5/UART_TEST.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 44


1460:.\Generated_Source\PSoC5/UART_TEST.c ****     *  important to return the registers configuration to normal for continue 8-bit
1461:.\Generated_Source\PSoC5/UART_TEST.c ****     *  operation.
1462:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Trere are 3 variants for this API usage:
1463:.\Generated_Source\PSoC5/UART_TEST.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1464:.\Generated_Source\PSoC5/UART_TEST.c ****     *     configuration returning. Funcition will block CPU untill transmition
1465:.\Generated_Source\PSoC5/UART_TEST.c ****     *     complete.
1466:.\Generated_Source\PSoC5/UART_TEST.c ****     *  2) User may want to use bloking time if UART configured to the low speed
1467:.\Generated_Source\PSoC5/UART_TEST.c ****     *     operation
1468:.\Generated_Source\PSoC5/UART_TEST.c ****     *     Emample for this case:
1469:.\Generated_Source\PSoC5/UART_TEST.c ****     *     SendBreak(0);     - init Break signal transmition
1470:.\Generated_Source\PSoC5/UART_TEST.c ****     *         Add your code here to use CPU time
1471:.\Generated_Source\PSoC5/UART_TEST.c ****     *     SendBreak(1);     - complete Break operation
1472:.\Generated_Source\PSoC5/UART_TEST.c ****     *  3) Same to 2) but user may want to init and use the interrupt for complete
1473:.\Generated_Source\PSoC5/UART_TEST.c ****     *     break operation.
1474:.\Generated_Source\PSoC5/UART_TEST.c ****     *     Example for this case:
1475:.\Generated_Source\PSoC5/UART_TEST.c ****     *     Init TX interrupt whith "TX - On TX Complete" parameter
1476:.\Generated_Source\PSoC5/UART_TEST.c ****     *     SendBreak(0);     - init Break signal transmition
1477:.\Generated_Source\PSoC5/UART_TEST.c ****     *         Add your code here to use CPU time
1478:.\Generated_Source\PSoC5/UART_TEST.c ****     *     When interrupt appear with UART_TX_STS_COMPLETE status:
1479:.\Generated_Source\PSoC5/UART_TEST.c ****     *     SendBreak(2);     - complete Break operation
1480:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1481:.\Generated_Source\PSoC5/UART_TEST.c ****     * Side Effects:
1482:.\Generated_Source\PSoC5/UART_TEST.c ****     *   Uses static variable to keep registers configuration.
1483:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1484:.\Generated_Source\PSoC5/UART_TEST.c ****     *******************************************************************************/
1485:.\Generated_Source\PSoC5/UART_TEST.c ****     void UART_TEST_SendBreak(uint8 retMode) 
1486:.\Generated_Source\PSoC5/UART_TEST.c ****     {
 989              		.loc 1 1486 0
 990              		.cfi_startproc
 991              		@ args = 0, pretend = 0, frame = 16
 992              		@ frame_needed = 1, uses_anonymous_args = 0
 993              		@ link register save eliminated.
 994 0000 80B4     		push	{r7}
 995              	.LCFI45:
 996              		.cfi_def_cfa_offset 4
 997              		.cfi_offset 7, -4
 998 0002 85B0     		sub	sp, sp, #20
 999              	.LCFI46:
 1000              		.cfi_def_cfa_offset 24
 1001 0004 00AF     		add	r7, sp, #0
 1002              	.LCFI47:
 1003              		.cfi_def_cfa_register 7
 1004 0006 0346     		mov	r3, r0
 1005 0008 FB71     		strb	r3, [r7, #7]
1487:.\Generated_Source\PSoC5/UART_TEST.c **** 
1488:.\Generated_Source\PSoC5/UART_TEST.c ****         /* If not Initialized then skip this function*/
1489:.\Generated_Source\PSoC5/UART_TEST.c ****         if(UART_TEST_initVar != 0u)
 1006              		.loc 1 1489 0
 1007 000a 40F20003 		movw	r3, #:lower16:UART_TEST_initVar
 1008 000e C0F20003 		movt	r3, #:upper16:UART_TEST_initVar
 1009 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1010 0014 002B     		cmp	r3, #0
 1011 0016 50D0     		beq	.L41
 1012              	.LBB2:
1490:.\Generated_Source\PSoC5/UART_TEST.c ****         {
1491:.\Generated_Source\PSoC5/UART_TEST.c ****             /*Set the Counter to 13-bits and transmit a 00 byte*/
1492:.\Generated_Source\PSoC5/UART_TEST.c ****             /*When that is done then reset the counter value back*/
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 45


1493:.\Generated_Source\PSoC5/UART_TEST.c ****             uint8 tmpStat;
1494:.\Generated_Source\PSoC5/UART_TEST.c **** 
1495:.\Generated_Source\PSoC5/UART_TEST.c ****             #if(UART_TEST_HD_ENABLED) /* Half Duplex mode*/
1496:.\Generated_Source\PSoC5/UART_TEST.c **** 
1497:.\Generated_Source\PSoC5/UART_TEST.c ****                 if( (retMode == UART_TEST_SEND_BREAK) ||
1498:.\Generated_Source\PSoC5/UART_TEST.c ****                     (retMode == UART_TEST_SEND_WAIT_REINIT ) )
1499:.\Generated_Source\PSoC5/UART_TEST.c ****                 {
1500:.\Generated_Source\PSoC5/UART_TEST.c ****                     /* CTRL_HD_SEND_BREAK - sends break bits in HD mode*/
1501:.\Generated_Source\PSoC5/UART_TEST.c ****                     UART_TEST_WriteControlRegister(UART_TEST_ReadControlRegister() |
1502:.\Generated_Source\PSoC5/UART_TEST.c ****                                                           UART_TEST_CTRL_HD_SEND_BREAK);
1503:.\Generated_Source\PSoC5/UART_TEST.c ****                     /* Send zeros*/
1504:.\Generated_Source\PSoC5/UART_TEST.c ****                     UART_TEST_TXDATA_REG = 0u;
1505:.\Generated_Source\PSoC5/UART_TEST.c **** 
1506:.\Generated_Source\PSoC5/UART_TEST.c ****                     do /*wait until transmit starts*/
1507:.\Generated_Source\PSoC5/UART_TEST.c ****                     {
1508:.\Generated_Source\PSoC5/UART_TEST.c ****                         tmpStat = UART_TEST_TXSTATUS_REG;
1509:.\Generated_Source\PSoC5/UART_TEST.c ****                     }while((tmpStat & UART_TEST_TX_STS_FIFO_EMPTY) != 0u);
1510:.\Generated_Source\PSoC5/UART_TEST.c ****                 }
1511:.\Generated_Source\PSoC5/UART_TEST.c **** 
1512:.\Generated_Source\PSoC5/UART_TEST.c ****                 if( (retMode == UART_TEST_WAIT_FOR_COMPLETE_REINIT) ||
1513:.\Generated_Source\PSoC5/UART_TEST.c ****                     (retMode == UART_TEST_SEND_WAIT_REINIT) )
1514:.\Generated_Source\PSoC5/UART_TEST.c ****                 {
1515:.\Generated_Source\PSoC5/UART_TEST.c ****                     do /*wait until transmit complete*/
1516:.\Generated_Source\PSoC5/UART_TEST.c ****                     {
1517:.\Generated_Source\PSoC5/UART_TEST.c ****                         tmpStat = UART_TEST_TXSTATUS_REG;
1518:.\Generated_Source\PSoC5/UART_TEST.c ****                     }while(((uint8)~tmpStat & UART_TEST_TX_STS_COMPLETE) != 0u);
1519:.\Generated_Source\PSoC5/UART_TEST.c ****                 }
1520:.\Generated_Source\PSoC5/UART_TEST.c **** 
1521:.\Generated_Source\PSoC5/UART_TEST.c ****                 if( (retMode == UART_TEST_WAIT_FOR_COMPLETE_REINIT) ||
1522:.\Generated_Source\PSoC5/UART_TEST.c ****                     (retMode == UART_TEST_REINIT) ||
1523:.\Generated_Source\PSoC5/UART_TEST.c ****                     (retMode == UART_TEST_SEND_WAIT_REINIT) )
1524:.\Generated_Source\PSoC5/UART_TEST.c ****                 {
1525:.\Generated_Source\PSoC5/UART_TEST.c ****                     UART_TEST_WriteControlRegister(UART_TEST_ReadControlRegister() &
1526:.\Generated_Source\PSoC5/UART_TEST.c ****                                                   (uint8)~UART_TEST_CTRL_HD_SEND_BREAK);
1527:.\Generated_Source\PSoC5/UART_TEST.c ****                 }
1528:.\Generated_Source\PSoC5/UART_TEST.c **** 
1529:.\Generated_Source\PSoC5/UART_TEST.c ****             #else /* UART_TEST_HD_ENABLED Full Duplex mode */
1530:.\Generated_Source\PSoC5/UART_TEST.c **** 
1531:.\Generated_Source\PSoC5/UART_TEST.c ****                 static uint8 tx_period;
1532:.\Generated_Source\PSoC5/UART_TEST.c **** 
1533:.\Generated_Source\PSoC5/UART_TEST.c ****                 if( (retMode == UART_TEST_SEND_BREAK) ||
 1013              		.loc 1 1533 0
 1014 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1015 001a 002B     		cmp	r3, #0
 1016 001c 02D0     		beq	.L43
 1017              		.loc 1 1533 0 is_stmt 0 discriminator 1
 1018 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1019 0020 032B     		cmp	r3, #3
 1020 0022 23D1     		bne	.L44
 1021              	.L43:
1534:.\Generated_Source\PSoC5/UART_TEST.c ****                     (retMode == UART_TEST_SEND_WAIT_REINIT) )
1535:.\Generated_Source\PSoC5/UART_TEST.c ****                 {
1536:.\Generated_Source\PSoC5/UART_TEST.c ****                     /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex 
1537:.\Generated_Source\PSoC5/UART_TEST.c ****                     #if( (UART_TEST_PARITY_TYPE != UART_TEST__B_UART__NONE_REVB) || \
1538:.\Generated_Source\PSoC5/UART_TEST.c ****                                         (UART_TEST_PARITY_TYPE_SW != 0u) )
1539:.\Generated_Source\PSoC5/UART_TEST.c ****                         UART_TEST_WriteControlRegister(UART_TEST_ReadControlRegister() |
1540:.\Generated_Source\PSoC5/UART_TEST.c ****                                                               UART_TEST_CTRL_HD_SEND_BREAK);
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 46


1541:.\Generated_Source\PSoC5/UART_TEST.c ****                     #endif /* End UART_TEST_PARITY_TYPE != UART_TEST__B_UART__NONE_REVB  */
1542:.\Generated_Source\PSoC5/UART_TEST.c **** 
1543:.\Generated_Source\PSoC5/UART_TEST.c ****                     #if(UART_TEST_TXCLKGEN_DP)
1544:.\Generated_Source\PSoC5/UART_TEST.c ****                         tx_period = UART_TEST_TXBITCLKTX_COMPLETE_REG;
 1022              		.loc 1 1544 0 is_stmt 1
 1023 0024 46F23743 		movw	r3, #25655
 1024 0028 C4F20003 		movt	r3, 16384
 1025 002c 1B78     		ldrb	r3, [r3, #0]
 1026 002e DAB2     		uxtb	r2, r3
 1027 0030 40F20003 		movw	r3, #:lower16:tx_period.4880
 1028 0034 C0F20003 		movt	r3, #:upper16:tx_period.4880
 1029 0038 1A70     		strb	r2, [r3, #0]
1545:.\Generated_Source\PSoC5/UART_TEST.c ****                         UART_TEST_TXBITCLKTX_COMPLETE_REG = UART_TEST_TXBITCTR_BREAKBITS;
 1030              		.loc 1 1545 0
 1031 003a 46F23743 		movw	r3, #25655
 1032 003e C4F20003 		movt	r3, 16384
 1033 0042 4FF06702 		mov	r2, #103
 1034 0046 1A70     		strb	r2, [r3, #0]
1546:.\Generated_Source\PSoC5/UART_TEST.c ****                     #else
1547:.\Generated_Source\PSoC5/UART_TEST.c ****                         tx_period = UART_TEST_TXBITCTR_PERIOD_REG;
1548:.\Generated_Source\PSoC5/UART_TEST.c ****                         UART_TEST_TXBITCTR_PERIOD_REG = UART_TEST_TXBITCTR_BREAKBITS8X;
1549:.\Generated_Source\PSoC5/UART_TEST.c ****                     #endif /* End UART_TEST_TXCLKGEN_DP */
1550:.\Generated_Source\PSoC5/UART_TEST.c **** 
1551:.\Generated_Source\PSoC5/UART_TEST.c ****                     /* Send zeros*/
1552:.\Generated_Source\PSoC5/UART_TEST.c ****                     UART_TEST_TXDATA_REG = 0u;
 1035              		.loc 1 1552 0
 1036 0048 46F24443 		movw	r3, #25668
 1037 004c C4F20003 		movt	r3, 16384
 1038 0050 4FF00002 		mov	r2, #0
 1039 0054 1A70     		strb	r2, [r3, #0]
 1040              	.L45:
1553:.\Generated_Source\PSoC5/UART_TEST.c **** 
1554:.\Generated_Source\PSoC5/UART_TEST.c ****                     do /* wait until transmit starts */
1555:.\Generated_Source\PSoC5/UART_TEST.c ****                     {
1556:.\Generated_Source\PSoC5/UART_TEST.c ****                         tmpStat = UART_TEST_TXSTATUS_REG;
 1041              		.loc 1 1556 0 discriminator 1
 1042 0056 46F26343 		movw	r3, #25699
 1043 005a C4F20003 		movt	r3, 16384
 1044 005e 1B78     		ldrb	r3, [r3, #0]
 1045 0060 FB73     		strb	r3, [r7, #15]
1557:.\Generated_Source\PSoC5/UART_TEST.c ****                     }while((tmpStat & UART_TEST_TX_STS_FIFO_EMPTY) != 0u);
 1046              		.loc 1 1557 0 discriminator 1
 1047 0062 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1048 0064 03F00203 		and	r3, r3, #2
 1049 0068 002B     		cmp	r3, #0
 1050 006a F4D1     		bne	.L45
 1051              	.L44:
1558:.\Generated_Source\PSoC5/UART_TEST.c ****                 }
1559:.\Generated_Source\PSoC5/UART_TEST.c **** 
1560:.\Generated_Source\PSoC5/UART_TEST.c ****                 if( (retMode == UART_TEST_WAIT_FOR_COMPLETE_REINIT) ||
 1052              		.loc 1 1560 0
 1053 006c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1054 006e 012B     		cmp	r3, #1
 1055 0070 02D0     		beq	.L46
 1056              		.loc 1 1560 0 is_stmt 0 discriminator 1
 1057 0072 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1058 0074 032B     		cmp	r3, #3
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 47


 1059 0076 0DD1     		bne	.L47
 1060              	.L46:
1561:.\Generated_Source\PSoC5/UART_TEST.c ****                     (retMode == UART_TEST_SEND_WAIT_REINIT) )
1562:.\Generated_Source\PSoC5/UART_TEST.c ****                 {
1563:.\Generated_Source\PSoC5/UART_TEST.c ****                     do /*wait until transmit complete*/
1564:.\Generated_Source\PSoC5/UART_TEST.c ****                     {
1565:.\Generated_Source\PSoC5/UART_TEST.c ****                         tmpStat = UART_TEST_TXSTATUS_REG;
 1061              		.loc 1 1565 0 is_stmt 1 discriminator 1
 1062 0078 46F26343 		movw	r3, #25699
 1063 007c C4F20003 		movt	r3, 16384
 1064 0080 1B78     		ldrb	r3, [r3, #0]
 1065 0082 FB73     		strb	r3, [r7, #15]
1566:.\Generated_Source\PSoC5/UART_TEST.c ****                     }while(((uint8)~tmpStat & UART_TEST_TX_STS_COMPLETE) != 0u);
 1066              		.loc 1 1566 0 discriminator 1
 1067 0084 FB7B     		ldrb	r3, [r7, #15]
 1068 0086 6FEA0303 		mvn	r3, r3
 1069 008a DBB2     		uxtb	r3, r3
 1070 008c 03F00103 		and	r3, r3, #1
 1071 0090 002B     		cmp	r3, #0
 1072 0092 F1D1     		bne	.L46
 1073              	.L47:
1567:.\Generated_Source\PSoC5/UART_TEST.c ****                 }
1568:.\Generated_Source\PSoC5/UART_TEST.c **** 
1569:.\Generated_Source\PSoC5/UART_TEST.c ****                 if( (retMode == UART_TEST_WAIT_FOR_COMPLETE_REINIT) ||
 1074              		.loc 1 1569 0
 1075 0094 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1076 0096 012B     		cmp	r3, #1
 1077 0098 05D0     		beq	.L48
 1078              		.loc 1 1569 0 is_stmt 0 discriminator 1
 1079 009a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1080 009c 022B     		cmp	r3, #2
 1081 009e 02D0     		beq	.L48
1570:.\Generated_Source\PSoC5/UART_TEST.c ****                     (retMode == UART_TEST_REINIT) ||
 1082              		.loc 1 1570 0 is_stmt 1
 1083 00a0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1084 00a2 032B     		cmp	r3, #3
 1085 00a4 09D1     		bne	.L41
 1086              	.L48:
1571:.\Generated_Source\PSoC5/UART_TEST.c ****                     (retMode == UART_TEST_SEND_WAIT_REINIT) )
1572:.\Generated_Source\PSoC5/UART_TEST.c ****                 {
1573:.\Generated_Source\PSoC5/UART_TEST.c **** 
1574:.\Generated_Source\PSoC5/UART_TEST.c ****                     #if(UART_TEST_TXCLKGEN_DP)
1575:.\Generated_Source\PSoC5/UART_TEST.c ****                         UART_TEST_TXBITCLKTX_COMPLETE_REG = tx_period;
 1087              		.loc 1 1575 0
 1088 00a6 46F23743 		movw	r3, #25655
 1089 00aa C4F20003 		movt	r3, 16384
 1090 00ae 40F20002 		movw	r2, #:lower16:tx_period.4880
 1091 00b2 C0F20002 		movt	r2, #:upper16:tx_period.4880
 1092 00b6 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1093 00b8 1A70     		strb	r2, [r3, #0]
 1094              	.L41:
 1095              	.LBE2:
1576:.\Generated_Source\PSoC5/UART_TEST.c ****                     #else
1577:.\Generated_Source\PSoC5/UART_TEST.c ****                         UART_TEST_TXBITCTR_PERIOD_REG = tx_period;
1578:.\Generated_Source\PSoC5/UART_TEST.c ****                     #endif /* End UART_TEST_TXCLKGEN_DP */
1579:.\Generated_Source\PSoC5/UART_TEST.c **** 
1580:.\Generated_Source\PSoC5/UART_TEST.c ****                     #if( (UART_TEST_PARITY_TYPE != UART_TEST__B_UART__NONE_REVB) || \
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 48


1581:.\Generated_Source\PSoC5/UART_TEST.c ****                          (UART_TEST_PARITY_TYPE_SW != 0u) )
1582:.\Generated_Source\PSoC5/UART_TEST.c ****                         UART_TEST_WriteControlRegister(UART_TEST_ReadControlRegister() &
1583:.\Generated_Source\PSoC5/UART_TEST.c ****                                                       (uint8)~UART_TEST_CTRL_HD_SEND_BREAK);
1584:.\Generated_Source\PSoC5/UART_TEST.c ****                     #endif /* End UART_TEST_PARITY_TYPE != NONE */
1585:.\Generated_Source\PSoC5/UART_TEST.c ****                 }
1586:.\Generated_Source\PSoC5/UART_TEST.c ****             #endif    /* End UART_TEST_HD_ENABLED */
1587:.\Generated_Source\PSoC5/UART_TEST.c ****         }
1588:.\Generated_Source\PSoC5/UART_TEST.c ****     }
 1096              		.loc 1 1588 0
 1097 00ba 07F11407 		add	r7, r7, #20
 1098 00be BD46     		mov	sp, r7
 1099 00c0 80BC     		pop	{r7}
 1100 00c2 7047     		bx	lr
 1101              		.cfi_endproc
 1102              	.LFE17:
 1103              		.size	UART_TEST_SendBreak, .-UART_TEST_SendBreak
 1104              		.section	.text.UART_TEST_SetTxAddressMode,"ax",%progbits
 1105              		.align	2
 1106              		.global	UART_TEST_SetTxAddressMode
 1107              		.thumb
 1108              		.thumb_func
 1109              		.type	UART_TEST_SetTxAddressMode, %function
 1110              	UART_TEST_SetTxAddressMode:
 1111              	.LFB18:
1589:.\Generated_Source\PSoC5/UART_TEST.c **** 
1590:.\Generated_Source\PSoC5/UART_TEST.c **** 
1591:.\Generated_Source\PSoC5/UART_TEST.c ****     /*******************************************************************************
1592:.\Generated_Source\PSoC5/UART_TEST.c ****     * Function Name: UART_TEST_SetTxAddressMode
1593:.\Generated_Source\PSoC5/UART_TEST.c ****     ********************************************************************************
1594:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1595:.\Generated_Source\PSoC5/UART_TEST.c ****     * Summary:
1596:.\Generated_Source\PSoC5/UART_TEST.c ****     *  Set the transmit addressing mode
1597:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1598:.\Generated_Source\PSoC5/UART_TEST.c ****     * Parameters:
1599:.\Generated_Source\PSoC5/UART_TEST.c ****     *  addressMode: 0 -> Space
1600:.\Generated_Source\PSoC5/UART_TEST.c ****     *               1 -> Mark
1601:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1602:.\Generated_Source\PSoC5/UART_TEST.c ****     * Return:
1603:.\Generated_Source\PSoC5/UART_TEST.c ****     *  None.
1604:.\Generated_Source\PSoC5/UART_TEST.c ****     *
1605:.\Generated_Source\PSoC5/UART_TEST.c ****     *******************************************************************************/
1606:.\Generated_Source\PSoC5/UART_TEST.c ****     void UART_TEST_SetTxAddressMode(uint8 addressMode) 
1607:.\Generated_Source\PSoC5/UART_TEST.c ****     {
 1112              		.loc 1 1607 0
 1113              		.cfi_startproc
 1114              		@ args = 0, pretend = 0, frame = 8
 1115              		@ frame_needed = 1, uses_anonymous_args = 0
 1116              		@ link register save eliminated.
 1117 0000 80B4     		push	{r7}
 1118              	.LCFI48:
 1119              		.cfi_def_cfa_offset 4
 1120              		.cfi_offset 7, -4
 1121 0002 83B0     		sub	sp, sp, #12
 1122              	.LCFI49:
 1123              		.cfi_def_cfa_offset 16
 1124 0004 00AF     		add	r7, sp, #0
 1125              	.LCFI50:
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 49


 1126              		.cfi_def_cfa_register 7
 1127 0006 0346     		mov	r3, r0
 1128 0008 FB71     		strb	r3, [r7, #7]
1608:.\Generated_Source\PSoC5/UART_TEST.c ****         /* Mark/Space sending enable*/
1609:.\Generated_Source\PSoC5/UART_TEST.c ****         if(addressMode != 0u)
1610:.\Generated_Source\PSoC5/UART_TEST.c ****         {
1611:.\Generated_Source\PSoC5/UART_TEST.c ****             #if( UART_TEST_CONTROL_REG_REMOVED == 0u )
1612:.\Generated_Source\PSoC5/UART_TEST.c ****                 UART_TEST_WriteControlRegister(UART_TEST_ReadControlRegister() |
1613:.\Generated_Source\PSoC5/UART_TEST.c ****                                                       UART_TEST_CTRL_MARK);
1614:.\Generated_Source\PSoC5/UART_TEST.c ****             #endif /* End UART_TEST_CONTROL_REG_REMOVED == 0u */
1615:.\Generated_Source\PSoC5/UART_TEST.c ****         }
1616:.\Generated_Source\PSoC5/UART_TEST.c ****         else
1617:.\Generated_Source\PSoC5/UART_TEST.c ****         {
1618:.\Generated_Source\PSoC5/UART_TEST.c ****             #if( UART_TEST_CONTROL_REG_REMOVED == 0u )
1619:.\Generated_Source\PSoC5/UART_TEST.c ****                 UART_TEST_WriteControlRegister(UART_TEST_ReadControlRegister() &
1620:.\Generated_Source\PSoC5/UART_TEST.c ****                                                     (uint8)~UART_TEST_CTRL_MARK);
1621:.\Generated_Source\PSoC5/UART_TEST.c ****             #endif /* End UART_TEST_CONTROL_REG_REMOVED == 0u */
1622:.\Generated_Source\PSoC5/UART_TEST.c ****         }
1623:.\Generated_Source\PSoC5/UART_TEST.c ****     }
 1129              		.loc 1 1623 0
 1130 000a 07F10C07 		add	r7, r7, #12
 1131 000e BD46     		mov	sp, r7
 1132 0010 80BC     		pop	{r7}
 1133 0012 7047     		bx	lr
 1134              		.cfi_endproc
 1135              	.LFE18:
 1136              		.size	UART_TEST_SetTxAddressMode, .-UART_TEST_SetTxAddressMode
 1137              		.bss
 1138              	tx_period.4880:
 1139 0003 00       		.space	1
 1140              		.text
 1141              	.Letext0:
 1142              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1143              		.section	.debug_info,"",%progbits
 1144              	.Ldebug_info0:
 1145 0000 7C040000 		.4byte	0x47c
 1146 0004 0200     		.2byte	0x2
 1147 0006 00000000 		.4byte	.Ldebug_abbrev0
 1148 000a 04       		.byte	0x4
 1149 000b 01       		.uleb128 0x1
 1150 000c E1020000 		.4byte	.LASF55
 1151 0010 01       		.byte	0x1
 1152 0011 A3000000 		.4byte	.LASF56
 1153 0015 4B030000 		.4byte	.LASF57
 1154 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1155 001d 00000000 		.4byte	0
 1156 0021 00000000 		.4byte	0
 1157 0025 00000000 		.4byte	.Ldebug_line0
 1158 0029 02       		.uleb128 0x2
 1159 002a 01       		.byte	0x1
 1160 002b 06       		.byte	0x6
 1161 002c 86030000 		.4byte	.LASF0
 1162 0030 02       		.uleb128 0x2
 1163 0031 01       		.byte	0x1
 1164 0032 08       		.byte	0x8
 1165 0033 EF010000 		.4byte	.LASF1
 1166 0037 02       		.uleb128 0x2
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 50


 1167 0038 02       		.byte	0x2
 1168 0039 05       		.byte	0x5
 1169 003a C0020000 		.4byte	.LASF2
 1170 003e 02       		.uleb128 0x2
 1171 003f 02       		.byte	0x2
 1172 0040 07       		.byte	0x7
 1173 0041 90000000 		.4byte	.LASF3
 1174 0045 02       		.uleb128 0x2
 1175 0046 04       		.byte	0x4
 1176 0047 05       		.byte	0x5
 1177 0048 42030000 		.4byte	.LASF4
 1178 004c 02       		.uleb128 0x2
 1179 004d 04       		.byte	0x4
 1180 004e 07       		.byte	0x7
 1181 004f 49010000 		.4byte	.LASF5
 1182 0053 02       		.uleb128 0x2
 1183 0054 08       		.byte	0x8
 1184 0055 05       		.byte	0x5
 1185 0056 00000000 		.4byte	.LASF6
 1186 005a 02       		.uleb128 0x2
 1187 005b 08       		.byte	0x8
 1188 005c 07       		.byte	0x7
 1189 005d 3C020000 		.4byte	.LASF7
 1190 0061 03       		.uleb128 0x3
 1191 0062 04       		.byte	0x4
 1192 0063 05       		.byte	0x5
 1193 0064 696E7400 		.ascii	"int\000"
 1194 0068 02       		.uleb128 0x2
 1195 0069 04       		.byte	0x4
 1196 006a 07       		.byte	0x7
 1197 006b FD010000 		.4byte	.LASF8
 1198 006f 04       		.uleb128 0x4
 1199 0070 5B010000 		.4byte	.LASF9
 1200 0074 02       		.byte	0x2
 1201 0075 5B       		.byte	0x5b
 1202 0076 30000000 		.4byte	0x30
 1203 007a 04       		.uleb128 0x4
 1204 007b E1010000 		.4byte	.LASF10
 1205 007f 02       		.byte	0x2
 1206 0080 5C       		.byte	0x5c
 1207 0081 3E000000 		.4byte	0x3e
 1208 0085 04       		.uleb128 0x4
 1209 0086 E8010000 		.4byte	.LASF11
 1210 008a 02       		.byte	0x2
 1211 008b 5D       		.byte	0x5d
 1212 008c 4C000000 		.4byte	0x4c
 1213 0090 02       		.uleb128 0x2
 1214 0091 04       		.byte	0x4
 1215 0092 04       		.byte	0x4
 1216 0093 0F010000 		.4byte	.LASF12
 1217 0097 02       		.uleb128 0x2
 1218 0098 08       		.byte	0x8
 1219 0099 04       		.byte	0x4
 1220 009a C9010000 		.4byte	.LASF13
 1221 009e 04       		.uleb128 0x4
 1222 009f 5C000000 		.4byte	.LASF14
 1223 00a3 02       		.byte	0x2
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 51


 1224 00a4 6C       		.byte	0x6c
 1225 00a5 A9000000 		.4byte	0xa9
 1226 00a9 02       		.uleb128 0x2
 1227 00aa 01       		.byte	0x1
 1228 00ab 08       		.byte	0x8
 1229 00ac B3020000 		.4byte	.LASF15
 1230 00b0 04       		.uleb128 0x4
 1231 00b1 44010000 		.4byte	.LASF16
 1232 00b5 02       		.byte	0x2
 1233 00b6 F0       		.byte	0xf0
 1234 00b7 BB000000 		.4byte	0xbb
 1235 00bb 05       		.uleb128 0x5
 1236 00bc 6F000000 		.4byte	0x6f
 1237 00c0 04       		.uleb128 0x4
 1238 00c1 22000000 		.4byte	.LASF17
 1239 00c5 02       		.byte	0x2
 1240 00c6 F2       		.byte	0xf2
 1241 00c7 CB000000 		.4byte	0xcb
 1242 00cb 05       		.uleb128 0x5
 1243 00cc 85000000 		.4byte	0x85
 1244 00d0 02       		.uleb128 0x2
 1245 00d1 04       		.byte	0x4
 1246 00d2 07       		.byte	0x7
 1247 00d3 86020000 		.4byte	.LASF18
 1248 00d7 06       		.uleb128 0x6
 1249 00d8 01       		.byte	0x1
 1250 00d9 64020000 		.4byte	.LASF19
 1251 00dd 01       		.byte	0x1
 1252 00de 49       		.byte	0x49
 1253 00df 01       		.byte	0x1
 1254 00e0 00000000 		.4byte	.LFB0
 1255 00e4 2A000000 		.4byte	.LFE0
 1256 00e8 00000000 		.4byte	.LLST0
 1257 00ec 01       		.byte	0x1
 1258 00ed 06       		.uleb128 0x6
 1259 00ee 01       		.byte	0x1
 1260 00ef 00010000 		.4byte	.LASF20
 1261 00f3 01       		.byte	0x1
 1262 00f4 65       		.byte	0x65
 1263 00f5 01       		.byte	0x1
 1264 00f6 00000000 		.4byte	.LFB1
 1265 00fa 4C000000 		.4byte	.LFE1
 1266 00fe 2C000000 		.4byte	.LLST1
 1267 0102 01       		.byte	0x1
 1268 0103 07       		.uleb128 0x7
 1269 0104 01       		.byte	0x1
 1270 0105 B8010000 		.4byte	.LASF21
 1271 0109 01       		.byte	0x1
 1272 010a AE       		.byte	0xae
 1273 010b 01       		.byte	0x1
 1274 010c 00000000 		.4byte	.LFB2
 1275 0110 4C000000 		.4byte	.LFE2
 1276 0114 58000000 		.4byte	.LLST2
 1277 0118 01       		.byte	0x1
 1278 0119 2C010000 		.4byte	0x12c
 1279 011d 08       		.uleb128 0x8
 1280 011e 8A010000 		.4byte	.LASF23
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 52


 1281 0122 01       		.byte	0x1
 1282 0123 B0       		.byte	0xb0
 1283 0124 6F000000 		.4byte	0x6f
 1284 0128 02       		.byte	0x2
 1285 0129 91       		.byte	0x91
 1286 012a 77       		.sleb128 -9
 1287 012b 00       		.byte	0
 1288 012c 07       		.uleb128 0x7
 1289 012d 01       		.byte	0x1
 1290 012e 8F020000 		.4byte	.LASF22
 1291 0132 01       		.byte	0x1
 1292 0133 E3       		.byte	0xe3
 1293 0134 01       		.byte	0x1
 1294 0135 00000000 		.4byte	.LFB3
 1295 0139 42000000 		.4byte	.LFE3
 1296 013d 90000000 		.4byte	.LLST3
 1297 0141 01       		.byte	0x1
 1298 0142 55010000 		.4byte	0x155
 1299 0146 08       		.uleb128 0x8
 1300 0147 8A010000 		.4byte	.LASF23
 1301 014b 01       		.byte	0x1
 1302 014c E5       		.byte	0xe5
 1303 014d 6F000000 		.4byte	0x6f
 1304 0151 02       		.byte	0x2
 1305 0152 91       		.byte	0x91
 1306 0153 77       		.sleb128 -9
 1307 0154 00       		.byte	0
 1308 0155 09       		.uleb128 0x9
 1309 0156 01       		.byte	0x1
 1310 0157 3E000000 		.4byte	.LASF32
 1311 015b 01       		.byte	0x1
 1312 015c 1901     		.2byte	0x119
 1313 015e 01       		.byte	0x1
 1314 015f 6F000000 		.4byte	0x6f
 1315 0163 00000000 		.4byte	.LFB4
 1316 0167 10000000 		.4byte	.LFE4
 1317 016b C8000000 		.4byte	.LLST4
 1318 016f 01       		.byte	0x1
 1319 0170 0A       		.uleb128 0xa
 1320 0171 01       		.byte	0x1
 1321 0172 D5030000 		.4byte	.LASF24
 1322 0176 01       		.byte	0x1
 1323 0177 3101     		.2byte	0x131
 1324 0179 01       		.byte	0x1
 1325 017a 00000000 		.4byte	.LFB5
 1326 017e 14000000 		.4byte	.LFE5
 1327 0182 F4000000 		.4byte	.LLST5
 1328 0186 01       		.byte	0x1
 1329 0187 9B010000 		.4byte	0x19b
 1330 018b 0B       		.uleb128 0xb
 1331 018c 61010000 		.4byte	.LASF28
 1332 0190 01       		.byte	0x1
 1333 0191 3101     		.2byte	0x131
 1334 0193 6F000000 		.4byte	0x6f
 1335 0197 02       		.byte	0x2
 1336 0198 91       		.byte	0x91
 1337 0199 77       		.sleb128 -9
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 53


 1338 019a 00       		.byte	0
 1339 019b 0C       		.uleb128 0xc
 1340 019c 01       		.byte	0x1
 1341 019d 28000000 		.4byte	.LASF25
 1342 01a1 01       		.byte	0x1
 1343 01a2 9703     		.2byte	0x397
 1344 01a4 01       		.byte	0x1
 1345 01a5 00000000 		.4byte	.LFB6
 1346 01a9 18000000 		.4byte	.LFE6
 1347 01ad 2C010000 		.4byte	.LLST6
 1348 01b1 01       		.byte	0x1
 1349 01b2 0C       		.uleb128 0xc
 1350 01b3 01       		.byte	0x1
 1351 01b4 CA020000 		.4byte	.LASF26
 1352 01b8 01       		.byte	0x1
 1353 01b9 AE03     		.2byte	0x3ae
 1354 01bb 01       		.byte	0x1
 1355 01bc 00000000 		.4byte	.LFB7
 1356 01c0 18000000 		.4byte	.LFE7
 1357 01c4 58010000 		.4byte	.LLST7
 1358 01c8 01       		.byte	0x1
 1359 01c9 0A       		.uleb128 0xa
 1360 01ca 01       		.byte	0x1
 1361 01cb 9B010000 		.4byte	.LASF27
 1362 01cf 01       		.byte	0x1
 1363 01d0 C803     		.2byte	0x3c8
 1364 01d2 01       		.byte	0x1
 1365 01d3 00000000 		.4byte	.LFB8
 1366 01d7 20000000 		.4byte	.LFE8
 1367 01db 84010000 		.4byte	.LLST8
 1368 01df 01       		.byte	0x1
 1369 01e0 F4010000 		.4byte	0x1f4
 1370 01e4 0B       		.uleb128 0xb
 1371 01e5 D0010000 		.4byte	.LASF29
 1372 01e9 01       		.byte	0x1
 1373 01ea C803     		.2byte	0x3c8
 1374 01ec 6F000000 		.4byte	0x6f
 1375 01f0 02       		.byte	0x2
 1376 01f1 91       		.byte	0x91
 1377 01f2 77       		.sleb128 -9
 1378 01f3 00       		.byte	0
 1379 01f4 0D       		.uleb128 0xd
 1380 01f5 01       		.byte	0x1
 1381 01f6 92030000 		.4byte	.LASF30
 1382 01fa 01       		.byte	0x1
 1383 01fb EA03     		.2byte	0x3ea
 1384 01fd 01       		.byte	0x1
 1385 01fe 00000000 		.4byte	.LFB9
 1386 0202 B2000000 		.4byte	.LFE9
 1387 0206 BC010000 		.4byte	.LLST9
 1388 020a 01       		.byte	0x1
 1389 020b 1F020000 		.4byte	0x21f
 1390 020f 0B       		.uleb128 0xb
 1391 0210 9E020000 		.4byte	.LASF31
 1392 0214 01       		.byte	0x1
 1393 0215 EA03     		.2byte	0x3ea
 1394 0217 6F000000 		.4byte	0x6f
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 54


 1395 021b 02       		.byte	0x2
 1396 021c 91       		.byte	0x91
 1397 021d 77       		.sleb128 -9
 1398 021e 00       		.byte	0
 1399 021f 09       		.uleb128 0x9
 1400 0220 01       		.byte	0x1
 1401 0221 69010000 		.4byte	.LASF33
 1402 0225 01       		.byte	0x1
 1403 0226 2E04     		.2byte	0x42e
 1404 0228 01       		.byte	0x1
 1405 0229 6F000000 		.4byte	0x6f
 1406 022d 00000000 		.4byte	.LFB10
 1407 0231 18000000 		.4byte	.LFE10
 1408 0235 F4010000 		.4byte	.LLST10
 1409 0239 01       		.byte	0x1
 1410 023a 0A       		.uleb128 0xa
 1411 023b 01       		.byte	0x1
 1412 023c D4000000 		.4byte	.LASF34
 1413 0240 01       		.byte	0x1
 1414 0241 5204     		.2byte	0x452
 1415 0243 01       		.byte	0x1
 1416 0244 00000000 		.4byte	.LFB11
 1417 0248 B4000000 		.4byte	.LFE11
 1418 024c 20020000 		.4byte	.LLST11
 1419 0250 01       		.byte	0x1
 1420 0251 83020000 		.4byte	0x283
 1421 0255 0B       		.uleb128 0xb
 1422 0256 9E020000 		.4byte	.LASF31
 1423 025a 01       		.byte	0x1
 1424 025b 5204     		.2byte	0x452
 1425 025d 6F000000 		.4byte	0x6f
 1426 0261 02       		.byte	0x2
 1427 0262 91       		.byte	0x91
 1428 0263 6F       		.sleb128 -17
 1429 0264 0E       		.uleb128 0xe
 1430 0265 15010000 		.4byte	.LASF35
 1431 0269 01       		.byte	0x1
 1432 026a 5904     		.2byte	0x459
 1433 026c 6F000000 		.4byte	0x6f
 1434 0270 02       		.byte	0x2
 1435 0271 91       		.byte	0x91
 1436 0272 77       		.sleb128 -9
 1437 0273 0E       		.uleb128 0xe
 1438 0274 53020000 		.4byte	.LASF36
 1439 0278 01       		.byte	0x1
 1440 0279 5A04     		.2byte	0x45a
 1441 027b 6F000000 		.4byte	0x6f
 1442 027f 02       		.byte	0x2
 1443 0280 91       		.byte	0x91
 1444 0281 76       		.sleb128 -10
 1445 0282 00       		.byte	0
 1446 0283 0D       		.uleb128 0xd
 1447 0284 01       		.byte	0x1
 1448 0285 62000000 		.4byte	.LASF37
 1449 0289 01       		.byte	0x1
 1450 028a AE04     		.2byte	0x4ae
 1451 028c 01       		.byte	0x1
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 55


 1452 028d 00000000 		.4byte	.LFB12
 1453 0291 48000000 		.4byte	.LFE12
 1454 0295 58020000 		.4byte	.LLST12
 1455 0299 01       		.byte	0x1
 1456 029a BD020000 		.4byte	0x2bd
 1457 029e 0B       		.uleb128 0xb
 1458 029f E6000000 		.4byte	.LASF38
 1459 02a3 01       		.byte	0x1
 1460 02a4 AE04     		.2byte	0x4ae
 1461 02a6 BD020000 		.4byte	0x2bd
 1462 02aa 02       		.byte	0x2
 1463 02ab 91       		.byte	0x91
 1464 02ac 6C       		.sleb128 -20
 1465 02ad 0E       		.uleb128 0xe
 1466 02ae D7010000 		.4byte	.LASF39
 1467 02b2 01       		.byte	0x1
 1468 02b3 B004     		.2byte	0x4b0
 1469 02b5 7A000000 		.4byte	0x7a
 1470 02b9 02       		.byte	0x2
 1471 02ba 91       		.byte	0x91
 1472 02bb 76       		.sleb128 -10
 1473 02bc 00       		.byte	0
 1474 02bd 0F       		.uleb128 0xf
 1475 02be 04       		.byte	0x4
 1476 02bf C3020000 		.4byte	0x2c3
 1477 02c3 10       		.uleb128 0x10
 1478 02c4 9E000000 		.4byte	0x9e
 1479 02c8 0D       		.uleb128 0xd
 1480 02c9 01       		.byte	0x1
 1481 02ca ED000000 		.4byte	.LASF40
 1482 02ce 01       		.byte	0x1
 1483 02cf D404     		.2byte	0x4d4
 1484 02d1 01       		.byte	0x1
 1485 02d2 00000000 		.4byte	.LFB13
 1486 02d6 46000000 		.4byte	.LFE13
 1487 02da 90020000 		.4byte	.LLST13
 1488 02de 01       		.byte	0x1
 1489 02df 11030000 		.4byte	0x311
 1490 02e3 0B       		.uleb128 0xb
 1491 02e4 E6000000 		.4byte	.LASF38
 1492 02e8 01       		.byte	0x1
 1493 02e9 D404     		.2byte	0x4d4
 1494 02eb 11030000 		.4byte	0x311
 1495 02ef 02       		.byte	0x2
 1496 02f0 91       		.byte	0x91
 1497 02f1 6C       		.sleb128 -20
 1498 02f2 0B       		.uleb128 0xb
 1499 02f3 80010000 		.4byte	.LASF41
 1500 02f7 01       		.byte	0x1
 1501 02f8 D404     		.2byte	0x4d4
 1502 02fa 6F000000 		.4byte	0x6f
 1503 02fe 02       		.byte	0x2
 1504 02ff 91       		.byte	0x91
 1505 0300 6B       		.sleb128 -21
 1506 0301 0E       		.uleb128 0xe
 1507 0302 D7010000 		.4byte	.LASF39
 1508 0306 01       		.byte	0x1
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 56


 1509 0307 D704     		.2byte	0x4d7
 1510 0309 6F000000 		.4byte	0x6f
 1511 030d 02       		.byte	0x2
 1512 030e 91       		.byte	0x91
 1513 030f 77       		.sleb128 -9
 1514 0310 00       		.byte	0
 1515 0311 0F       		.uleb128 0xf
 1516 0312 04       		.byte	0x4
 1517 0313 17030000 		.4byte	0x317
 1518 0317 10       		.uleb128 0x10
 1519 0318 6F000000 		.4byte	0x6f
 1520 031c 0D       		.uleb128 0xd
 1521 031d 01       		.byte	0x1
 1522 031e 7E000000 		.4byte	.LASF42
 1523 0322 01       		.byte	0x1
 1524 0323 F904     		.2byte	0x4f9
 1525 0325 01       		.byte	0x1
 1526 0326 00000000 		.4byte	.LFB14
 1527 032a 38000000 		.4byte	.LFE14
 1528 032e C8020000 		.4byte	.LLST14
 1529 0332 01       		.byte	0x1
 1530 0333 47030000 		.4byte	0x347
 1531 0337 0B       		.uleb128 0xb
 1532 0338 9E020000 		.4byte	.LASF31
 1533 033c 01       		.byte	0x1
 1534 033d F904     		.2byte	0x4f9
 1535 033f 6F000000 		.4byte	0x6f
 1536 0343 02       		.byte	0x2
 1537 0344 91       		.byte	0x91
 1538 0345 77       		.sleb128 -9
 1539 0346 00       		.byte	0
 1540 0347 11       		.uleb128 0x11
 1541 0348 01       		.byte	0x1
 1542 0349 A8030000 		.4byte	.LASF58
 1543 034d 01       		.byte	0x1
 1544 034e 1E05     		.2byte	0x51e
 1545 0350 01       		.byte	0x1
 1546 0351 6F000000 		.4byte	0x6f
 1547 0355 00000000 		.4byte	.LFB15
 1548 0359 92000000 		.4byte	.LFE15
 1549 035d 00030000 		.4byte	.LLST15
 1550 0361 01       		.byte	0x1
 1551 0362 76030000 		.4byte	0x376
 1552 0366 0E       		.uleb128 0xe
 1553 0367 27010000 		.4byte	.LASF43
 1554 036b 01       		.byte	0x1
 1555 036c 2105     		.2byte	0x521
 1556 036e 6F000000 		.4byte	0x6f
 1557 0372 02       		.byte	0x2
 1558 0373 91       		.byte	0x91
 1559 0374 77       		.sleb128 -9
 1560 0375 00       		.byte	0
 1561 0376 0D       		.uleb128 0xd
 1562 0377 01       		.byte	0x1
 1563 0378 2A030000 		.4byte	.LASF44
 1564 037c 01       		.byte	0x1
 1565 037d 7405     		.2byte	0x574
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 57


 1566 037f 01       		.byte	0x1
 1567 0380 00000000 		.4byte	.LFB16
 1568 0384 7A000000 		.4byte	.LFE16
 1569 0388 38030000 		.4byte	.LLST16
 1570 038c 01       		.byte	0x1
 1571 038d A1030000 		.4byte	0x3a1
 1572 0391 0E       		.uleb128 0xe
 1573 0392 8A010000 		.4byte	.LASF23
 1574 0396 01       		.byte	0x1
 1575 0397 7605     		.2byte	0x576
 1576 0399 6F000000 		.4byte	0x6f
 1577 039d 02       		.byte	0x2
 1578 039e 91       		.byte	0x91
 1579 039f 77       		.sleb128 -9
 1580 03a0 00       		.byte	0
 1581 03a1 0A       		.uleb128 0xa
 1582 03a2 01       		.byte	0x1
 1583 03a3 0E000000 		.4byte	.LASF45
 1584 03a7 01       		.byte	0x1
 1585 03a8 CD05     		.2byte	0x5cd
 1586 03aa 01       		.byte	0x1
 1587 03ab 00000000 		.4byte	.LFB17
 1588 03af C4000000 		.4byte	.LFE17
 1589 03b3 70030000 		.4byte	.LLST17
 1590 03b7 01       		.byte	0x1
 1591 03b8 F7030000 		.4byte	0x3f7
 1592 03bc 0B       		.uleb128 0xb
 1593 03bd B8020000 		.4byte	.LASF46
 1594 03c1 01       		.byte	0x1
 1595 03c2 CD05     		.2byte	0x5cd
 1596 03c4 6F000000 		.4byte	0x6f
 1597 03c8 02       		.byte	0x2
 1598 03c9 91       		.byte	0x91
 1599 03ca 6F       		.sleb128 -17
 1600 03cb 12       		.uleb128 0x12
 1601 03cc 18000000 		.4byte	.LBB2
 1602 03d0 BA000000 		.4byte	.LBE2
 1603 03d4 0E       		.uleb128 0xe
 1604 03d5 76000000 		.4byte	.LASF47
 1605 03d9 01       		.byte	0x1
 1606 03da D505     		.2byte	0x5d5
 1607 03dc 6F000000 		.4byte	0x6f
 1608 03e0 02       		.byte	0x2
 1609 03e1 91       		.byte	0x91
 1610 03e2 77       		.sleb128 -9
 1611 03e3 0E       		.uleb128 0xe
 1612 03e4 A9020000 		.4byte	.LASF48
 1613 03e8 01       		.byte	0x1
 1614 03e9 FB05     		.2byte	0x5fb
 1615 03eb 6F000000 		.4byte	0x6f
 1616 03ef 05       		.byte	0x5
 1617 03f0 03       		.byte	0x3
 1618 03f1 03000000 		.4byte	tx_period.4880
 1619 03f5 00       		.byte	0
 1620 03f6 00       		.byte	0
 1621 03f7 0A       		.uleb128 0xa
 1622 03f8 01       		.byte	0x1
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 58


 1623 03f9 21020000 		.4byte	.LASF49
 1624 03fd 01       		.byte	0x1
 1625 03fe 4606     		.2byte	0x646
 1626 0400 01       		.byte	0x1
 1627 0401 00000000 		.4byte	.LFB18
 1628 0405 14000000 		.4byte	.LFE18
 1629 0409 A8030000 		.4byte	.LLST18
 1630 040d 01       		.byte	0x1
 1631 040e 22040000 		.4byte	0x422
 1632 0412 0B       		.uleb128 0xb
 1633 0413 C8000000 		.4byte	.LASF50
 1634 0417 01       		.byte	0x1
 1635 0418 4606     		.2byte	0x646
 1636 041a 6F000000 		.4byte	0x6f
 1637 041e 02       		.byte	0x2
 1638 041f 91       		.byte	0x91
 1639 0420 77       		.sleb128 -9
 1640 0421 00       		.byte	0
 1641 0422 13       		.uleb128 0x13
 1642 0423 74020000 		.4byte	.LASF51
 1643 0427 01       		.byte	0x1
 1644 0428 1C       		.byte	0x1c
 1645 0429 6F000000 		.4byte	0x6f
 1646 042d 01       		.byte	0x1
 1647 042e 05       		.byte	0x5
 1648 042f 03       		.byte	0x3
 1649 0430 00000000 		.4byte	UART_TEST_initVar
 1650 0434 14       		.uleb128 0x14
 1651 0435 6F000000 		.4byte	0x6f
 1652 0439 44040000 		.4byte	0x444
 1653 043d 15       		.uleb128 0x15
 1654 043e D0000000 		.4byte	0xd0
 1655 0442 1F       		.byte	0x1f
 1656 0443 00       		.byte	0
 1657 0444 13       		.uleb128 0x13
 1658 0445 C2030000 		.4byte	.LASF52
 1659 0449 01       		.byte	0x1
 1660 044a 1E       		.byte	0x1e
 1661 044b 56040000 		.4byte	0x456
 1662 044f 01       		.byte	0x1
 1663 0450 05       		.byte	0x5
 1664 0451 03       		.byte	0x3
 1665 0452 00000000 		.4byte	UART_TEST_txBuffer
 1666 0456 05       		.uleb128 0x5
 1667 0457 34040000 		.4byte	0x434
 1668 045b 13       		.uleb128 0x13
 1669 045c 0A020000 		.4byte	.LASF53
 1670 0460 01       		.byte	0x1
 1671 0461 1F       		.byte	0x1f
 1672 0462 BB000000 		.4byte	0xbb
 1673 0466 01       		.byte	0x1
 1674 0467 05       		.byte	0x5
 1675 0468 03       		.byte	0x3
 1676 0469 00000000 		.4byte	UART_TEST_txBufferRead
 1677 046d 13       		.uleb128 0x13
 1678 046e 2C010000 		.4byte	.LASF54
 1679 0472 01       		.byte	0x1
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 59


 1680 0473 20       		.byte	0x20
 1681 0474 6F000000 		.4byte	0x6f
 1682 0478 01       		.byte	0x1
 1683 0479 05       		.byte	0x5
 1684 047a 03       		.byte	0x3
 1685 047b 00000000 		.4byte	UART_TEST_txBufferWrite
 1686 047f 00       		.byte	0
 1687              		.section	.debug_abbrev,"",%progbits
 1688              	.Ldebug_abbrev0:
 1689 0000 01       		.uleb128 0x1
 1690 0001 11       		.uleb128 0x11
 1691 0002 01       		.byte	0x1
 1692 0003 25       		.uleb128 0x25
 1693 0004 0E       		.uleb128 0xe
 1694 0005 13       		.uleb128 0x13
 1695 0006 0B       		.uleb128 0xb
 1696 0007 03       		.uleb128 0x3
 1697 0008 0E       		.uleb128 0xe
 1698 0009 1B       		.uleb128 0x1b
 1699 000a 0E       		.uleb128 0xe
 1700 000b 55       		.uleb128 0x55
 1701 000c 06       		.uleb128 0x6
 1702 000d 11       		.uleb128 0x11
 1703 000e 01       		.uleb128 0x1
 1704 000f 52       		.uleb128 0x52
 1705 0010 01       		.uleb128 0x1
 1706 0011 10       		.uleb128 0x10
 1707 0012 06       		.uleb128 0x6
 1708 0013 00       		.byte	0
 1709 0014 00       		.byte	0
 1710 0015 02       		.uleb128 0x2
 1711 0016 24       		.uleb128 0x24
 1712 0017 00       		.byte	0
 1713 0018 0B       		.uleb128 0xb
 1714 0019 0B       		.uleb128 0xb
 1715 001a 3E       		.uleb128 0x3e
 1716 001b 0B       		.uleb128 0xb
 1717 001c 03       		.uleb128 0x3
 1718 001d 0E       		.uleb128 0xe
 1719 001e 00       		.byte	0
 1720 001f 00       		.byte	0
 1721 0020 03       		.uleb128 0x3
 1722 0021 24       		.uleb128 0x24
 1723 0022 00       		.byte	0
 1724 0023 0B       		.uleb128 0xb
 1725 0024 0B       		.uleb128 0xb
 1726 0025 3E       		.uleb128 0x3e
 1727 0026 0B       		.uleb128 0xb
 1728 0027 03       		.uleb128 0x3
 1729 0028 08       		.uleb128 0x8
 1730 0029 00       		.byte	0
 1731 002a 00       		.byte	0
 1732 002b 04       		.uleb128 0x4
 1733 002c 16       		.uleb128 0x16
 1734 002d 00       		.byte	0
 1735 002e 03       		.uleb128 0x3
 1736 002f 0E       		.uleb128 0xe
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 60


 1737 0030 3A       		.uleb128 0x3a
 1738 0031 0B       		.uleb128 0xb
 1739 0032 3B       		.uleb128 0x3b
 1740 0033 0B       		.uleb128 0xb
 1741 0034 49       		.uleb128 0x49
 1742 0035 13       		.uleb128 0x13
 1743 0036 00       		.byte	0
 1744 0037 00       		.byte	0
 1745 0038 05       		.uleb128 0x5
 1746 0039 35       		.uleb128 0x35
 1747 003a 00       		.byte	0
 1748 003b 49       		.uleb128 0x49
 1749 003c 13       		.uleb128 0x13
 1750 003d 00       		.byte	0
 1751 003e 00       		.byte	0
 1752 003f 06       		.uleb128 0x6
 1753 0040 2E       		.uleb128 0x2e
 1754 0041 00       		.byte	0
 1755 0042 3F       		.uleb128 0x3f
 1756 0043 0C       		.uleb128 0xc
 1757 0044 03       		.uleb128 0x3
 1758 0045 0E       		.uleb128 0xe
 1759 0046 3A       		.uleb128 0x3a
 1760 0047 0B       		.uleb128 0xb
 1761 0048 3B       		.uleb128 0x3b
 1762 0049 0B       		.uleb128 0xb
 1763 004a 27       		.uleb128 0x27
 1764 004b 0C       		.uleb128 0xc
 1765 004c 11       		.uleb128 0x11
 1766 004d 01       		.uleb128 0x1
 1767 004e 12       		.uleb128 0x12
 1768 004f 01       		.uleb128 0x1
 1769 0050 40       		.uleb128 0x40
 1770 0051 06       		.uleb128 0x6
 1771 0052 9642     		.uleb128 0x2116
 1772 0054 0C       		.uleb128 0xc
 1773 0055 00       		.byte	0
 1774 0056 00       		.byte	0
 1775 0057 07       		.uleb128 0x7
 1776 0058 2E       		.uleb128 0x2e
 1777 0059 01       		.byte	0x1
 1778 005a 3F       		.uleb128 0x3f
 1779 005b 0C       		.uleb128 0xc
 1780 005c 03       		.uleb128 0x3
 1781 005d 0E       		.uleb128 0xe
 1782 005e 3A       		.uleb128 0x3a
 1783 005f 0B       		.uleb128 0xb
 1784 0060 3B       		.uleb128 0x3b
 1785 0061 0B       		.uleb128 0xb
 1786 0062 27       		.uleb128 0x27
 1787 0063 0C       		.uleb128 0xc
 1788 0064 11       		.uleb128 0x11
 1789 0065 01       		.uleb128 0x1
 1790 0066 12       		.uleb128 0x12
 1791 0067 01       		.uleb128 0x1
 1792 0068 40       		.uleb128 0x40
 1793 0069 06       		.uleb128 0x6
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 61


 1794 006a 9642     		.uleb128 0x2116
 1795 006c 0C       		.uleb128 0xc
 1796 006d 01       		.uleb128 0x1
 1797 006e 13       		.uleb128 0x13
 1798 006f 00       		.byte	0
 1799 0070 00       		.byte	0
 1800 0071 08       		.uleb128 0x8
 1801 0072 34       		.uleb128 0x34
 1802 0073 00       		.byte	0
 1803 0074 03       		.uleb128 0x3
 1804 0075 0E       		.uleb128 0xe
 1805 0076 3A       		.uleb128 0x3a
 1806 0077 0B       		.uleb128 0xb
 1807 0078 3B       		.uleb128 0x3b
 1808 0079 0B       		.uleb128 0xb
 1809 007a 49       		.uleb128 0x49
 1810 007b 13       		.uleb128 0x13
 1811 007c 02       		.uleb128 0x2
 1812 007d 0A       		.uleb128 0xa
 1813 007e 00       		.byte	0
 1814 007f 00       		.byte	0
 1815 0080 09       		.uleb128 0x9
 1816 0081 2E       		.uleb128 0x2e
 1817 0082 00       		.byte	0
 1818 0083 3F       		.uleb128 0x3f
 1819 0084 0C       		.uleb128 0xc
 1820 0085 03       		.uleb128 0x3
 1821 0086 0E       		.uleb128 0xe
 1822 0087 3A       		.uleb128 0x3a
 1823 0088 0B       		.uleb128 0xb
 1824 0089 3B       		.uleb128 0x3b
 1825 008a 05       		.uleb128 0x5
 1826 008b 27       		.uleb128 0x27
 1827 008c 0C       		.uleb128 0xc
 1828 008d 49       		.uleb128 0x49
 1829 008e 13       		.uleb128 0x13
 1830 008f 11       		.uleb128 0x11
 1831 0090 01       		.uleb128 0x1
 1832 0091 12       		.uleb128 0x12
 1833 0092 01       		.uleb128 0x1
 1834 0093 40       		.uleb128 0x40
 1835 0094 06       		.uleb128 0x6
 1836 0095 9742     		.uleb128 0x2117
 1837 0097 0C       		.uleb128 0xc
 1838 0098 00       		.byte	0
 1839 0099 00       		.byte	0
 1840 009a 0A       		.uleb128 0xa
 1841 009b 2E       		.uleb128 0x2e
 1842 009c 01       		.byte	0x1
 1843 009d 3F       		.uleb128 0x3f
 1844 009e 0C       		.uleb128 0xc
 1845 009f 03       		.uleb128 0x3
 1846 00a0 0E       		.uleb128 0xe
 1847 00a1 3A       		.uleb128 0x3a
 1848 00a2 0B       		.uleb128 0xb
 1849 00a3 3B       		.uleb128 0x3b
 1850 00a4 05       		.uleb128 0x5
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 62


 1851 00a5 27       		.uleb128 0x27
 1852 00a6 0C       		.uleb128 0xc
 1853 00a7 11       		.uleb128 0x11
 1854 00a8 01       		.uleb128 0x1
 1855 00a9 12       		.uleb128 0x12
 1856 00aa 01       		.uleb128 0x1
 1857 00ab 40       		.uleb128 0x40
 1858 00ac 06       		.uleb128 0x6
 1859 00ad 9742     		.uleb128 0x2117
 1860 00af 0C       		.uleb128 0xc
 1861 00b0 01       		.uleb128 0x1
 1862 00b1 13       		.uleb128 0x13
 1863 00b2 00       		.byte	0
 1864 00b3 00       		.byte	0
 1865 00b4 0B       		.uleb128 0xb
 1866 00b5 05       		.uleb128 0x5
 1867 00b6 00       		.byte	0
 1868 00b7 03       		.uleb128 0x3
 1869 00b8 0E       		.uleb128 0xe
 1870 00b9 3A       		.uleb128 0x3a
 1871 00ba 0B       		.uleb128 0xb
 1872 00bb 3B       		.uleb128 0x3b
 1873 00bc 05       		.uleb128 0x5
 1874 00bd 49       		.uleb128 0x49
 1875 00be 13       		.uleb128 0x13
 1876 00bf 02       		.uleb128 0x2
 1877 00c0 0A       		.uleb128 0xa
 1878 00c1 00       		.byte	0
 1879 00c2 00       		.byte	0
 1880 00c3 0C       		.uleb128 0xc
 1881 00c4 2E       		.uleb128 0x2e
 1882 00c5 00       		.byte	0
 1883 00c6 3F       		.uleb128 0x3f
 1884 00c7 0C       		.uleb128 0xc
 1885 00c8 03       		.uleb128 0x3
 1886 00c9 0E       		.uleb128 0xe
 1887 00ca 3A       		.uleb128 0x3a
 1888 00cb 0B       		.uleb128 0xb
 1889 00cc 3B       		.uleb128 0x3b
 1890 00cd 05       		.uleb128 0x5
 1891 00ce 27       		.uleb128 0x27
 1892 00cf 0C       		.uleb128 0xc
 1893 00d0 11       		.uleb128 0x11
 1894 00d1 01       		.uleb128 0x1
 1895 00d2 12       		.uleb128 0x12
 1896 00d3 01       		.uleb128 0x1
 1897 00d4 40       		.uleb128 0x40
 1898 00d5 06       		.uleb128 0x6
 1899 00d6 9742     		.uleb128 0x2117
 1900 00d8 0C       		.uleb128 0xc
 1901 00d9 00       		.byte	0
 1902 00da 00       		.byte	0
 1903 00db 0D       		.uleb128 0xd
 1904 00dc 2E       		.uleb128 0x2e
 1905 00dd 01       		.byte	0x1
 1906 00de 3F       		.uleb128 0x3f
 1907 00df 0C       		.uleb128 0xc
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 63


 1908 00e0 03       		.uleb128 0x3
 1909 00e1 0E       		.uleb128 0xe
 1910 00e2 3A       		.uleb128 0x3a
 1911 00e3 0B       		.uleb128 0xb
 1912 00e4 3B       		.uleb128 0x3b
 1913 00e5 05       		.uleb128 0x5
 1914 00e6 27       		.uleb128 0x27
 1915 00e7 0C       		.uleb128 0xc
 1916 00e8 11       		.uleb128 0x11
 1917 00e9 01       		.uleb128 0x1
 1918 00ea 12       		.uleb128 0x12
 1919 00eb 01       		.uleb128 0x1
 1920 00ec 40       		.uleb128 0x40
 1921 00ed 06       		.uleb128 0x6
 1922 00ee 9642     		.uleb128 0x2116
 1923 00f0 0C       		.uleb128 0xc
 1924 00f1 01       		.uleb128 0x1
 1925 00f2 13       		.uleb128 0x13
 1926 00f3 00       		.byte	0
 1927 00f4 00       		.byte	0
 1928 00f5 0E       		.uleb128 0xe
 1929 00f6 34       		.uleb128 0x34
 1930 00f7 00       		.byte	0
 1931 00f8 03       		.uleb128 0x3
 1932 00f9 0E       		.uleb128 0xe
 1933 00fa 3A       		.uleb128 0x3a
 1934 00fb 0B       		.uleb128 0xb
 1935 00fc 3B       		.uleb128 0x3b
 1936 00fd 05       		.uleb128 0x5
 1937 00fe 49       		.uleb128 0x49
 1938 00ff 13       		.uleb128 0x13
 1939 0100 02       		.uleb128 0x2
 1940 0101 0A       		.uleb128 0xa
 1941 0102 00       		.byte	0
 1942 0103 00       		.byte	0
 1943 0104 0F       		.uleb128 0xf
 1944 0105 0F       		.uleb128 0xf
 1945 0106 00       		.byte	0
 1946 0107 0B       		.uleb128 0xb
 1947 0108 0B       		.uleb128 0xb
 1948 0109 49       		.uleb128 0x49
 1949 010a 13       		.uleb128 0x13
 1950 010b 00       		.byte	0
 1951 010c 00       		.byte	0
 1952 010d 10       		.uleb128 0x10
 1953 010e 26       		.uleb128 0x26
 1954 010f 00       		.byte	0
 1955 0110 49       		.uleb128 0x49
 1956 0111 13       		.uleb128 0x13
 1957 0112 00       		.byte	0
 1958 0113 00       		.byte	0
 1959 0114 11       		.uleb128 0x11
 1960 0115 2E       		.uleb128 0x2e
 1961 0116 01       		.byte	0x1
 1962 0117 3F       		.uleb128 0x3f
 1963 0118 0C       		.uleb128 0xc
 1964 0119 03       		.uleb128 0x3
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 64


 1965 011a 0E       		.uleb128 0xe
 1966 011b 3A       		.uleb128 0x3a
 1967 011c 0B       		.uleb128 0xb
 1968 011d 3B       		.uleb128 0x3b
 1969 011e 05       		.uleb128 0x5
 1970 011f 27       		.uleb128 0x27
 1971 0120 0C       		.uleb128 0xc
 1972 0121 49       		.uleb128 0x49
 1973 0122 13       		.uleb128 0x13
 1974 0123 11       		.uleb128 0x11
 1975 0124 01       		.uleb128 0x1
 1976 0125 12       		.uleb128 0x12
 1977 0126 01       		.uleb128 0x1
 1978 0127 40       		.uleb128 0x40
 1979 0128 06       		.uleb128 0x6
 1980 0129 9642     		.uleb128 0x2116
 1981 012b 0C       		.uleb128 0xc
 1982 012c 01       		.uleb128 0x1
 1983 012d 13       		.uleb128 0x13
 1984 012e 00       		.byte	0
 1985 012f 00       		.byte	0
 1986 0130 12       		.uleb128 0x12
 1987 0131 0B       		.uleb128 0xb
 1988 0132 01       		.byte	0x1
 1989 0133 11       		.uleb128 0x11
 1990 0134 01       		.uleb128 0x1
 1991 0135 12       		.uleb128 0x12
 1992 0136 01       		.uleb128 0x1
 1993 0137 00       		.byte	0
 1994 0138 00       		.byte	0
 1995 0139 13       		.uleb128 0x13
 1996 013a 34       		.uleb128 0x34
 1997 013b 00       		.byte	0
 1998 013c 03       		.uleb128 0x3
 1999 013d 0E       		.uleb128 0xe
 2000 013e 3A       		.uleb128 0x3a
 2001 013f 0B       		.uleb128 0xb
 2002 0140 3B       		.uleb128 0x3b
 2003 0141 0B       		.uleb128 0xb
 2004 0142 49       		.uleb128 0x49
 2005 0143 13       		.uleb128 0x13
 2006 0144 3F       		.uleb128 0x3f
 2007 0145 0C       		.uleb128 0xc
 2008 0146 02       		.uleb128 0x2
 2009 0147 0A       		.uleb128 0xa
 2010 0148 00       		.byte	0
 2011 0149 00       		.byte	0
 2012 014a 14       		.uleb128 0x14
 2013 014b 01       		.uleb128 0x1
 2014 014c 01       		.byte	0x1
 2015 014d 49       		.uleb128 0x49
 2016 014e 13       		.uleb128 0x13
 2017 014f 01       		.uleb128 0x1
 2018 0150 13       		.uleb128 0x13
 2019 0151 00       		.byte	0
 2020 0152 00       		.byte	0
 2021 0153 15       		.uleb128 0x15
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 65


 2022 0154 21       		.uleb128 0x21
 2023 0155 00       		.byte	0
 2024 0156 49       		.uleb128 0x49
 2025 0157 13       		.uleb128 0x13
 2026 0158 2F       		.uleb128 0x2f
 2027 0159 0B       		.uleb128 0xb
 2028 015a 00       		.byte	0
 2029 015b 00       		.byte	0
 2030 015c 00       		.byte	0
 2031              		.section	.debug_loc,"",%progbits
 2032              	.Ldebug_loc0:
 2033              	.LLST0:
 2034 0000 00000000 		.4byte	.LFB0
 2035 0004 02000000 		.4byte	.LCFI0
 2036 0008 0200     		.2byte	0x2
 2037 000a 7D       		.byte	0x7d
 2038 000b 00       		.sleb128 0
 2039 000c 02000000 		.4byte	.LCFI0
 2040 0010 04000000 		.4byte	.LCFI1
 2041 0014 0200     		.2byte	0x2
 2042 0016 7D       		.byte	0x7d
 2043 0017 08       		.sleb128 8
 2044 0018 04000000 		.4byte	.LCFI1
 2045 001c 2A000000 		.4byte	.LFE0
 2046 0020 0200     		.2byte	0x2
 2047 0022 77       		.byte	0x77
 2048 0023 08       		.sleb128 8
 2049 0024 00000000 		.4byte	0
 2050 0028 00000000 		.4byte	0
 2051              	.LLST1:
 2052 002c 00000000 		.4byte	.LFB1
 2053 0030 02000000 		.4byte	.LCFI2
 2054 0034 0200     		.2byte	0x2
 2055 0036 7D       		.byte	0x7d
 2056 0037 00       		.sleb128 0
 2057 0038 02000000 		.4byte	.LCFI2
 2058 003c 04000000 		.4byte	.LCFI3
 2059 0040 0200     		.2byte	0x2
 2060 0042 7D       		.byte	0x7d
 2061 0043 08       		.sleb128 8
 2062 0044 04000000 		.4byte	.LCFI3
 2063 0048 4C000000 		.4byte	.LFE1
 2064 004c 0200     		.2byte	0x2
 2065 004e 77       		.byte	0x77
 2066 004f 08       		.sleb128 8
 2067 0050 00000000 		.4byte	0
 2068 0054 00000000 		.4byte	0
 2069              	.LLST2:
 2070 0058 00000000 		.4byte	.LFB2
 2071 005c 02000000 		.4byte	.LCFI4
 2072 0060 0200     		.2byte	0x2
 2073 0062 7D       		.byte	0x7d
 2074 0063 00       		.sleb128 0
 2075 0064 02000000 		.4byte	.LCFI4
 2076 0068 04000000 		.4byte	.LCFI5
 2077 006c 0200     		.2byte	0x2
 2078 006e 7D       		.byte	0x7d
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 66


 2079 006f 08       		.sleb128 8
 2080 0070 04000000 		.4byte	.LCFI5
 2081 0074 06000000 		.4byte	.LCFI6
 2082 0078 0200     		.2byte	0x2
 2083 007a 7D       		.byte	0x7d
 2084 007b 10       		.sleb128 16
 2085 007c 06000000 		.4byte	.LCFI6
 2086 0080 4C000000 		.4byte	.LFE2
 2087 0084 0200     		.2byte	0x2
 2088 0086 77       		.byte	0x77
 2089 0087 10       		.sleb128 16
 2090 0088 00000000 		.4byte	0
 2091 008c 00000000 		.4byte	0
 2092              	.LLST3:
 2093 0090 00000000 		.4byte	.LFB3
 2094 0094 02000000 		.4byte	.LCFI7
 2095 0098 0200     		.2byte	0x2
 2096 009a 7D       		.byte	0x7d
 2097 009b 00       		.sleb128 0
 2098 009c 02000000 		.4byte	.LCFI7
 2099 00a0 04000000 		.4byte	.LCFI8
 2100 00a4 0200     		.2byte	0x2
 2101 00a6 7D       		.byte	0x7d
 2102 00a7 08       		.sleb128 8
 2103 00a8 04000000 		.4byte	.LCFI8
 2104 00ac 06000000 		.4byte	.LCFI9
 2105 00b0 0200     		.2byte	0x2
 2106 00b2 7D       		.byte	0x7d
 2107 00b3 10       		.sleb128 16
 2108 00b4 06000000 		.4byte	.LCFI9
 2109 00b8 42000000 		.4byte	.LFE3
 2110 00bc 0200     		.2byte	0x2
 2111 00be 77       		.byte	0x77
 2112 00bf 10       		.sleb128 16
 2113 00c0 00000000 		.4byte	0
 2114 00c4 00000000 		.4byte	0
 2115              	.LLST4:
 2116 00c8 00000000 		.4byte	.LFB4
 2117 00cc 02000000 		.4byte	.LCFI10
 2118 00d0 0200     		.2byte	0x2
 2119 00d2 7D       		.byte	0x7d
 2120 00d3 00       		.sleb128 0
 2121 00d4 02000000 		.4byte	.LCFI10
 2122 00d8 04000000 		.4byte	.LCFI11
 2123 00dc 0200     		.2byte	0x2
 2124 00de 7D       		.byte	0x7d
 2125 00df 04       		.sleb128 4
 2126 00e0 04000000 		.4byte	.LCFI11
 2127 00e4 10000000 		.4byte	.LFE4
 2128 00e8 0200     		.2byte	0x2
 2129 00ea 77       		.byte	0x77
 2130 00eb 04       		.sleb128 4
 2131 00ec 00000000 		.4byte	0
 2132 00f0 00000000 		.4byte	0
 2133              	.LLST5:
 2134 00f4 00000000 		.4byte	.LFB5
 2135 00f8 02000000 		.4byte	.LCFI12
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 67


 2136 00fc 0200     		.2byte	0x2
 2137 00fe 7D       		.byte	0x7d
 2138 00ff 00       		.sleb128 0
 2139 0100 02000000 		.4byte	.LCFI12
 2140 0104 04000000 		.4byte	.LCFI13
 2141 0108 0200     		.2byte	0x2
 2142 010a 7D       		.byte	0x7d
 2143 010b 04       		.sleb128 4
 2144 010c 04000000 		.4byte	.LCFI13
 2145 0110 06000000 		.4byte	.LCFI14
 2146 0114 0200     		.2byte	0x2
 2147 0116 7D       		.byte	0x7d
 2148 0117 10       		.sleb128 16
 2149 0118 06000000 		.4byte	.LCFI14
 2150 011c 14000000 		.4byte	.LFE5
 2151 0120 0200     		.2byte	0x2
 2152 0122 77       		.byte	0x77
 2153 0123 10       		.sleb128 16
 2154 0124 00000000 		.4byte	0
 2155 0128 00000000 		.4byte	0
 2156              	.LLST6:
 2157 012c 00000000 		.4byte	.LFB6
 2158 0130 02000000 		.4byte	.LCFI15
 2159 0134 0200     		.2byte	0x2
 2160 0136 7D       		.byte	0x7d
 2161 0137 00       		.sleb128 0
 2162 0138 02000000 		.4byte	.LCFI15
 2163 013c 04000000 		.4byte	.LCFI16
 2164 0140 0200     		.2byte	0x2
 2165 0142 7D       		.byte	0x7d
 2166 0143 04       		.sleb128 4
 2167 0144 04000000 		.4byte	.LCFI16
 2168 0148 18000000 		.4byte	.LFE6
 2169 014c 0200     		.2byte	0x2
 2170 014e 77       		.byte	0x77
 2171 014f 04       		.sleb128 4
 2172 0150 00000000 		.4byte	0
 2173 0154 00000000 		.4byte	0
 2174              	.LLST7:
 2175 0158 00000000 		.4byte	.LFB7
 2176 015c 02000000 		.4byte	.LCFI17
 2177 0160 0200     		.2byte	0x2
 2178 0162 7D       		.byte	0x7d
 2179 0163 00       		.sleb128 0
 2180 0164 02000000 		.4byte	.LCFI17
 2181 0168 04000000 		.4byte	.LCFI18
 2182 016c 0200     		.2byte	0x2
 2183 016e 7D       		.byte	0x7d
 2184 016f 04       		.sleb128 4
 2185 0170 04000000 		.4byte	.LCFI18
 2186 0174 18000000 		.4byte	.LFE7
 2187 0178 0200     		.2byte	0x2
 2188 017a 77       		.byte	0x77
 2189 017b 04       		.sleb128 4
 2190 017c 00000000 		.4byte	0
 2191 0180 00000000 		.4byte	0
 2192              	.LLST8:
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 68


 2193 0184 00000000 		.4byte	.LFB8
 2194 0188 02000000 		.4byte	.LCFI19
 2195 018c 0200     		.2byte	0x2
 2196 018e 7D       		.byte	0x7d
 2197 018f 00       		.sleb128 0
 2198 0190 02000000 		.4byte	.LCFI19
 2199 0194 04000000 		.4byte	.LCFI20
 2200 0198 0200     		.2byte	0x2
 2201 019a 7D       		.byte	0x7d
 2202 019b 04       		.sleb128 4
 2203 019c 04000000 		.4byte	.LCFI20
 2204 01a0 06000000 		.4byte	.LCFI21
 2205 01a4 0200     		.2byte	0x2
 2206 01a6 7D       		.byte	0x7d
 2207 01a7 10       		.sleb128 16
 2208 01a8 06000000 		.4byte	.LCFI21
 2209 01ac 20000000 		.4byte	.LFE8
 2210 01b0 0200     		.2byte	0x2
 2211 01b2 77       		.byte	0x77
 2212 01b3 10       		.sleb128 16
 2213 01b4 00000000 		.4byte	0
 2214 01b8 00000000 		.4byte	0
 2215              	.LLST9:
 2216 01bc 00000000 		.4byte	.LFB9
 2217 01c0 02000000 		.4byte	.LCFI22
 2218 01c4 0200     		.2byte	0x2
 2219 01c6 7D       		.byte	0x7d
 2220 01c7 00       		.sleb128 0
 2221 01c8 02000000 		.4byte	.LCFI22
 2222 01cc 04000000 		.4byte	.LCFI23
 2223 01d0 0200     		.2byte	0x2
 2224 01d2 7D       		.byte	0x7d
 2225 01d3 08       		.sleb128 8
 2226 01d4 04000000 		.4byte	.LCFI23
 2227 01d8 06000000 		.4byte	.LCFI24
 2228 01dc 0200     		.2byte	0x2
 2229 01de 7D       		.byte	0x7d
 2230 01df 10       		.sleb128 16
 2231 01e0 06000000 		.4byte	.LCFI24
 2232 01e4 B2000000 		.4byte	.LFE9
 2233 01e8 0200     		.2byte	0x2
 2234 01ea 77       		.byte	0x77
 2235 01eb 10       		.sleb128 16
 2236 01ec 00000000 		.4byte	0
 2237 01f0 00000000 		.4byte	0
 2238              	.LLST10:
 2239 01f4 00000000 		.4byte	.LFB10
 2240 01f8 02000000 		.4byte	.LCFI25
 2241 01fc 0200     		.2byte	0x2
 2242 01fe 7D       		.byte	0x7d
 2243 01ff 00       		.sleb128 0
 2244 0200 02000000 		.4byte	.LCFI25
 2245 0204 04000000 		.4byte	.LCFI26
 2246 0208 0200     		.2byte	0x2
 2247 020a 7D       		.byte	0x7d
 2248 020b 04       		.sleb128 4
 2249 020c 04000000 		.4byte	.LCFI26
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 69


 2250 0210 18000000 		.4byte	.LFE10
 2251 0214 0200     		.2byte	0x2
 2252 0216 77       		.byte	0x77
 2253 0217 04       		.sleb128 4
 2254 0218 00000000 		.4byte	0
 2255 021c 00000000 		.4byte	0
 2256              	.LLST11:
 2257 0220 00000000 		.4byte	.LFB11
 2258 0224 02000000 		.4byte	.LCFI27
 2259 0228 0200     		.2byte	0x2
 2260 022a 7D       		.byte	0x7d
 2261 022b 00       		.sleb128 0
 2262 022c 02000000 		.4byte	.LCFI27
 2263 0230 04000000 		.4byte	.LCFI28
 2264 0234 0200     		.2byte	0x2
 2265 0236 7D       		.byte	0x7d
 2266 0237 04       		.sleb128 4
 2267 0238 04000000 		.4byte	.LCFI28
 2268 023c 06000000 		.4byte	.LCFI29
 2269 0240 0200     		.2byte	0x2
 2270 0242 7D       		.byte	0x7d
 2271 0243 18       		.sleb128 24
 2272 0244 06000000 		.4byte	.LCFI29
 2273 0248 B4000000 		.4byte	.LFE11
 2274 024c 0200     		.2byte	0x2
 2275 024e 77       		.byte	0x77
 2276 024f 18       		.sleb128 24
 2277 0250 00000000 		.4byte	0
 2278 0254 00000000 		.4byte	0
 2279              	.LLST12:
 2280 0258 00000000 		.4byte	.LFB12
 2281 025c 02000000 		.4byte	.LCFI30
 2282 0260 0200     		.2byte	0x2
 2283 0262 7D       		.byte	0x7d
 2284 0263 00       		.sleb128 0
 2285 0264 02000000 		.4byte	.LCFI30
 2286 0268 04000000 		.4byte	.LCFI31
 2287 026c 0200     		.2byte	0x2
 2288 026e 7D       		.byte	0x7d
 2289 026f 08       		.sleb128 8
 2290 0270 04000000 		.4byte	.LCFI31
 2291 0274 06000000 		.4byte	.LCFI32
 2292 0278 0200     		.2byte	0x2
 2293 027a 7D       		.byte	0x7d
 2294 027b 18       		.sleb128 24
 2295 027c 06000000 		.4byte	.LCFI32
 2296 0280 48000000 		.4byte	.LFE12
 2297 0284 0200     		.2byte	0x2
 2298 0286 77       		.byte	0x77
 2299 0287 18       		.sleb128 24
 2300 0288 00000000 		.4byte	0
 2301 028c 00000000 		.4byte	0
 2302              	.LLST13:
 2303 0290 00000000 		.4byte	.LFB13
 2304 0294 02000000 		.4byte	.LCFI33
 2305 0298 0200     		.2byte	0x2
 2306 029a 7D       		.byte	0x7d
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 70


 2307 029b 00       		.sleb128 0
 2308 029c 02000000 		.4byte	.LCFI33
 2309 02a0 04000000 		.4byte	.LCFI34
 2310 02a4 0200     		.2byte	0x2
 2311 02a6 7D       		.byte	0x7d
 2312 02a7 08       		.sleb128 8
 2313 02a8 04000000 		.4byte	.LCFI34
 2314 02ac 06000000 		.4byte	.LCFI35
 2315 02b0 0200     		.2byte	0x2
 2316 02b2 7D       		.byte	0x7d
 2317 02b3 18       		.sleb128 24
 2318 02b4 06000000 		.4byte	.LCFI35
 2319 02b8 46000000 		.4byte	.LFE13
 2320 02bc 0200     		.2byte	0x2
 2321 02be 77       		.byte	0x77
 2322 02bf 18       		.sleb128 24
 2323 02c0 00000000 		.4byte	0
 2324 02c4 00000000 		.4byte	0
 2325              	.LLST14:
 2326 02c8 00000000 		.4byte	.LFB14
 2327 02cc 02000000 		.4byte	.LCFI36
 2328 02d0 0200     		.2byte	0x2
 2329 02d2 7D       		.byte	0x7d
 2330 02d3 00       		.sleb128 0
 2331 02d4 02000000 		.4byte	.LCFI36
 2332 02d8 04000000 		.4byte	.LCFI37
 2333 02dc 0200     		.2byte	0x2
 2334 02de 7D       		.byte	0x7d
 2335 02df 08       		.sleb128 8
 2336 02e0 04000000 		.4byte	.LCFI37
 2337 02e4 06000000 		.4byte	.LCFI38
 2338 02e8 0200     		.2byte	0x2
 2339 02ea 7D       		.byte	0x7d
 2340 02eb 10       		.sleb128 16
 2341 02ec 06000000 		.4byte	.LCFI38
 2342 02f0 38000000 		.4byte	.LFE14
 2343 02f4 0200     		.2byte	0x2
 2344 02f6 77       		.byte	0x77
 2345 02f7 10       		.sleb128 16
 2346 02f8 00000000 		.4byte	0
 2347 02fc 00000000 		.4byte	0
 2348              	.LLST15:
 2349 0300 00000000 		.4byte	.LFB15
 2350 0304 02000000 		.4byte	.LCFI39
 2351 0308 0200     		.2byte	0x2
 2352 030a 7D       		.byte	0x7d
 2353 030b 00       		.sleb128 0
 2354 030c 02000000 		.4byte	.LCFI39
 2355 0310 04000000 		.4byte	.LCFI40
 2356 0314 0200     		.2byte	0x2
 2357 0316 7D       		.byte	0x7d
 2358 0317 08       		.sleb128 8
 2359 0318 04000000 		.4byte	.LCFI40
 2360 031c 06000000 		.4byte	.LCFI41
 2361 0320 0200     		.2byte	0x2
 2362 0322 7D       		.byte	0x7d
 2363 0323 10       		.sleb128 16
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 71


 2364 0324 06000000 		.4byte	.LCFI41
 2365 0328 92000000 		.4byte	.LFE15
 2366 032c 0200     		.2byte	0x2
 2367 032e 77       		.byte	0x77
 2368 032f 10       		.sleb128 16
 2369 0330 00000000 		.4byte	0
 2370 0334 00000000 		.4byte	0
 2371              	.LLST16:
 2372 0338 00000000 		.4byte	.LFB16
 2373 033c 02000000 		.4byte	.LCFI42
 2374 0340 0200     		.2byte	0x2
 2375 0342 7D       		.byte	0x7d
 2376 0343 00       		.sleb128 0
 2377 0344 02000000 		.4byte	.LCFI42
 2378 0348 04000000 		.4byte	.LCFI43
 2379 034c 0200     		.2byte	0x2
 2380 034e 7D       		.byte	0x7d
 2381 034f 08       		.sleb128 8
 2382 0350 04000000 		.4byte	.LCFI43
 2383 0354 06000000 		.4byte	.LCFI44
 2384 0358 0200     		.2byte	0x2
 2385 035a 7D       		.byte	0x7d
 2386 035b 10       		.sleb128 16
 2387 035c 06000000 		.4byte	.LCFI44
 2388 0360 7A000000 		.4byte	.LFE16
 2389 0364 0200     		.2byte	0x2
 2390 0366 77       		.byte	0x77
 2391 0367 10       		.sleb128 16
 2392 0368 00000000 		.4byte	0
 2393 036c 00000000 		.4byte	0
 2394              	.LLST17:
 2395 0370 00000000 		.4byte	.LFB17
 2396 0374 02000000 		.4byte	.LCFI45
 2397 0378 0200     		.2byte	0x2
 2398 037a 7D       		.byte	0x7d
 2399 037b 00       		.sleb128 0
 2400 037c 02000000 		.4byte	.LCFI45
 2401 0380 04000000 		.4byte	.LCFI46
 2402 0384 0200     		.2byte	0x2
 2403 0386 7D       		.byte	0x7d
 2404 0387 04       		.sleb128 4
 2405 0388 04000000 		.4byte	.LCFI46
 2406 038c 06000000 		.4byte	.LCFI47
 2407 0390 0200     		.2byte	0x2
 2408 0392 7D       		.byte	0x7d
 2409 0393 18       		.sleb128 24
 2410 0394 06000000 		.4byte	.LCFI47
 2411 0398 C4000000 		.4byte	.LFE17
 2412 039c 0200     		.2byte	0x2
 2413 039e 77       		.byte	0x77
 2414 039f 18       		.sleb128 24
 2415 03a0 00000000 		.4byte	0
 2416 03a4 00000000 		.4byte	0
 2417              	.LLST18:
 2418 03a8 00000000 		.4byte	.LFB18
 2419 03ac 02000000 		.4byte	.LCFI48
 2420 03b0 0200     		.2byte	0x2
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 72


 2421 03b2 7D       		.byte	0x7d
 2422 03b3 00       		.sleb128 0
 2423 03b4 02000000 		.4byte	.LCFI48
 2424 03b8 04000000 		.4byte	.LCFI49
 2425 03bc 0200     		.2byte	0x2
 2426 03be 7D       		.byte	0x7d
 2427 03bf 04       		.sleb128 4
 2428 03c0 04000000 		.4byte	.LCFI49
 2429 03c4 06000000 		.4byte	.LCFI50
 2430 03c8 0200     		.2byte	0x2
 2431 03ca 7D       		.byte	0x7d
 2432 03cb 10       		.sleb128 16
 2433 03cc 06000000 		.4byte	.LCFI50
 2434 03d0 14000000 		.4byte	.LFE18
 2435 03d4 0200     		.2byte	0x2
 2436 03d6 77       		.byte	0x77
 2437 03d7 10       		.sleb128 16
 2438 03d8 00000000 		.4byte	0
 2439 03dc 00000000 		.4byte	0
 2440              		.section	.debug_aranges,"",%progbits
 2441 0000 AC000000 		.4byte	0xac
 2442 0004 0200     		.2byte	0x2
 2443 0006 00000000 		.4byte	.Ldebug_info0
 2444 000a 04       		.byte	0x4
 2445 000b 00       		.byte	0
 2446 000c 0000     		.2byte	0
 2447 000e 0000     		.2byte	0
 2448 0010 00000000 		.4byte	.LFB0
 2449 0014 2A000000 		.4byte	.LFE0-.LFB0
 2450 0018 00000000 		.4byte	.LFB1
 2451 001c 4C000000 		.4byte	.LFE1-.LFB1
 2452 0020 00000000 		.4byte	.LFB2
 2453 0024 4C000000 		.4byte	.LFE2-.LFB2
 2454 0028 00000000 		.4byte	.LFB3
 2455 002c 42000000 		.4byte	.LFE3-.LFB3
 2456 0030 00000000 		.4byte	.LFB4
 2457 0034 10000000 		.4byte	.LFE4-.LFB4
 2458 0038 00000000 		.4byte	.LFB5
 2459 003c 14000000 		.4byte	.LFE5-.LFB5
 2460 0040 00000000 		.4byte	.LFB6
 2461 0044 18000000 		.4byte	.LFE6-.LFB6
 2462 0048 00000000 		.4byte	.LFB7
 2463 004c 18000000 		.4byte	.LFE7-.LFB7
 2464 0050 00000000 		.4byte	.LFB8
 2465 0054 20000000 		.4byte	.LFE8-.LFB8
 2466 0058 00000000 		.4byte	.LFB9
 2467 005c B2000000 		.4byte	.LFE9-.LFB9
 2468 0060 00000000 		.4byte	.LFB10
 2469 0064 18000000 		.4byte	.LFE10-.LFB10
 2470 0068 00000000 		.4byte	.LFB11
 2471 006c B4000000 		.4byte	.LFE11-.LFB11
 2472 0070 00000000 		.4byte	.LFB12
 2473 0074 48000000 		.4byte	.LFE12-.LFB12
 2474 0078 00000000 		.4byte	.LFB13
 2475 007c 46000000 		.4byte	.LFE13-.LFB13
 2476 0080 00000000 		.4byte	.LFB14
 2477 0084 38000000 		.4byte	.LFE14-.LFB14
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 73


 2478 0088 00000000 		.4byte	.LFB15
 2479 008c 92000000 		.4byte	.LFE15-.LFB15
 2480 0090 00000000 		.4byte	.LFB16
 2481 0094 7A000000 		.4byte	.LFE16-.LFB16
 2482 0098 00000000 		.4byte	.LFB17
 2483 009c C4000000 		.4byte	.LFE17-.LFB17
 2484 00a0 00000000 		.4byte	.LFB18
 2485 00a4 14000000 		.4byte	.LFE18-.LFB18
 2486 00a8 00000000 		.4byte	0
 2487 00ac 00000000 		.4byte	0
 2488              		.section	.debug_ranges,"",%progbits
 2489              	.Ldebug_ranges0:
 2490 0000 00000000 		.4byte	.LFB0
 2491 0004 2A000000 		.4byte	.LFE0
 2492 0008 00000000 		.4byte	.LFB1
 2493 000c 4C000000 		.4byte	.LFE1
 2494 0010 00000000 		.4byte	.LFB2
 2495 0014 4C000000 		.4byte	.LFE2
 2496 0018 00000000 		.4byte	.LFB3
 2497 001c 42000000 		.4byte	.LFE3
 2498 0020 00000000 		.4byte	.LFB4
 2499 0024 10000000 		.4byte	.LFE4
 2500 0028 00000000 		.4byte	.LFB5
 2501 002c 14000000 		.4byte	.LFE5
 2502 0030 00000000 		.4byte	.LFB6
 2503 0034 18000000 		.4byte	.LFE6
 2504 0038 00000000 		.4byte	.LFB7
 2505 003c 18000000 		.4byte	.LFE7
 2506 0040 00000000 		.4byte	.LFB8
 2507 0044 20000000 		.4byte	.LFE8
 2508 0048 00000000 		.4byte	.LFB9
 2509 004c B2000000 		.4byte	.LFE9
 2510 0050 00000000 		.4byte	.LFB10
 2511 0054 18000000 		.4byte	.LFE10
 2512 0058 00000000 		.4byte	.LFB11
 2513 005c B4000000 		.4byte	.LFE11
 2514 0060 00000000 		.4byte	.LFB12
 2515 0064 48000000 		.4byte	.LFE12
 2516 0068 00000000 		.4byte	.LFB13
 2517 006c 46000000 		.4byte	.LFE13
 2518 0070 00000000 		.4byte	.LFB14
 2519 0074 38000000 		.4byte	.LFE14
 2520 0078 00000000 		.4byte	.LFB15
 2521 007c 92000000 		.4byte	.LFE15
 2522 0080 00000000 		.4byte	.LFB16
 2523 0084 7A000000 		.4byte	.LFE16
 2524 0088 00000000 		.4byte	.LFB17
 2525 008c C4000000 		.4byte	.LFE17
 2526 0090 00000000 		.4byte	.LFB18
 2527 0094 14000000 		.4byte	.LFE18
 2528 0098 00000000 		.4byte	0
 2529 009c 00000000 		.4byte	0
 2530              		.section	.debug_line,"",%progbits
 2531              	.Ldebug_line0:
 2532 0000 5F020000 		.section	.debug_str,"MS",%progbits,1
 2532      02004800 
 2532      00000201 
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 74


 2532      FB0E0D00 
 2532      01010101 
 2533              	.LASF6:
 2534 0000 6C6F6E67 		.ascii	"long long int\000"
 2534      206C6F6E 
 2534      6720696E 
 2534      7400
 2535              	.LASF45:
 2536 000e 55415254 		.ascii	"UART_TEST_SendBreak\000"
 2536      5F544553 
 2536      545F5365 
 2536      6E644272 
 2536      65616B00 
 2537              	.LASF17:
 2538 0022 72656733 		.ascii	"reg32\000"
 2538      3200
 2539              	.LASF25:
 2540 0028 55415254 		.ascii	"UART_TEST_EnableTxInt\000"
 2540      5F544553 
 2540      545F456E 
 2540      61626C65 
 2540      5478496E 
 2541              	.LASF32:
 2542 003e 55415254 		.ascii	"UART_TEST_ReadControlRegister\000"
 2542      5F544553 
 2542      545F5265 
 2542      6164436F 
 2542      6E74726F 
 2543              	.LASF14:
 2544 005c 63686172 		.ascii	"char8\000"
 2544      3800
 2545              	.LASF37:
 2546 0062 55415254 		.ascii	"UART_TEST_PutString\000"
 2546      5F544553 
 2546      545F5075 
 2546      74537472 
 2546      696E6700 
 2547              	.LASF47:
 2548 0076 746D7053 		.ascii	"tmpStat\000"
 2548      74617400 
 2549              	.LASF42:
 2550 007e 55415254 		.ascii	"UART_TEST_PutCRLF\000"
 2550      5F544553 
 2550      545F5075 
 2550      7443524C 
 2550      4600
 2551              	.LASF3:
 2552 0090 73686F72 		.ascii	"short unsigned int\000"
 2552      7420756E 
 2552      7369676E 
 2552      65642069 
 2552      6E7400
 2553              	.LASF56:
 2554 00a3 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\UART_TEST.c\000"
 2554      6E657261 
 2554      7465645F 
 2554      536F7572 
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 75


 2554      63655C50 
 2555              	.LASF50:
 2556 00c8 61646472 		.ascii	"addressMode\000"
 2556      6573734D 
 2556      6F646500 
 2557              	.LASF34:
 2558 00d4 55415254 		.ascii	"UART_TEST_PutChar\000"
 2558      5F544553 
 2558      545F5075 
 2558      74436861 
 2558      7200
 2559              	.LASF38:
 2560 00e6 73747269 		.ascii	"string\000"
 2560      6E6700
 2561              	.LASF40:
 2562 00ed 55415254 		.ascii	"UART_TEST_PutArray\000"
 2562      5F544553 
 2562      545F5075 
 2562      74417272 
 2562      617900
 2563              	.LASF20:
 2564 0100 55415254 		.ascii	"UART_TEST_Init\000"
 2564      5F544553 
 2564      545F496E 
 2564      697400
 2565              	.LASF12:
 2566 010f 666C6F61 		.ascii	"float\000"
 2566      7400
 2567              	.LASF35:
 2568 0115 6C6F635F 		.ascii	"loc_txBufferWrite\000"
 2568      74784275 
 2568      66666572 
 2568      57726974 
 2568      6500
 2569              	.LASF43:
 2570 0127 73697A65 		.ascii	"size\000"
 2570      00
 2571              	.LASF54:
 2572 012c 55415254 		.ascii	"UART_TEST_txBufferWrite\000"
 2572      5F544553 
 2572      545F7478 
 2572      42756666 
 2572      65725772 
 2573              	.LASF16:
 2574 0144 72656738 		.ascii	"reg8\000"
 2574      00
 2575              	.LASF5:
 2576 0149 6C6F6E67 		.ascii	"long unsigned int\000"
 2576      20756E73 
 2576      69676E65 
 2576      6420696E 
 2576      7400
 2577              	.LASF9:
 2578 015b 75696E74 		.ascii	"uint8\000"
 2578      3800
 2579              	.LASF28:
 2580 0161 636F6E74 		.ascii	"control\000"
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 76


 2580      726F6C00 
 2581              	.LASF33:
 2582 0169 55415254 		.ascii	"UART_TEST_ReadTxStatus\000"
 2582      5F544553 
 2582      545F5265 
 2582      61645478 
 2582      53746174 
 2583              	.LASF41:
 2584 0180 62797465 		.ascii	"byteCount\000"
 2584      436F756E 
 2584      7400
 2585              	.LASF23:
 2586 018a 656E6162 		.ascii	"enableInterrupts\000"
 2586      6C65496E 
 2586      74657272 
 2586      75707473 
 2586      00
 2587              	.LASF27:
 2588 019b 55415254 		.ascii	"UART_TEST_SetTxInterruptMode\000"
 2588      5F544553 
 2588      545F5365 
 2588      74547849 
 2588      6E746572 
 2589              	.LASF21:
 2590 01b8 55415254 		.ascii	"UART_TEST_Enable\000"
 2590      5F544553 
 2590      545F456E 
 2590      61626C65 
 2590      00
 2591              	.LASF13:
 2592 01c9 646F7562 		.ascii	"double\000"
 2592      6C6500
 2593              	.LASF29:
 2594 01d0 696E7453 		.ascii	"intSrc\000"
 2594      726300
 2595              	.LASF39:
 2596 01d7 6275665F 		.ascii	"buf_index\000"
 2596      696E6465 
 2596      7800
 2597              	.LASF10:
 2598 01e1 75696E74 		.ascii	"uint16\000"
 2598      313600
 2599              	.LASF11:
 2600 01e8 75696E74 		.ascii	"uint32\000"
 2600      333200
 2601              	.LASF1:
 2602 01ef 756E7369 		.ascii	"unsigned char\000"
 2602      676E6564 
 2602      20636861 
 2602      7200
 2603              	.LASF8:
 2604 01fd 756E7369 		.ascii	"unsigned int\000"
 2604      676E6564 
 2604      20696E74 
 2604      00
 2605              	.LASF53:
 2606 020a 55415254 		.ascii	"UART_TEST_txBufferRead\000"
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 77


 2606      5F544553 
 2606      545F7478 
 2606      42756666 
 2606      65725265 
 2607              	.LASF49:
 2608 0221 55415254 		.ascii	"UART_TEST_SetTxAddressMode\000"
 2608      5F544553 
 2608      545F5365 
 2608      74547841 
 2608      64647265 
 2609              	.LASF7:
 2610 023c 6C6F6E67 		.ascii	"long long unsigned int\000"
 2610      206C6F6E 
 2610      6720756E 
 2610      7369676E 
 2610      65642069 
 2611              	.LASF36:
 2612 0253 6C6F635F 		.ascii	"loc_txBufferRead\000"
 2612      74784275 
 2612      66666572 
 2612      52656164 
 2612      00
 2613              	.LASF19:
 2614 0264 55415254 		.ascii	"UART_TEST_Start\000"
 2614      5F544553 
 2614      545F5374 
 2614      61727400 
 2615              	.LASF51:
 2616 0274 55415254 		.ascii	"UART_TEST_initVar\000"
 2616      5F544553 
 2616      545F696E 
 2616      69745661 
 2616      7200
 2617              	.LASF18:
 2618 0286 73697A65 		.ascii	"sizetype\000"
 2618      74797065 
 2618      00
 2619              	.LASF22:
 2620 028f 55415254 		.ascii	"UART_TEST_Stop\000"
 2620      5F544553 
 2620      545F5374 
 2620      6F7000
 2621              	.LASF31:
 2622 029e 74784461 		.ascii	"txDataByte\000"
 2622      74614279 
 2622      746500
 2623              	.LASF48:
 2624 02a9 74785F70 		.ascii	"tx_period\000"
 2624      6572696F 
 2624      6400
 2625              	.LASF15:
 2626 02b3 63686172 		.ascii	"char\000"
 2626      00
 2627              	.LASF46:
 2628 02b8 7265744D 		.ascii	"retMode\000"
 2628      6F646500 
 2629              	.LASF2:
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 78


 2630 02c0 73686F72 		.ascii	"short int\000"
 2630      7420696E 
 2630      7400
 2631              	.LASF26:
 2632 02ca 55415254 		.ascii	"UART_TEST_DisableTxInt\000"
 2632      5F544553 
 2632      545F4469 
 2632      7361626C 
 2632      65547849 
 2633              	.LASF55:
 2634 02e1 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 2634      4320342E 
 2634      372E3320 
 2634      32303133 
 2634      30333132 
 2635 0314 616E6368 		.ascii	"anch revision 196615]\000"
 2635      20726576 
 2635      6973696F 
 2635      6E203139 
 2635      36363135 
 2636              	.LASF44:
 2637 032a 55415254 		.ascii	"UART_TEST_ClearTxBuffer\000"
 2637      5F544553 
 2637      545F436C 
 2637      65617254 
 2637      78427566 
 2638              	.LASF4:
 2639 0342 6C6F6E67 		.ascii	"long int\000"
 2639      20696E74 
 2639      00
 2640              	.LASF57:
 2641 034b 583A5C72 		.ascii	"X:\\roboticscode\\trunk\\Servo\\SW\\ServoMotor\\Ser"
 2641      6F626F74 
 2641      69637363 
 2641      6F64655C 
 2641      7472756E 
 2642 0378 766F4D6F 		.ascii	"voMotor.cydsn\000"
 2642      746F722E 
 2642      63796473 
 2642      6E00
 2643              	.LASF0:
 2644 0386 7369676E 		.ascii	"signed char\000"
 2644      65642063 
 2644      68617200 
 2645              	.LASF30:
 2646 0392 55415254 		.ascii	"UART_TEST_WriteTxData\000"
 2646      5F544553 
 2646      545F5772 
 2646      69746554 
 2646      78446174 
 2647              	.LASF58:
 2648 03a8 55415254 		.ascii	"UART_TEST_GetTxBufferSize\000"
 2648      5F544553 
 2648      545F4765 
 2648      74547842 
 2648      75666665 
 2649              	.LASF52:
ARM GAS  C:\Users\Martin\AppData\Local\Temp\cck4pyfV.s 			page 79


 2650 03c2 55415254 		.ascii	"UART_TEST_txBuffer\000"
 2650      5F544553 
 2650      545F7478 
 2650      42756666 
 2650      657200
 2651              	.LASF24:
 2652 03d5 55415254 		.ascii	"UART_TEST_WriteControlRegister\000"
 2652      5F544553 
 2652      545F5772 
 2652      69746543 
 2652      6F6E7472 
 2653              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
